{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TasksLister.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./Task/Task\";\nimport { flexbox } from \"../../style/mixins\";\nimport { useSelector } from \"react-redux\";\n\nconst TasksLister = ({\n  arrayToMap\n}) => {\n  const toggleSort = useSelector(state => state.toggleSortReducer);\n\n  if (toggleSort) {\n    //<--IF (toggleSort === true) THE TASKS SORTED BY DEADLINE-->//\n    const compare = (currentTask, nextTask) => {\n      const timeCurrent = currentTask.dateAndTimeSum;\n      const timeNext = nextTask.dateAndTimeSum;\n      let comparison = 0;\n\n      if (timeCurrent > timeNext) {\n        comparison = 1;\n      } else if (timeCurrent < timeNext) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    arrayToMap.sort(compare);\n    console.log(\"arrayToMapaftertrue\", arrayToMap);\n  } else {\n    const compare = (a, b) => {\n      const urgencyNumberA = () => {\n        switch (a.urgency) {\n          case \"low\":\n            return 0;\n            break;\n\n          case \"regular\":\n            return 1;\n            break;\n\n          case \"high\":\n            return 2;\n            break;\n        }\n      };\n\n      const urgencyNumberB = () => {\n        switch (b.urgency) {\n          case \"low\":\n            return 0;\n            break;\n\n          case \"regular\":\n            return 1;\n            break;\n\n          case \"high\":\n            return 2;\n            break;\n        }\n      };\n\n      const urgencyA = urgencyNumberA();\n      const urgencyB = urgencyNumberB();\n      let comparison = 0;\n\n      if (urgencyA < urgencyB) {\n        comparison = 1;\n      } else if (urgencyA > urgencyB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    arrayToMap.sort(compare);\n    console.log(\"arrayToMapafterfalse\", arrayToMap);\n  } //<--IF (toggleSort === false) THE TASKS SORTED BY URGENCY-->//\n  // <----------------------------->\n\n\n  const tasksMap = () => {\n    return arrayToMap.map((task, index) => {\n      return React.createElement(Task, {\n        id: task.id,\n        key: index,\n        deadlineISO: task.deadlineISO,\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline,\n        colorway: task.colorway,\n        urgency: task.urgency,\n        status: task.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, tasksMap());\n};\n\nexport default TasksLister;\nconst TasksList = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  align-content: flex-start;\n  padding: 20px;\n  flex-wrap: wrap;\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TasksLister.jsx"],"names":["React","useState","useEffect","styled","Task","flexbox","useSelector","TasksLister","arrayToMap","toggleSort","state","toggleSortReducer","compare","currentTask","nextTask","timeCurrent","dateAndTimeSum","timeNext","comparison","sort","console","log","a","b","urgencyNumberA","urgency","urgencyNumberB","urgencyA","urgencyB","tasksMap","map","task","index","id","deadlineISO","title","description","deadline","colorway","status","TasksList","div","jc","ai"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./Task/Task\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TasksLister = ({ arrayToMap }) => {\r\n  const toggleSort = useSelector(state => state.toggleSortReducer);\r\n\r\n  if (toggleSort) {\r\n    //<--IF (toggleSort === true) THE TASKS SORTED BY DEADLINE-->//\r\n    const compare = (currentTask, nextTask) => {\r\n      const timeCurrent = currentTask.dateAndTimeSum;\r\n      const timeNext = nextTask.dateAndTimeSum;\r\n\r\n      let comparison = 0;\r\n      if (timeCurrent > timeNext) {\r\n        comparison = 1;\r\n      } else if (timeCurrent < timeNext) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    arrayToMap.sort(compare);\r\n    console.log(\"arrayToMapaftertrue\", arrayToMap);\r\n  } else {\r\n    const compare = (a, b) => {\r\n      const urgencyNumberA = () => {\r\n        switch (a.urgency) {\r\n          case \"low\":\r\n            return 0;\r\n            break;\r\n          case \"regular\":\r\n            return 1;\r\n            break;\r\n          case \"high\":\r\n            return 2;\r\n            break;\r\n        }\r\n      };\r\n\r\n      const urgencyNumberB = () => {\r\n        switch (b.urgency) {\r\n          case \"low\":\r\n            return 0;\r\n            break;\r\n          case \"regular\":\r\n            return 1;\r\n            break;\r\n          case \"high\":\r\n            return 2;\r\n            break;\r\n        }\r\n      };\r\n\r\n      const urgencyA = urgencyNumberA();\r\n      const urgencyB = urgencyNumberB();\r\n\r\n      let comparison = 0;\r\n      if (urgencyA < urgencyB) {\r\n        comparison = 1;\r\n      } else if (urgencyA > urgencyB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    arrayToMap.sort(compare);\r\n    console.log(\"arrayToMapafterfalse\", arrayToMap);\r\n  }\r\n\r\n  //<--IF (toggleSort === false) THE TASKS SORTED BY URGENCY-->//\r\n\r\n  // <----------------------------->\r\n\r\n  const tasksMap = () => {\r\n    return arrayToMap.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          deadlineISO={task.deadlineISO}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          urgency={task.urgency}\r\n          status={task.status}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return <TasksList>{tasksMap()}</TasksList>;\r\n};\r\n\r\nexport default TasksLister;\r\n\r\nconst TasksList = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  align-content: flex-start;\r\n  padding: 20px;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}