{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TasksLister.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./Task/Task\";\nimport { flexbox } from \"../../style/mixins\";\n\nconst TasksLister = ({\n  arrayToMap,\n  firstButtonText,\n  secondButtonText,\n  sortTaskBy\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        refreshCounter = _useState2[0],\n        setRefreshCounter = _useState2[1]; //<--SORTING THE TASKS BY DEADLINE-->//\n\n\n  if (sortTaskBy === \"deadline\") {\n    const compare = (a, b) => {\n      const timeA = a.dateAndTimeSum;\n      const timeB = b.dateAndTimeSum;\n      let comparison = 0;\n\n      if (timeA > timeB) {\n        comparison = 1;\n      } else if (timeA < timeB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    arrayToMap.sort(compare);\n  } // else {\n  //   const compare = (a, b) => {\n  //     const urgencyA = a.urgency;\n  //     const urgencyB = b.urgency;\n  //     let comparison = 0;\n  //     if (timeA > timeB) {\n  //       comparison = 1;\n  //     } else if (timeA < timeB) {\n  //       comparison = -1;\n  //     }\n  //     return comparison;\n  //   };\n  //   arrayToMap.sort(compare);\n  // }\n  // <----------------------------->\n\n\n  const tasksMap = () => {\n    return arrayToMap.map((task, index) => {\n      return React.createElement(Task, {\n        id: task.id,\n        key: index,\n        dayText: task.dayText,\n        monthText: task.monthText,\n        dayNumber: task.dayNumber,\n        dateAndTimeSum: task.dateAndTimeSum,\n        time: task.time,\n        year: task.year,\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline,\n        colorway: task.colorway,\n        urgency: task.urgency,\n        status: task.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, tasksMap());\n};\n\nexport default TasksLister;\nconst TasksList = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  align-content: flex-start;\n  padding: 20px;\n  flex-wrap: wrap;\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TasksLister.jsx"],"names":["React","useState","styled","Task","flexbox","TasksLister","arrayToMap","firstButtonText","secondButtonText","sortTaskBy","refreshCounter","setRefreshCounter","compare","a","b","timeA","dateAndTimeSum","timeB","comparison","sort","tasksMap","map","task","index","id","dayText","monthText","dayNumber","time","year","title","description","deadline","colorway","urgency","status","TasksList","div","jc","ai"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,UADmB;AAEnBC,EAAAA,eAFmB;AAGnBC,EAAAA,gBAHmB;AAInBC,EAAAA;AAJmB,CAAD,KAKd;AAAA,oBACwCR,QAAQ,CAAC,CAAD,CADhD;AAAA;AAAA,QACGS,cADH;AAAA,QACmBC,iBADnB,kBAGJ;;;AACA,MAAIF,UAAU,KAAK,UAAnB,EAA+B;AAC7B,UAAMG,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAMC,KAAK,GAAGF,CAAC,CAACG,cAAhB;AACA,YAAMC,KAAK,GAAGH,CAAC,CAACE,cAAhB;AAEA,UAAIE,UAAU,GAAG,CAAjB;;AACA,UAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACjBC,QAAAA,UAAU,GAAG,CAAb;AACD,OAFD,MAEO,IAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACxBC,QAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,aAAOA,UAAP;AACD,KAXD;;AAaAZ,IAAAA,UAAU,CAACa,IAAX,CAAgBP,OAAhB;AACD,GAnBG,CAoBJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,WAAOd,UAAU,CAACe,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,aACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,GAAG,EAAED,KAFP;AAGE,QAAA,OAAO,EAAED,IAAI,CAACG,OAHhB;AAIE,QAAA,SAAS,EAAEH,IAAI,CAACI,SAJlB;AAKE,QAAA,SAAS,EAAEJ,IAAI,CAACK,SALlB;AAME,QAAA,cAAc,EAAEL,IAAI,CAACN,cANvB;AAOE,QAAA,IAAI,EAAEM,IAAI,CAACM,IAPb;AAQE,QAAA,IAAI,EAAEN,IAAI,CAACO,IARb;AASE,QAAA,KAAK,EAAEP,IAAI,CAACQ,KATd;AAUE,QAAA,WAAW,EAAER,IAAI,CAACS,WAVpB;AAWE,QAAA,QAAQ,EAAET,IAAI,CAACU,QAXjB;AAYE,QAAA,QAAQ,EAAEV,IAAI,CAACW,QAZjB;AAaE,QAAA,OAAO,EAAEX,IAAI,CAACY,OAbhB;AAcE,QAAA,MAAM,EAAEZ,IAAI,CAACa,MAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAkBD,KAnBM,CAAP;AAoBD,GArBD;;AAuBA,SAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYf,QAAQ,EAApB,CAAP;AACD,CAnED;;AAqEA,eAAef,WAAf;AAEA,MAAM+B,SAAS,GAAGlC,MAAM,CAACmC,GAAI;IACzBjC,OAAO,CAAC;AAAEkC,EAAAA,EAAE,EAAE,YAAN;AAAoBC,EAAAA,EAAE,EAAE;AAAxB,CAAD,CAAyC;;;;;;;CADpD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./Task/Task\";\r\nimport { flexbox } from \"../../style/mixins\";\r\n\r\nconst TasksLister = ({\r\n  arrayToMap,\r\n  firstButtonText,\r\n  secondButtonText,\r\n  sortTaskBy\r\n}) => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  //<--SORTING THE TASKS BY DEADLINE-->//\r\n  if (sortTaskBy === \"deadline\") {\r\n    const compare = (a, b) => {\r\n      const timeA = a.dateAndTimeSum;\r\n      const timeB = b.dateAndTimeSum;\r\n\r\n      let comparison = 0;\r\n      if (timeA > timeB) {\r\n        comparison = 1;\r\n      } else if (timeA < timeB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    arrayToMap.sort(compare);\r\n  }\r\n  // else {\r\n  //   const compare = (a, b) => {\r\n  //     const urgencyA = a.urgency;\r\n  //     const urgencyB = b.urgency;\r\n\r\n  //     let comparison = 0;\r\n  //     if (timeA > timeB) {\r\n  //       comparison = 1;\r\n  //     } else if (timeA < timeB) {\r\n  //       comparison = -1;\r\n  //     }\r\n  //     return comparison;\r\n  //   };\r\n\r\n  //   arrayToMap.sort(compare);\r\n  // }\r\n  // <----------------------------->\r\n\r\n  const tasksMap = () => {\r\n    return arrayToMap.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          dayText={task.dayText}\r\n          monthText={task.monthText}\r\n          dayNumber={task.dayNumber}\r\n          dateAndTimeSum={task.dateAndTimeSum}\r\n          time={task.time}\r\n          year={task.year}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          urgency={task.urgency}\r\n          status={task.status}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return <TasksList>{tasksMap()}</TasksList>;\r\n};\r\n\r\nexport default TasksLister;\r\n\r\nconst TasksList = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  align-content: flex-start;\r\n  padding: 20px;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}