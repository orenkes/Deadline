{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\nconst tasksArrays = useSelector(state => state.updateArraysReducer);\nconst todoArray = tasksArrays.todoArray;\nconst inProgressArray = tasksArrays.inProgressArray;\nconst completedTasksArray = tasksArrays.completedTasksArray;\nconst dispatch = useDispatch(); //---UPDATEING DATABASE---///\n\nexport const updatingArraysInDataBase = async (arrayToRemoveFrom, arrayToAddInto) => {\n  const updatedArrays = {\n    arrayToRemoveFrom,\n    arrayToAddInto\n  };\n  const putMethod = {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"auth-token\": localStorage.getItem(\"auth-token\")\n    },\n    body: JSON.stringify(updatedArrays) // We send data in JSON format\n\n  };\n  await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n};\nexport const deletingFromArrayInDataBase = async arrayToRemoveFrom => {\n  const updatedArray = {\n    arrayToRemoveFrom\n  };\n  const putMethod = {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"auth-token\": localStorage.getItem(\"auth-token\")\n    },\n    body: JSON.stringify(updatedArray) // We send data in JSON format\n\n  };\n  await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/removetask`, putMethod);\n}; //---UPDATING STATE ARRAYS--//\n\nexport const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination, deleteTask, taskId, setCardIsFlipped) => {\n  const selectedTask = _.remove(arrayToRemoveFrom, n => {\n    return n.id === taskId;\n  });\n\n  console.log(\"selectedtask: \", selectedTask[0]);\n\n  if (deleteTask === true) {\n    setCardIsFlipped(false);\n    dispatch(updateArraysAction(arrayToRemoveFrom));\n    return;\n  }\n\n  const newStatusSelectedTask = _objectSpread({}, selectedTask[0], {\n    status: destination\n  });\n\n  arrayToAddInto.push(newStatusSelectedTask);\n  const updatedArrays = {\n    arrayToRemoveFrom,\n    arrayToAddInto\n  };\n  setCardIsFlipped(false);\n  dispatch(updateArraysAction(updatedArrays));\n}; //---UPDATING FIRST MOVE--//\n\nexport const handleFirstMove = status => {\n  switch (status) {\n    case \"todo\":\n      //todoArray, inProgressArray\n      selectChange(todoArray, inProgressArray, \"inProgress\");\n      updatingArraysInDataBase(todoArray, inProgressArray);\n      break;\n\n    case \"inProgress\":\n      //inProgressArray, completedTasksArray\n      selectChange(inProgressArray, completedTasksArray, \"done\");\n      updatingArraysInDataBase(inProgressArray, completedTasksArray);\n      break;\n\n    case \"done\":\n      //completedTasksArray, inProgressArray\n      selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n      updatingArraysInDataBase(completedTasksArray, inProgressArray);\n      break;\n\n    default:\n      break;\n  }\n}; //---UPDATING SECOND MOVE--//\n\nexport const handleSecondMove = status => {\n  switch (status) {\n    case \"todo\":\n      //todoArray,completedTasksArray\n      selectChange(todoArray, completedTasksArray, \"done\");\n      updatingArraysInDataBase(todoArray, completedTasksArray);\n      break;\n\n    case \"inProgress\":\n      //inProgressArray,todoArray\n      selectChange(inProgressArray, todoArray, \"todo\");\n      updatingArraysInDataBase(inProgressArray, todoArray);\n      break;\n\n    case \"done\":\n      //completedTasksArray,todoArray\n      selectChange(completedTasksArray, todoArray, \"todo\");\n      updatingArraysInDataBase(completedTasksArray, todoArray);\n      break;\n\n    default:\n      break;\n  }\n}; //---HANDLE DELETED TASK--//\n\nexport const handleDelete = status => {\n  switch (status) {\n    case \"todo\":\n      //todoArray\n      selectChange(todoArray, null, null, true);\n      deletingFromArrayInDataBase(todoArray);\n      break;\n\n    case \"inProgress\":\n      //inProgressArray\n      selectChange(todoArray, null, null, true);\n      deletingFromArrayInDataBase(todoArray);\n      break;\n\n    case \"done\":\n      //completedTasksArray\n      selectChange(todoArray, null, null, true);\n      deletingFromArrayInDataBase(todoArray);\n      break;\n\n    default:\n      break;\n  }\n};","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/taskLogic.js"],"names":["useDispatch","useSelector","_","updateArraysAction","tasksArrays","state","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","dispatch","updatingArraysInDataBase","arrayToRemoveFrom","arrayToAddInto","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","deletingFromArrayInDataBase","updatedArray","selectChange","destination","deleteTask","taskId","setCardIsFlipped","selectedTask","remove","n","id","console","log","newStatusSelectedTask","status","push","handleFirstMove","handleSecondMove","handleDelete"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\nconst todoArray = tasksArrays.todoArray;\r\nconst inProgressArray = tasksArrays.inProgressArray;\r\nconst completedTasksArray = tasksArrays.completedTasksArray;\r\n\r\nconst dispatch = useDispatch();\r\n\r\n//---UPDATEING DATABASE---///\r\n\r\nexport const updatingArraysInDataBase = async (\r\n  arrayToRemoveFrom,\r\n  arrayToAddInto\r\n) => {\r\n  const updatedArrays = {\r\n    arrayToRemoveFrom,\r\n    arrayToAddInto\r\n  };\r\n\r\n  const putMethod = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"auth-token\": localStorage.getItem(\"auth-token\")\r\n    },\r\n    body: JSON.stringify(updatedArrays) // We send data in JSON format\r\n  };\r\n\r\n  await fetch(\r\n    `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n    putMethod\r\n  );\r\n};\r\nexport const deletingFromArrayInDataBase = async arrayToRemoveFrom => {\r\n  const updatedArray = {\r\n    arrayToRemoveFrom\r\n  };\r\n\r\n  const putMethod = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"auth-token\": localStorage.getItem(\"auth-token\")\r\n    },\r\n    body: JSON.stringify(updatedArray) // We send data in JSON format\r\n  };\r\n\r\n  await fetch(\r\n    `https://tracker-database.youngwebdevs.now.sh/dashboard/removetask`,\r\n    putMethod\r\n  );\r\n};\r\n\r\n//---UPDATING STATE ARRAYS--//\r\n\r\nexport const selectChange = (\r\n  arrayToRemoveFrom,\r\n  arrayToAddInto,\r\n  destination,\r\n  deleteTask,\r\n  taskId,\r\n  setCardIsFlipped\r\n) => {\r\n  const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n    return n.id === taskId;\r\n  });\r\n  console.log(\"selectedtask: \", selectedTask[0]);\r\n\r\n  if (deleteTask === true) {\r\n    setCardIsFlipped(false);\r\n    dispatch(updateArraysAction(arrayToRemoveFrom));\r\n    return;\r\n  }\r\n\r\n  const newStatusSelectedTask = {\r\n    ...selectedTask[0],\r\n    status: destination\r\n  };\r\n  arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n  const updatedArrays = {\r\n    arrayToRemoveFrom,\r\n    arrayToAddInto\r\n  };\r\n\r\n  setCardIsFlipped(false);\r\n  dispatch(updateArraysAction(updatedArrays));\r\n};\r\n\r\n//---UPDATING FIRST MOVE--//\r\n\r\nexport const handleFirstMove = status => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray, inProgressArray\r\n      selectChange(todoArray, inProgressArray, \"inProgress\");\r\n      updatingArraysInDataBase(todoArray, inProgressArray);\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray, completedTasksArray\r\n      selectChange(inProgressArray, completedTasksArray, \"done\");\r\n      updatingArraysInDataBase(inProgressArray, completedTasksArray);\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray, inProgressArray\r\n      selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n      updatingArraysInDataBase(completedTasksArray, inProgressArray);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n//---UPDATING SECOND MOVE--//\r\n\r\nexport const handleSecondMove = status => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray,completedTasksArray\r\n      selectChange(todoArray, completedTasksArray, \"done\");\r\n      updatingArraysInDataBase(todoArray, completedTasksArray);\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray,todoArray\r\n      selectChange(inProgressArray, todoArray, \"todo\");\r\n      updatingArraysInDataBase(inProgressArray, todoArray);\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray,todoArray\r\n      selectChange(completedTasksArray, todoArray, \"todo\");\r\n      updatingArraysInDataBase(completedTasksArray, todoArray);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n//---HANDLE DELETED TASK--//\r\n\r\nexport const handleDelete = status => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray\r\n      selectChange(todoArray, null, null, true);\r\n      deletingFromArrayInDataBase(todoArray);\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray\r\n      selectChange(todoArray, null, null, true);\r\n      deletingFromArrayInDataBase(todoArray);\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray\r\n      selectChange(todoArray, null, null, true);\r\n      deletingFromArrayInDataBase(todoArray);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}