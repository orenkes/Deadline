{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  align-content: flex-start;\\n  padding: 20px;\\n  flex-wrap: wrap;\\n  height: 100%;\\n  width: 100%;\\n  overflow-y: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import Task from\"./Task/Task\";import{flexbox}from\"../../style/mixins\";import{useSelector}from\"react-redux\";var TasksLister=function TasksLister(_ref){var arrayToMap=_ref.arrayToMap;var toggleSort=useSelector(function(state){return state.toggleSortReducer;});if(toggleSort){//<--IF (toggleSort === true) THE TASKS SORTED BY DEADLINE-->//\nvar compare=function compare(currentTask,nextTask){var timeCurrent=currentTask.dateAndTimeSum;var timeNext=nextTask.dateAndTimeSum;var comparison=0;if(timeCurrent>timeNext){comparison=1;}else if(timeCurrent<timeNext){comparison=-1;}return comparison;};arrayToMap.sort(compare);console.log(\"arrayToMapaftertrue\",arrayToMap);}else{var _compare=function _compare(a,b){var urgencyNumberA=function urgencyNumberA(){switch(a.urgency){case\"low\":return 0;break;case\"regular\":return 1;break;case\"high\":return 2;break;}};var urgencyNumberB=function urgencyNumberB(){switch(b.urgency){case\"low\":return 0;break;case\"regular\":return 1;break;case\"high\":return 2;break;}};var urgencyA=urgencyNumberA();var urgencyB=urgencyNumberB();var comparison=0;if(urgencyA<urgencyB){comparison=1;}else if(urgencyA>urgencyB){comparison=-1;}return comparison;};arrayToMap.sort(_compare);console.log(\"arrayToMapafterfalse\",arrayToMap);}//<--IF (toggleSort === false) THE TASKS SORTED BY URGENCY-->//\n// <----------------------------->\nvar tasksMap=function tasksMap(){return arrayToMap.map(function(task,index){return React.createElement(Task,{id:task.id,key:index,deadlineISO:task.deadlineISO,dateAndTimeSum:task.dateAndTimeSum,title:task.title,description:task.description,deadline:task.deadline,colorway:task.colorway,urgency:task.urgency,status:task.status});});};return React.createElement(TasksList,null,tasksMap());};export default TasksLister;var TasksList=styled.div(_templateObject(),flexbox({jc:\"flex-start\",ai:\"flex-start\"}));","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TasksLister.jsx"],"names":["React","useState","useEffect","styled","Task","flexbox","useSelector","TasksLister","arrayToMap","toggleSort","state","toggleSortReducer","compare","currentTask","nextTask","timeCurrent","dateAndTimeSum","timeNext","comparison","sort","console","log","a","b","urgencyNumberA","urgency","urgencyNumberB","urgencyA","urgencyB","tasksMap","map","task","index","id","deadlineISO","title","description","deadline","colorway","status","TasksList","div","jc","ai"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./Task/Task\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TasksLister = ({ arrayToMap }) => {\r\n  const toggleSort = useSelector(state => state.toggleSortReducer);\r\n\r\n  if (toggleSort) {\r\n    //<--IF (toggleSort === true) THE TASKS SORTED BY DEADLINE-->//\r\n    const compare = (currentTask, nextTask) => {\r\n      const timeCurrent = currentTask.dateAndTimeSum;\r\n      const timeNext = nextTask.dateAndTimeSum;\r\n\r\n      let comparison = 0;\r\n      if (timeCurrent > timeNext) {\r\n        comparison = 1;\r\n      } else if (timeCurrent < timeNext) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    arrayToMap.sort(compare);\r\n    console.log(\"arrayToMapaftertrue\", arrayToMap);\r\n  } else {\r\n    const compare = (a, b) => {\r\n      const urgencyNumberA = () => {\r\n        switch (a.urgency) {\r\n          case \"low\":\r\n            return 0;\r\n            break;\r\n          case \"regular\":\r\n            return 1;\r\n            break;\r\n          case \"high\":\r\n            return 2;\r\n            break;\r\n        }\r\n      };\r\n\r\n      const urgencyNumberB = () => {\r\n        switch (b.urgency) {\r\n          case \"low\":\r\n            return 0;\r\n            break;\r\n          case \"regular\":\r\n            return 1;\r\n            break;\r\n          case \"high\":\r\n            return 2;\r\n            break;\r\n        }\r\n      };\r\n\r\n      const urgencyA = urgencyNumberA();\r\n      const urgencyB = urgencyNumberB();\r\n\r\n      let comparison = 0;\r\n      if (urgencyA < urgencyB) {\r\n        comparison = 1;\r\n      } else if (urgencyA > urgencyB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    };\r\n\r\n    arrayToMap.sort(compare);\r\n    console.log(\"arrayToMapafterfalse\", arrayToMap);\r\n  }\r\n\r\n  //<--IF (toggleSort === false) THE TASKS SORTED BY URGENCY-->//\r\n\r\n  // <----------------------------->\r\n\r\n  const tasksMap = () => {\r\n    return arrayToMap.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          deadlineISO={task.deadlineISO}\r\n          dateAndTimeSum={task.dateAndTimeSum}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          urgency={task.urgency}\r\n          status={task.status}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return <TasksList>{tasksMap()}</TasksList>;\r\n};\r\n\r\nexport default TasksLister;\r\n\r\nconst TasksList = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  align-content: flex-start;\r\n  padding: 20px;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}