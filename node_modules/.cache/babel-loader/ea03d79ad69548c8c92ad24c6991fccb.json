{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Search.jsx\";\nimport React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\n\nconst Search = ({\n  searchIsOpen,\n  setSearchIsOpen\n}) => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const currentTab = useSelector(state => state.markTabReducer);\n  const tasksArray = useSelector(state => state.filteringArraysReducer);\n\n  const getSearchInput = e => {\n    e.preventDefault();\n\n    if (e.target.value === \"\") {\n      dispatch(filteringArraysAction([]));\n    } else {\n      setSearchInput(e.target.value);\n      let searchInput = e.target.value;\n      dispatch(filteringArraysAction([{\n        todoArray: loggedUser.todoArray,\n        inProgressArray: loggedUser.inProgressArray,\n        completedTasksArray: loggedUser.completedTasksArray\n      }]));\n      const filteringArrays = {\n        todoArray: loggedUser.todoArray,\n        inProgressArray: loggedUser.inProgressArray,\n        completedTasksArray: loggedUser.completedTasksArray\n      };\n\n      const filteredTasks = arrrayToFilter => arrrayToFilter.filter(task => task.title.toUpperCase().includes(searchInput.toUpperCase()));\n\n      let arrayAfterFiltering = [];\n\n      switch (currentTab) {\n        case \"currentTabTodo\":\n          arrayAfterFiltering = filteredTasks(filteringArrays.todoArray);\n          dispatch(filteringArraysAction([{\n            todoArray: arrayAfterFiltering,\n            inProgressArray: loggedUser.inProgressArray,\n            completedTasksArray: loggedUser.completedTasksArray\n          }]));\n          break;\n\n        case \"currentTabProgress\":\n          arrayAfterFiltering = filteredTasks(filteringArrays.inProgressArray);\n          dispatch(filteringArraysAction([{\n            todoArray: arrayAfterFiltering,\n            inProgressArray: loggedUser.inProgressArray,\n            completedTasksArray: loggedUser.completedTasksArray\n          }]));\n          break;\n\n        case \"currentTabDone\":\n          arrayAfterFiltering = filteredTasks(filteringArrays.completedTasksArray);\n          dispatch(filteringArraysAction([{\n            todoArray: arrayAfterFiltering,\n            inProgressArray: loggedUser.inProgressArray,\n            completedTasksArray: loggedUser.completedTasksArray\n          }]));\n          break;\n\n        default:\n          break;\n      }\n\n      dispatch(filteringArraysAction(arrayAfterFiltering));\n    }\n  };\n\n  return React.createElement(SearchBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(SearchButton, {\n    id: \"searchButton\",\n    onClick: () => setSearchIsOpen(!searchIsOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(FiSearch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(SearchBar, {\n    searchIsOpen: searchIsOpen,\n    onClick: () => setSearchIsOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(SearchForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    onChange: getSearchInput,\n    id: \"searchInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(SearchButtonSubmit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n};\n\nexport default Search;\nconst SearchBox = styled.div`\n  ${flexbox()};\n  flex-basis: 10%;\n`;\nconst SearchButton = styled.div`\n  ${flexbox()}\n  text-align: center;\n  font-size: 1.4rem;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${c.elmShyBlue};\n  box-shadow: -2px -2px 6px 0 rgba(242, 248, 250, 0.9),\n    2px 2px 6px 0 rgba(54, 73, 79, 0.5);\n  border: 1px solid rgba(242, 248, 250, 0.6);\n  :hover {\n    cursor: pointer;\n    filter: brightness(1.2);\n  }\n`;\nconst searchInputAnimation = keyframes`\n0%{\n  width: 0%;\n}\n100%{\n  width: 150px;\n}\n`;\nconst SearchBar = styled.div`\n  ${flexbox({\n  dir: \"column\"\n})}\n  display: ${({\n  searchIsOpen\n}) => searchIsOpen ? \"block\" : \"none\"};\n  position: absolute;\n  top: 55px;\n  right: 7px;\n  z-index: 5;\n  border: 1px solid ${c.bgSlateBlue};\n  border-radius: 2%;\n  animation: ${searchInputAnimation} 0.2s forwards;\n`;\nconst SearchForm = styled.form``;\nconst SearchInput = styled.input`\n  animation: ${searchInputAnimation} 0.2s forwards;\n  /* width: 130px; */\n`;\nconst SearchButtonSubmit = styled(MdKeyboardArrowRight)`\n  position: absolute;\n  right: 1px;\n  top: 3px;\n  background-color: white;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Search.jsx"],"names":["React","useState","styled","keyframes","flexbox","c","useDispatch","useSelector","MdKeyboardArrowRight","FiSearch","filteringArraysAction","Search","searchIsOpen","setSearchIsOpen","dispatch","searchInput","setSearchInput","loggedUser","state","userReducer","currentTab","markTabReducer","tasksArray","filteringArraysReducer","getSearchInput","e","preventDefault","target","value","todoArray","inProgressArray","completedTasksArray","filteringArrays","filteredTasks","arrrayToFilter","filter","task","title","toUpperCase","includes","arrayAfterFiltering","SearchBox","div","SearchButton","elmShyBlue","searchInputAnimation","SearchBar","dir","bgSlateBlue","SearchForm","form","SearchInput","input","SearchButtonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\r\n\r\nconst Search = ({ searchIsOpen, setSearchIsOpen }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const tasksArray = useSelector(state => state.filteringArraysReducer);\r\n\r\n  const getSearchInput = e => {\r\n    e.preventDefault();\r\n    if (e.target.value === \"\") {\r\n      dispatch(filteringArraysAction([]));\r\n    } else {\r\n      setSearchInput(e.target.value);\r\n      let searchInput = e.target.value;\r\n      dispatch(\r\n        filteringArraysAction([\r\n          {\r\n            todoArray: loggedUser.todoArray,\r\n            inProgressArray: loggedUser.inProgressArray,\r\n            completedTasksArray: loggedUser.completedTasksArray\r\n          }\r\n        ])\r\n      );\r\n      const filteringArrays = {\r\n        todoArray: loggedUser.todoArray,\r\n        inProgressArray: loggedUser.inProgressArray,\r\n        completedTasksArray: loggedUser.completedTasksArray\r\n      };\r\n      const filteredTasks = arrrayToFilter =>\r\n        arrrayToFilter.filter(task =>\r\n          task.title.toUpperCase().includes(searchInput.toUpperCase())\r\n        );\r\n\r\n      let arrayAfterFiltering = [];\r\n\r\n      switch (currentTab) {\r\n        case \"currentTabTodo\":\r\n          arrayAfterFiltering = filteredTasks(filteringArrays.todoArray);\r\n          dispatch(\r\n            filteringArraysAction([\r\n              {\r\n                todoArray: arrayAfterFiltering,\r\n                inProgressArray: loggedUser.inProgressArray,\r\n                completedTasksArray: loggedUser.completedTasksArray\r\n              }\r\n            ])\r\n          );\r\n          break;\r\n        case \"currentTabProgress\":\r\n          arrayAfterFiltering = filteredTasks(filteringArrays.inProgressArray);\r\n          dispatch(\r\n            filteringArraysAction([\r\n              {\r\n                todoArray: arrayAfterFiltering,\r\n                inProgressArray: loggedUser.inProgressArray,\r\n                completedTasksArray: loggedUser.completedTasksArray\r\n              }\r\n            ])\r\n          );\r\n          break;\r\n        case \"currentTabDone\":\r\n          arrayAfterFiltering = filteredTasks(\r\n            filteringArrays.completedTasksArray\r\n          );\r\n          dispatch(\r\n            filteringArraysAction([\r\n              {\r\n                todoArray: arrayAfterFiltering,\r\n                inProgressArray: loggedUser.inProgressArray,\r\n                completedTasksArray: loggedUser.completedTasksArray\r\n              }\r\n            ])\r\n          );\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      dispatch(filteringArraysAction(arrayAfterFiltering));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchBox>\r\n      <SearchButton\r\n        id=\"searchButton\"\r\n        onClick={() => setSearchIsOpen(!searchIsOpen)}\r\n      >\r\n        <FiSearch />\r\n      </SearchButton>\r\n      <SearchBar\r\n        searchIsOpen={searchIsOpen}\r\n        onClick={() => setSearchIsOpen(true)}\r\n      >\r\n        <SearchForm>\r\n          <SearchInput onChange={getSearchInput} id=\"searchInput\" />\r\n          <SearchButtonSubmit />\r\n        </SearchForm>\r\n      </SearchBar>\r\n    </SearchBox>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst SearchBox = styled.div`\r\n  ${flexbox()};\r\n  flex-basis: 10%;\r\n`;\r\n\r\nconst SearchButton = styled.div`\r\n  ${flexbox()}\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: ${c.elmShyBlue};\r\n  box-shadow: -2px -2px 6px 0 rgba(242, 248, 250, 0.9),\r\n    2px 2px 6px 0 rgba(54, 73, 79, 0.5);\r\n  border: 1px solid rgba(242, 248, 250, 0.6);\r\n  :hover {\r\n    cursor: pointer;\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n\r\nconst searchInputAnimation = keyframes`\r\n0%{\r\n  width: 0%;\r\n}\r\n100%{\r\n  width: 150px;\r\n}\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\n  ${flexbox({ dir: \"column\" })}\r\n  display: ${({ searchIsOpen }) => (searchIsOpen ? \"block\" : \"none\")};\r\n  position: absolute;\r\n  top: 55px;\r\n  right: 7px;\r\n  z-index: 5;\r\n  border: 1px solid ${c.bgSlateBlue};\r\n  border-radius: 2%;\r\n  animation: ${searchInputAnimation} 0.2s forwards;\r\n`;\r\n\r\nconst SearchForm = styled.form``;\r\n\r\nconst SearchInput = styled.input`\r\n  animation: ${searchInputAnimation} 0.2s forwards;\r\n  /* width: 130px; */\r\n`;\r\n\r\nconst SearchButtonSubmit = styled(MdKeyboardArrowRight)`\r\n  position: absolute;\r\n  right: 1px;\r\n  top: 3px;\r\n  background-color: white;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}