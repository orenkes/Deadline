{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task\\\\HeaderAreaComponent.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport { TiArrowLoop } from \"react-icons/ti\";\nimport { ReactComponent as FireSVG } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/SVG/fire.svg\";\nimport { ReactComponent as AlertSVG } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/SVG/warning-sign.svg\";\n\nconst HeaderArea = ({\n  urgency,\n  title,\n  searchIsOpen,\n  status,\n  cardIsFlipped,\n  setCardIsFlipped\n}) => {\n  return React.createElement(HeaderAreaBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(UrgencyIconsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(UrgencyIconBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, urgency === \"regular\" && React.createElement(AlertICON, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), urgency === \"high\" && React.createElement(FireSVG, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))), React.createElement(TitleBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, searchIsOpen && React.createElement(StatusDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, `Currently in: ${status}`), React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, title)), React.createElement(OptionsButtonBox, {\n    cardIsFlipped: cardIsFlipped,\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(StyledArrowIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nexport default HeaderArea;\nconst HeaderAreaBox = styled.div`\n  ${flexbox({\n  jc: \"space-between\"\n})};\n  flex-basis: 25%;\n  height: 25%;\n  width: 100%;\n  border-radius: 10px;\n  position: relative;\n`;\nconst UrgencyIconsContainer = styled.div`\n  height: 100%;\n  width: 3%;\n  flex-basis: 3%;\n  position: relative;\n`;\nconst UrgencyIconBox = styled.div`\n  position: absolute;\n  height: 32px;\n  width: 32px;\n  left: -16px;\n  top: -16px;\n`;\nconst AlertICON = styled(AlertSVG)`\n  fill: firebrick;\n`;\nconst TitleBox = styled.div`\n  ${flexbox({\n  dir: \"column\"\n})}\n  height: 100%;\n  width: 82%;\n  flex-basis: 82%;\n`;\nconst StatusDisplay = styled.div`\n  flex-basis: 25%;\n  height: 25%;\n  width: 100%;\n  color: ${c.darkText};\n  height: 10px;\n  padding-left: 7px;\n  font-size: 0.7rem;\n`;\nconst Title = styled.div`\n  ${flexbox({\n  jc: \"flex-start\"\n})}\n  flex-basis: 50%;\n  height: 50%;\n  width: 100%;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${c.darkText};\n\n  overflow-x: auto;\n`;\nconst StyledArrowIcon = styled(TiArrowLoop)`\n  transition: 2s infinite;\n\n  :hover {\n    filter: drop-shadow(0 0 5px gray);\n  }\n`;\nconst OptionsButtonBox = styled.div`\n  ${flexbox()};\n  flex-basis: 15%;\n  z-index: 1;\n  height: 100%;\n  width: 15%;\n  font-size: 1.5rem;\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"scale(-1, 1);\" : \"scale(1, 1);\"};\n  border-radius: 10px;\n  background: white;\n  transition: 0.3s ease-in-out;\n\n  :hover {\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/HeaderAreaComponent.jsx"],"names":["React","styled","flexbox","c","TiArrowLoop","HeaderArea","urgency","title","searchIsOpen","status","cardIsFlipped","setCardIsFlipped","HeaderAreaBox","div","jc","UrgencyIconsContainer","UrgencyIconBox","AlertICON","AlertSVG","TitleBox","dir","StatusDisplay","darkText","Title","StyledArrowIcon","OptionsButtonBox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,OADkB;AAElBC,EAAAA,KAFkB;AAGlBC,EAAAA,YAHkB;AAIlBC,EAAAA,MAJkB;AAKlBC,EAAAA,aALkB;AAMlBC,EAAAA;AANkB,CAAD,KAOb;AACJ,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,KAAK,SAAZ,IAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,EAEGA,OAAO,KAAK,MAAZ,IAAsB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFzB,CADF,CADF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,IACX,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB,iBAAgBC,MAAO,EAAxC,CAFJ,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,KAAR,CAJF,CAPF,EAaE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAEG,aADjB;AAEE,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,CAACD,aAAF,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAbF,CADF;AAsBD,CA9BD;;AAgCA,eAAeL,UAAf;AAEA,MAAMO,aAAa,GAAGX,MAAM,CAACY,GAAI;IAC7BX,OAAO,CAAC;AAAEY,EAAAA,EAAE,EAAE;AAAN,CAAD,CAA0B;;;;;;CADrC;AASA,MAAMC,qBAAqB,GAAGd,MAAM,CAACY,GAAI;;;;;CAAzC;AAOA,MAAMG,cAAc,GAAGf,MAAM,CAACY,GAAI;;;;;;CAAlC;AAQA,MAAMI,SAAS,GAAGhB,MAAM,CAACiB,QAAD,CAAW;;CAAnC;AAIA,MAAMC,QAAQ,GAAGlB,MAAM,CAACY,GAAI;IACxBX,OAAO,CAAC;AAAEkB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAoB;;;;CAD/B;AAOA,MAAMC,aAAa,GAAGpB,MAAM,CAACY,GAAI;;;;WAItBV,CAAC,CAACmB,QAAS;;;;CAJtB;AAUA,MAAMC,KAAK,GAAGtB,MAAM,CAACY,GAAI;IACrBX,OAAO,CAAC;AAAEY,EAAAA,EAAE,EAAE;AAAN,CAAD,CAAuB;;;;;;WAMvBX,CAAC,CAACmB,QAAS;;;CAPtB;AAYA,MAAME,eAAe,GAAGvB,MAAM,CAACG,WAAD,CAAc;;;;;;CAA5C;AAQA,MAAMqB,gBAAgB,GAAGxB,MAAM,CAACY,GAAI;IAChCX,OAAO,EAAG;;;;;;eAMC,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KACXA,aAAa,GAAG,eAAH,GAAqB,cAAe;;;;;;;;CARrD","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport { TiArrowLoop } from \"react-icons/ti\";\r\nimport { ReactComponent as FireSVG } from \"../../../assets/SVG/fire.svg\";\r\nimport { ReactComponent as AlertSVG } from \"../../../assets/SVG/warning-sign.svg\";\r\n\r\nconst HeaderArea = ({\r\n  urgency,\r\n  title,\r\n  searchIsOpen,\r\n  status,\r\n  cardIsFlipped,\r\n  setCardIsFlipped\r\n}) => {\r\n  return (\r\n    <HeaderAreaBox>\r\n      <UrgencyIconsContainer>\r\n        <UrgencyIconBox>\r\n          {urgency === \"regular\" && <AlertICON />}\r\n          {urgency === \"high\" && <FireSVG />}\r\n        </UrgencyIconBox>\r\n      </UrgencyIconsContainer>\r\n      <TitleBox>\r\n        {searchIsOpen && (\r\n          <StatusDisplay>{`Currently in: ${status}`}</StatusDisplay>\r\n        )}\r\n        <Title>{title}</Title>\r\n      </TitleBox>\r\n      <OptionsButtonBox\r\n        cardIsFlipped={cardIsFlipped}\r\n        onClick={() => setCardIsFlipped(!cardIsFlipped)}\r\n      >\r\n        <StyledArrowIcon />\r\n      </OptionsButtonBox>\r\n    </HeaderAreaBox>\r\n  );\r\n};\r\n\r\nexport default HeaderArea;\r\n\r\nconst HeaderAreaBox = styled.div`\r\n  ${flexbox({ jc: \"space-between\" })};\r\n  flex-basis: 25%;\r\n  height: 25%;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst UrgencyIconsContainer = styled.div`\r\n  height: 100%;\r\n  width: 3%;\r\n  flex-basis: 3%;\r\n  position: relative;\r\n`;\r\n\r\nconst UrgencyIconBox = styled.div`\r\n  position: absolute;\r\n  height: 32px;\r\n  width: 32px;\r\n  left: -16px;\r\n  top: -16px;\r\n`;\r\n\r\nconst AlertICON = styled(AlertSVG)`\r\n  fill: firebrick;\r\n`;\r\n\r\nconst TitleBox = styled.div`\r\n  ${flexbox({ dir: \"column\" })}\r\n  height: 100%;\r\n  width: 82%;\r\n  flex-basis: 82%;\r\n`;\r\n\r\nconst StatusDisplay = styled.div`\r\n  flex-basis: 25%;\r\n  height: 25%;\r\n  width: 100%;\r\n  color: ${c.darkText};\r\n  height: 10px;\r\n  padding-left: 7px;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  ${flexbox({ jc: \"flex-start\" })}\r\n  flex-basis: 50%;\r\n  height: 50%;\r\n  width: 100%;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: ${c.darkText};\r\n\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst StyledArrowIcon = styled(TiArrowLoop)`\r\n  transition: 2s infinite;\r\n\r\n  :hover {\r\n    filter: drop-shadow(0 0 5px gray);\r\n  }\r\n`;\r\n\r\nconst OptionsButtonBox = styled.div`\r\n  ${flexbox()};\r\n  flex-basis: 15%;\r\n  z-index: 1;\r\n  height: 100%;\r\n  width: 15%;\r\n  font-size: 1.5rem;\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped ? \"scale(-1, 1);\" : \"scale(1, 1);\"};\r\n  border-radius: 10px;\r\n  background: white;\r\n  transition: 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}