{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  /* without vertical-align the inline-blocks moves down */\\n  vertical-align: top;\\n  scroll-snap-align: center;\\n  scroll-snap-stop: always;\\n\\n  display: inline-block;\\n  width: 100%;\\n  height: 100%;\\n\\n  background: \",\";\\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\\n\\n  @media (min-width: 769px) {\\n    width: \",\";\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{flexbox}from\"../../../../style/mixins\";import*as c from\"../../../../style/colors\";import Task from\"../../Task/Task\";import TasksLister from\"../../TasksLister\";//-------- Redux --------//\nimport{markProgress}from\"../../../../state/actions/markTabAction\";import{useSelector,useDispatch}from\"react-redux\";import{useInView}from\"react-intersection-observer\";var InProgress=function InProgress(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),refreshCounter=_useState2[0],setRefreshCounter=_useState2[1];var _useInView=useInView({threshold:0.5}),_useInView2=_slicedToArray(_useInView,2),ref=_useInView2[0],inView=_useInView2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),arrayToMap=_useState4[0],setArrayToMap=_useState4[1];var loggedUser=useSelector(function(state){return state.userReducer[0];});var tasksArrays=useSelector(function(state){return state.updateArraysReducer;});var filteringArrays=useSelector(function(state){return state.filteringArraysReducer;});var desktopView=useSelector(function(state){return state.toggleViewReducer;});var dispatch=useDispatch();useEffect(function(){dispatchCurrentTab();},[inView]);var dispatchCurrentTab=function dispatchCurrentTab(){if(inView){dispatch(markProgress());console.log(\"progressview\");}};return React.createElement(Wrapper,{id:\"progress\",ref:ref,desktopView:desktopView},React.createElement(TasksLister,{arrayToMap:tasksArrays.inProgressArray}));};export default InProgress;var Wrapper=styled.div(_templateObject(),c.gradientGreen,function(_ref){var desktopView=_ref.desktopView;return desktopView?\"33.333%\":\"100%\";});// const TasksList = styled.div`\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\n//   height: 100%;\n//   width: 100%;\n//   overflow-y: auto;\n// `;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/BodyComponent/Trackers/InProgress.jsx"],"names":["React","useState","useEffect","styled","flexbox","c","Task","TasksLister","markProgress","useSelector","useDispatch","useInView","InProgress","refreshCounter","setRefreshCounter","threshold","ref","inView","arrayToMap","setArrayToMap","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","filteringArrays","filteringArraysReducer","desktopView","toggleViewReducer","dispatch","dispatchCurrentTab","console","log","inProgressArray","Wrapper","div","gradientGreen"],"mappings":"y0BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,OAAT,KAAwB,0BAAxB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,0BAAnB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CAEA;AACA,OAASC,YAAT,KAA6B,yCAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,6BAA1B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACqBX,QAAQ,CAAC,CAAD,CAD7B,wCAChBY,cADgB,eACAC,iBADA,8BAEDH,SAAS,CAAC,CAAEI,SAAS,CAAE,GAAb,CAAD,CAFR,0CAEhBC,GAFgB,gBAEXC,MAFW,+BAGahB,QAAQ,CAAC,EAAD,CAHrB,yCAGhBiB,UAHgB,eAGJC,aAHI,eAIvB,GAAMC,CAAAA,UAAU,CAAGX,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAJ,EAAN,CAA9B,CACA,GAAMC,CAAAA,WAAW,CAAGd,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACG,mBAAV,EAAN,CAA/B,CACA,GAAMC,CAAAA,eAAe,CAAGhB,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACK,sBAAV,EAAN,CAAnC,CACA,GAAMC,CAAAA,WAAW,CAAGlB,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACO,iBAAV,EAAN,CAA/B,CAEA,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEAR,SAAS,CAAC,UAAM,CACd4B,kBAAkB,GACnB,CAFQ,CAEN,CAACb,MAAD,CAFM,CAAT,CAIA,GAAMa,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAIb,MAAJ,CAAY,CACVY,QAAQ,CAACrB,YAAY,EAAb,CAAR,CACAuB,OAAO,CAACC,GAAR,CAAY,cAAZ,EACD,CACF,CALD,CAOA,MACE,qBAAC,OAAD,EAAS,EAAE,CAAC,UAAZ,CAAuB,GAAG,CAAEhB,GAA5B,CAAiC,WAAW,CAAEW,WAA9C,EACE,oBAAC,WAAD,EAAa,UAAU,CAAEJ,WAAW,CAACU,eAArC,EADF,CADF,CAKD,CA3BD,CA6BA,cAAerB,CAAAA,UAAf,CAEA,GAAMsB,CAAAA,OAAO,CAAG/B,MAAM,CAACgC,GAAV,mBAUG9B,CAAC,CAAC+B,aAVL,CAeA,kBAAGT,CAAAA,WAAH,MAAGA,WAAH,OAAsBA,CAAAA,WAAW,CAAG,SAAH,CAAe,MAAhD,EAfA,CAAb,CAmBA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../../style/mixins\";\r\nimport * as c from \"../../../../style/colors\";\r\n\r\nimport Task from \"../../Task/Task\";\r\n\r\nimport TasksLister from \"../../TasksLister\";\r\n\r\n//-------- Redux --------//\r\nimport { markProgress } from \"../../../../state/actions/markTabAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst InProgress = () => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n  const [ref, inView] = useInView({ threshold: 0.5 });\r\n  const [arrayToMap, setArrayToMap] = useState([]);\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const filteringArrays = useSelector(state => state.filteringArraysReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatchCurrentTab();\r\n  }, [inView]);\r\n\r\n  const dispatchCurrentTab = () => {\r\n    if (inView) {\r\n      dispatch(markProgress());\r\n      console.log(\"progressview\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper id=\"progress\" ref={ref} desktopView={desktopView}>\r\n      <TasksLister arrayToMap={tasksArrays.inProgressArray} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default InProgress;\r\n\r\nconst Wrapper = styled.div`\r\n  /* without vertical-align the inline-blocks moves down */\r\n  vertical-align: top;\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: ${c.gradientGreen};\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\r\n\r\n  @media (min-width: 769px) {\r\n    width: ${({ desktopView }) => (desktopView ? \"33.333%\" : \"100%\")};\r\n  }\r\n`;\r\n\r\n// const TasksList = styled.div`\r\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n//   height: 100%;\r\n//   width: 100%;\r\n//   overflow-y: auto;\r\n// `;\r\n"]},"metadata":{},"sourceType":"module"}