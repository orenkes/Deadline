{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TaskCreation\\\\TaskCreation.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport TaskColorPicker from \"./TaskColorPicker\";\nimport TaskStatusSelect from \"./TaskStatusSelect\";\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\n\nconst TaskCreation = ({\n  setPopupIsOpen\n}) => {\n  const _useState = useState(\"black\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        colorway = _useState2[0],\n        setColorway = _useState2[1];\n\n  const _useState3 = useState(\"todo\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState(\"low\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        urgency = _useState6[0],\n        setUrgency = _useState6[1];\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n\n  const _useState7 = useState(tasksArrays.tasksCounter),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tasksCounter = _useState8[0],\n        setTasksCounter = _useState8[1];\n\n  const dispatch = useDispatch();\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  let getTasksCounter = tasksArrays.tasksCounter;\n\n  const updatingArraysInDataBase = async newTasksCounter => {\n    console.log(\"newTasksCounter\", newTasksCounter);\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter: newTasksCounter\n    };\n    dispatch(updateArraysAction(updatedArrays));\n    console.log(\"updatedArrays\", updatedArrays);\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays)\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n    console.log(\"PUT ENDED\");\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n    setPopupIsOpen(false);\n    console.log(getTasksCounter, \"tasksCounter before\");\n    const newTasksCounter = getTasksCounter + 1;\n    console.log(newTasksCounter, \"newTasksCounter after\");\n    const title = e.target[0].value;\n    const description = e.target[1].value;\n    const deadline = e.target[2].value;\n    const taskObject = {\n      id: newTasksCounter,\n      title,\n      description,\n      deadline,\n      colorway,\n      status,\n      urgency\n    };\n    console.log(taskObject, \"taskObject\");\n\n    switch (status) {\n      case \"todo\":\n        todoArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      case \"inProgress\":\n        inProgressArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      case \"done\":\n        completedTasksArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TaskForm, {\n    onSubmit: createTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    type: \"text\",\n    placeholder: \"Task Title...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(DescrptionInput, {\n    placeholder: \"Task Descrption...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(DeadlineInput, {\n    type: \"datetime-local\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(TaskColorPicker, {\n    colorway: colorway,\n    setColorway: setColorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(TaskStatusSelect, {\n    status: status,\n    setStatus: setStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(TaskUrgencySelect, {\n    urgency: urgency,\n    setUrgency: setUrgency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Add Deadline\")));\n};\n\nexport default TaskCreation;\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px 0;\n  background-color: ${c.shyBlue};\n  border-radius: 15px;\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\n  border: 1px solid rgba(242, 248, 250, 0.2);\n`;\nconst TaskForm = styled.form`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  flex-wrap: wrap;\n  height: 100%;\n`;\nconst TitleInput = styled.input`\n  flex-basis: 10%\n  height: 10%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: rgba(242, 248, 250, 0.55);\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\n  padding: 5px;\n\n  font-size: 1.4rem;\n`;\nconst DescrptionInput = styled.textarea`\n  resize: none;\n  flex-basis: 30%\n  height: 30%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: rgba(242, 248, 250, 0.55);\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\n  padding: 20px;\n\n  font-size: 1.1rem;\n`;\nconst DeadlineInput = styled.input`\nflex-basis: 10%\n  height: 10%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: rgba(242, 248, 250, 0.55);\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\n  padding: 20px;\n\n  font-size: 1.4rem;\n\n`;\nconst SubmitButton = styled.button`\n  flex-basis: 10%\n  height: 10%;\n  width: 50%;\n  border-radius: 5px;\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\n  border: none;\n  background: ${c.shyBlue};\n  font-size: 0.9rem;\n  color: ${c.darkBlueText};\n  text-shadow: 0 0 1px white;\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  outline: none;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    cursor: pointer;\n    background: ${c.lightBlue};\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TaskCreation/TaskCreation.jsx"],"names":["React","useState","styled","useSelector","useDispatch","flexbox","c","TaskColorPicker","TaskStatusSelect","TaskUrgencySelect","updateArraysAction","TaskCreation","setPopupIsOpen","colorway","setColorway","status","setStatus","urgency","setUrgency","tasksArrays","state","updateArraysReducer","tasksCounter","setTasksCounter","dispatch","todoArray","inProgressArray","completedTasksArray","getTasksCounter","updatingArraysInDataBase","newTasksCounter","console","log","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","createTask","e","preventDefault","title","target","value","description","deadline","taskObject","id","push","Container","div","shyBlue","TaskForm","form","dir","jc","TitleInput","input","DescrptionInput","textarea","DeadlineInput","SubmitButton","button","darkBlueText","lightBlue"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport TaskColorPicker from \"./TaskColorPicker\";\r\nimport TaskStatusSelect from \"./TaskStatusSelect\";\r\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst TaskCreation = ({ setPopupIsOpen }) => {\r\n  const [colorway, setColorway] = useState(\"black\");\r\n  const [status, setStatus] = useState(\"todo\");\r\n  const [urgency, setUrgency] = useState(\"low\");\r\n\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const [tasksCounter, setTasksCounter] = useState(tasksArrays.tasksCounter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  let getTasksCounter = tasksArrays.tasksCounter;\r\n\r\n  const updatingArraysInDataBase = async newTasksCounter => {\r\n    console.log(\"newTasksCounter\", newTasksCounter);\r\n\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter: newTasksCounter\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n\r\n    console.log(\"updatedArrays\", updatedArrays);\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays)\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n\r\n    console.log(\"PUT ENDED\");\r\n  };\r\n\r\n  const createTask = e => {\r\n    e.preventDefault();\r\n    setPopupIsOpen(false);\r\n\r\n    console.log(getTasksCounter, \"tasksCounter before\");\r\n    const newTasksCounter = getTasksCounter + 1;\r\n    console.log(newTasksCounter, \"newTasksCounter after\");\r\n\r\n    const title = e.target[0].value;\r\n    const description = e.target[1].value;\r\n    const deadline = e.target[2].value;\r\n\r\n    const taskObject = {\r\n      id: newTasksCounter,\r\n      title,\r\n      description,\r\n      deadline,\r\n      colorway,\r\n      status,\r\n      urgency\r\n    };\r\n\r\n    console.log(taskObject, \"taskObject\");\r\n\r\n    switch (status) {\r\n      case \"todo\":\r\n        todoArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      case \"inProgress\":\r\n        inProgressArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      case \"done\":\r\n        completedTasksArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TaskForm onSubmit={createTask}>\r\n        <TitleInput type=\"text\" placeholder=\"Task Title...\" />\r\n        <DescrptionInput placeholder=\"Task Descrption...\" />\r\n        <DeadlineInput type=\"datetime-local\" />\r\n\r\n        <TaskColorPicker colorway={colorway} setColorway={setColorway} />\r\n        <TaskStatusSelect status={status} setStatus={setStatus} />\r\n        <TaskUrgencySelect urgency={urgency} setUrgency={setUrgency} />\r\n\r\n        <SubmitButton type=\"submit\">Add Deadline</SubmitButton>\r\n      </TaskForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px 0;\r\n  background-color: ${c.shyBlue};\r\n  border-radius: 15px;\r\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\r\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\r\n  border: 1px solid rgba(242, 248, 250, 0.2);\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  flex-basis: 10%\r\n  height: 10%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(242, 248, 250, 0.55);\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\r\n  padding: 5px;\r\n\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst DescrptionInput = styled.textarea`\r\n  resize: none;\r\n  flex-basis: 30%\r\n  height: 30%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(242, 248, 250, 0.55);\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\r\n  padding: 20px;\r\n\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst DeadlineInput = styled.input`\r\nflex-basis: 10%\r\n  height: 10%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: rgba(242, 248, 250, 0.55);\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.25),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.9);\r\n  padding: 20px;\r\n\r\n  font-size: 1.4rem;\r\n\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  flex-basis: 10%\r\n  height: 10%;\r\n  width: 50%;\r\n  border-radius: 5px;\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n  border: none;\r\n  background: ${c.shyBlue};\r\n  font-size: 0.9rem;\r\n  color: ${c.darkBlueText};\r\n  text-shadow: 0 0 1px white;\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n    background: ${c.lightBlue};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}