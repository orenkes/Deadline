{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\BodyComponent\\\\Tabs.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\"; // Packages //\n\nimport { useSelector, useDispatch } from \"react-redux\"; // Actions //\n\nimport { toggleDesktopAction, toggleMobileAction } from \"../../../state/actions/toggleViewAction\"; // Add ons //\n\nimport { GoDeviceMobile, GoDeviceDesktop } from \"react-icons/go\";\n\nconst Tabs = () => {\n  const currentTab = useSelector(state => state.markTabReducer);\n  const desktopView = useSelector(state => state.toggleViewReducer); //---TIME AND DATE SUM--//\n\n  const dateAndTimeArray = deadlineISO.split(\"T\");\n  const date = dateAndTimeArray[0];\n  const dateArray = date.split(\"-\");\n  console.log(\"dateArray\", dateArray);\n  const dateSum = dateArray.reduce(reducer);\n  console.log(\"dateSum\", dateSum);\n  const timeString = dateAndTimeArray[1];\n  const timeArray = timeString.split(\":\");\n  const timeSum = timeArray.reduce(reducer);\n  console.log(\"timeSum\", timeSum);\n  const dateAndTimeSum = dateSum + timeSum;\n  console.log(\"dateAndTimeSum\", dateAndTimeSum); //---TIME AND DATE PROPS--//\n\n  const deadline = String(new Date(deadlineISO));\n  const deadlineArray = deadline.split(\" \");\n  const dayText = deadlineArray[0];\n  const monthText = deadlineArray[1];\n  const dayNumber = deadlineArray[2];\n  const year = deadlineArray[3];\n  const time = deadlineArray[4].slice(0, 5);\n  return React.createElement(TabsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TodoTab, {\n    href: \"#todo\",\n    currentTab: currentTab,\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"To Do\"), React.createElement(InProgressTab, {\n    href: \"#progress\",\n    currentTab: currentTab,\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"In Progress\"), React.createElement(DoneTab, {\n    href: \"#done\",\n    currentTab: currentTab,\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Done\"));\n};\n\nexport default Tabs;\nconst TabsContainer = styled.div`\n  ${flexbox({\n  jc: \"space-evenly\"\n})};\n  width: 100%;\n  height: 6%;\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\n  position: relative;\n  z-index: 7;\n  font-weight: bold;\n  font-size: 1.1rem;\n  background: ${c.shyBlue};\n`;\nconst TodoTab = styled.a`\n  ${flexbox()};\n  flex-basis: 33%;\n  height: 100%;\n  border-radius: 15px 15px 0 0;\n  color: black;\n  transition: 0.2s ease-out;\n  text-decoration: none;\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\n\n    :hover {\n      cursor: ${({\n  desktopView\n}) => desktopView ? \"context-menu\" : \"pointer\"};\n    }\n  }\n`;\nconst InProgressTab = styled(TodoTab)`\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\n  }\n`;\nconst DoneTab = styled(TodoTab)`\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/BodyComponent/Tabs.jsx"],"names":["React","styled","flexbox","c","useSelector","useDispatch","toggleDesktopAction","toggleMobileAction","GoDeviceMobile","GoDeviceDesktop","Tabs","currentTab","state","markTabReducer","desktopView","toggleViewReducer","dateAndTimeArray","deadlineISO","split","date","dateArray","console","log","dateSum","reduce","reducer","timeString","timeArray","timeSum","dateAndTimeSum","deadline","String","Date","deadlineArray","dayText","monthText","dayNumber","year","time","slice","TabsContainer","div","jc","shyBlue","TodoTab","a","InProgressTab","DoneTab"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\n// Packages //\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions //\r\nimport {\r\n  toggleDesktopAction,\r\n  toggleMobileAction\r\n} from \"../../../state/actions/toggleViewAction\";\r\n\r\n// Add ons //\r\nimport { GoDeviceMobile, GoDeviceDesktop } from \"react-icons/go\";\r\n\r\nconst Tabs = () => {\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n\r\n  //---TIME AND DATE SUM--//\r\n  const dateAndTimeArray = deadlineISO.split(\"T\");\r\n  const date = dateAndTimeArray[0];\r\n  const dateArray = date.split(\"-\");\r\n  console.log(\"dateArray\", dateArray);\r\n  const dateSum = dateArray.reduce(reducer);\r\n  console.log(\"dateSum\", dateSum);\r\n  const timeString = dateAndTimeArray[1];\r\n  const timeArray = timeString.split(\":\");\r\n  const timeSum = timeArray.reduce(reducer);\r\n  console.log(\"timeSum\", timeSum);\r\n  const dateAndTimeSum = dateSum + timeSum;\r\n  console.log(\"dateAndTimeSum\", dateAndTimeSum);\r\n\r\n  //---TIME AND DATE PROPS--//\r\n  const deadline = String(new Date(deadlineISO));\r\n  const deadlineArray = deadline.split(\" \");\r\n  const dayText = deadlineArray[0];\r\n  const monthText = deadlineArray[1];\r\n  const dayNumber = deadlineArray[2];\r\n  const year = deadlineArray[3];\r\n  const time = deadlineArray[4].slice(0, 5);\r\n\r\n  return (\r\n    <TabsContainer>\r\n      <TodoTab href=\"#todo\" currentTab={currentTab} desktopView={desktopView}>\r\n        To Do\r\n      </TodoTab>\r\n      <InProgressTab\r\n        href=\"#progress\"\r\n        currentTab={currentTab}\r\n        desktopView={desktopView}\r\n      >\r\n        In Progress\r\n      </InProgressTab>\r\n      <DoneTab href=\"#done\" currentTab={currentTab} desktopView={desktopView}>\r\n        Done\r\n      </DoneTab>\r\n    </TabsContainer>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n\r\nconst TabsContainer = styled.div`\r\n  ${flexbox({ jc: \"space-evenly\" })};\r\n  width: 100%;\r\n  height: 6%;\r\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\r\n  position: relative;\r\n  z-index: 7;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  background: ${c.shyBlue};\r\n`;\r\n\r\nconst TodoTab = styled.a`\r\n  ${flexbox()};\r\n  flex-basis: 33%;\r\n  height: 100%;\r\n  border-radius: 15px 15px 0 0;\r\n  color: black;\r\n  transition: 0.2s ease-out;\r\n  text-decoration: none;\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n    :hover {\r\n      cursor: ${({ desktopView }) =>\r\n        desktopView ? \"context-menu\" : \"pointer\"};\r\n    }\r\n  }\r\n`;\r\n\r\nconst InProgressTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n\r\nconst DoneTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}