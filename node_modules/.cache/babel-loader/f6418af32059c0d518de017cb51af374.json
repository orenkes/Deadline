{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\SignUp\\\\SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport * as c from \"../../style/colors\";\nimport fetchAPI from \"../../service/services\";\nimport { flexbox, borderShadowsRadius, buttonStyle } from \"../../style/mixins\";\n\nconst SignUp = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        passwordCompare = _useState2[0],\n        setPasswordCompare = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        redirect = _useState4[0],\n        setRedirect = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        matchError = _useState6[0],\n        setMatchError = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        avatar = _useState8[0],\n        setAvatar = _useState8[1];\n\n  const matchCheck = e => {\n    if (e.target.value !== passwordCompare) {\n      setMatchError(\"#ff5757\");\n    } else if (e.target.value === passwordCompare) {\n      setMatchError(\"#87e882\");\n    }\n\n    if (e.target.value === \"\") {\n      setMatchError(\"\");\n    }\n  };\n\n  const a = new Date().toISOString();\n  console.log(\"Time\", a);\n\n  const changeAvatar = e => {\n    setAvatar(`https://api.adorable.io/avatars/${e.target.value}`);\n  };\n\n  const sendForm = async e => {\n    e.preventDefault();\n    const userName = e.target[0].value;\n    const userEmail = e.target[1].value;\n    const userPassword = e.target[2].value;\n    const confirmPassword = e.target[3].value;\n\n    if (userPassword != confirmPassword) {\n      return console.log(\"Passwords do not match\");\n    } else {\n      try {\n        const theCurrentdate = new Date();\n        let minutes = 0;\n\n        if (theCurrentdate.getMinutes() < 10) {\n          minutes = \"0\" + theCurrentdate.getMinutes();\n        } else {\n          minutes = theCurrentdate.getMinutes();\n        }\n\n        const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const userSignData = {\n          userName,\n          email: userEmail,\n          password: userPassword,\n          avatar: `https://api.adorable.io/avatars/${userName}`,\n          todoArray: [{\n            id: -1,\n            title: \"Thanks for joining!\",\n            description: `In Deadline you can create and manage your tasks.\nCreate a new Deadline by clicking on Plus Button.\nSelect it's colorway, status, urgency level.\nGive it a try ðŸ™‚`,\n            dayText: weekdays[theCurrentdate.getDay()],\n            monthText: monthNames[theCurrentdate.getMonth()],\n            dayNumber: theCurrentdate.getDate(),\n            year: theCurrentdate.getFullYear(),\n            time: theCurrentdate.getHours() + \":\" + minutes,\n            colorway: \"blue\",\n            status: \"todo\",\n            urgency: \"low\",\n            dateAndTimeSum: 1\n          }, {\n            id: -1,\n            title: \"Urgent! Test features\",\n            description: `This task is Urgent!\nSort by deadline or by urgency level.\nSearch for a specific Task.\nClick your Avatar to open the main menu, Export tasks to Excel by selecting the 'Export' option`,\n            dayText: weekdays[theCurrentdate.getDay() + 1],\n            monthText: monthNames[theCurrentdate.getMonth() + 1],\n            dayNumber: theCurrentdate.getDate() + 1,\n            year: theCurrentdate.getFullYear() + 1,\n            time: theCurrentdate.getHours() + 1 + \":\" + minutes,\n            colorway: \"turquoise\",\n            status: \"todo\",\n            urgency: \"high\",\n            dateAndTimeSum: 1\n          }],\n          inProgressArray: [],\n          completedTasksArray: []\n        };\n        const jsonUserData = await fetchAPI({\n          urlString: \"createUser\",\n          method: \"newUserInDB\",\n          body: userSignData\n        });\n        console.log(\"userSignData\", userSignData); // const options = {\n        //   method: \"POST\",\n        //   headers: {\n        //     \"Content-Type\": \"application/json\"\n        //   },\n        //   body: JSON.stringify(userSignData)\n        // };\n        // await fetch(\n        //   \"https://tracker-database.youngwebdevs.now.sh/login\",\n        //   options\n        // );\n\n        setRedirect(true);\n      } catch (error) {\n        console.log(\"error: \", error);\n      }\n    }\n  };\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, redirect && React.createElement(Redirect, {\n    push: true,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Sign Up \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \":)\")), React.createElement(SignUpContainer, {\n    onSubmit: sendForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(AvatarDisplay, {\n    avatarImg: avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(UserName, {\n    type: \"text\",\n    placeholder: \"Choose User Name...\",\n    onChange: changeAvatar,\n    minLength: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(UserEmail, {\n    type: \"email\",\n    placeholder: \"Choose Email...\",\n    minLength: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(UserPassword, {\n    onChange: e => setPasswordCompare(e.target.value),\n    type: \"password\",\n    placeholder: \"Choose Password...\",\n    minLength: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(ConfirmPassword, {\n    onChange: matchCheck,\n    matchError: matchError,\n    type: \"password\",\n    placeholder: \"Confirm Password...\",\n    minLength: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(SignUpButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default SignUp;\nconst Wrapper = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})};\n  height: 100%;\n  width: 100%;\n`;\nconst Header = styled.div`\n  flex-basis: 10%;\n  font-size: 4rem;\n  font-family: \"Titillium Web\", sans-serif;\n\n  span {\n    color: red;\n    font-size: 5rem;\n    font-family: \"Montserrat\", sans-serif;\n  }\n`;\nconst SignUpContainer = styled.form`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"center\"\n})};\n  ${borderShadowsRadius};\n  flex-basis: 65%;\n  width: 80%;\n  padding: 20px;\n\n  max-height: 475px;\n  max-width: 400px;\n`;\nconst AvatarDisplay = styled.div`\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  font-size: 2rem;\n  ${flexbox()}\n  text-align: center;\n  margin-bottom: 15px;\n  pointer-events: none;\n  background: ${({\n  avatarImg\n}) => `url(${avatarImg})`};\n  background-position: center;\n  background-size: cover;\n  box-shadow: -2px -2px 6px 0 rgba(242, 248, 250, 0.9),\n    2px 2px 6px 0 rgba(54, 73, 79, 0.25);\n  border: 1px solid rgba(242, 248, 250, 0.2);\n`;\nconst UserName = styled.input`\n  box-shadow: ${c.inputShadows};\n  background: ${c.inputShyBlue};\n  color: ${c.darkBlueText};\n  margin: 10px;\n  width: 100%;\n  height: 10%;\n  border-radius: 5px;\n  border: none;\n  padding-left: 10px;\n  font-size: 0.8rem;\n\n  opacity: 0.7;\n  transition: 0.3s ease-out;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nconst UserEmail = styled(UserName)``;\nconst UserPassword = styled(UserName)``;\nconst ConfirmPassword = styled(UserName)`\n  background-color: ${({\n  matchError\n}) => matchError};\n`;\nconst SignUpButton = styled.button`\n  margin-top: 15px;\n  ${buttonStyle}\n\n  background: ${c.elmShyBlue};\n  color: ${c.darkBlueText};\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    cursor: pointer;\n    background: ${c.lightBlue};\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/SignUp/SignUp.jsx"],"names":["React","useState","styled","Redirect","c","fetchAPI","flexbox","borderShadowsRadius","buttonStyle","SignUp","passwordCompare","setPasswordCompare","redirect","setRedirect","matchError","setMatchError","avatar","setAvatar","matchCheck","e","target","value","a","Date","toISOString","console","log","changeAvatar","sendForm","preventDefault","userName","userEmail","userPassword","confirmPassword","theCurrentdate","minutes","getMinutes","weekdays","monthNames","userSignData","email","password","todoArray","id","title","description","dayText","getDay","monthText","getMonth","dayNumber","getDate","year","getFullYear","time","getHours","colorway","status","urgency","dateAndTimeSum","inProgressArray","completedTasksArray","jsonUserData","urlString","method","body","error","Wrapper","div","dir","jc","Header","SignUpContainer","form","AvatarDisplay","avatarImg","UserName","input","inputShadows","inputShyBlue","darkBlueText","UserEmail","UserPassword","ConfirmPassword","SignUpButton","button","elmShyBlue","lightBlue"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as c from \"../../style/colors\";\r\n\r\nimport fetchAPI from \"../../service/services\";\r\n\r\nimport { flexbox, borderShadowsRadius, buttonStyle } from \"../../style/mixins\";\r\n\r\nconst SignUp = () => {\r\n  const [passwordCompare, setPasswordCompare] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [matchError, setMatchError] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  const matchCheck = e => {\r\n    if (e.target.value !== passwordCompare) {\r\n      setMatchError(\"#ff5757\");\r\n    } else if (e.target.value === passwordCompare) {\r\n      setMatchError(\"#87e882\");\r\n    }\r\n    if (e.target.value === \"\") {\r\n      setMatchError(\"\");\r\n    }\r\n  };\r\n  const a = new Date().toISOString();\r\n  console.log(\"Time\", a);\r\n\r\n  const changeAvatar = e => {\r\n    setAvatar(`https://api.adorable.io/avatars/${e.target.value}`);\r\n  };\r\n\r\n  const sendForm = async e => {\r\n    e.preventDefault();\r\n    const userName = e.target[0].value;\r\n    const userEmail = e.target[1].value;\r\n    const userPassword = e.target[2].value;\r\n    const confirmPassword = e.target[3].value;\r\n\r\n    if (userPassword != confirmPassword) {\r\n      return console.log(\"Passwords do not match\");\r\n    } else {\r\n      try {\r\n        const theCurrentdate = new Date();\r\n        let minutes = 0;\r\n        if (theCurrentdate.getMinutes() < 10) {\r\n          minutes = \"0\" + theCurrentdate.getMinutes();\r\n        } else {\r\n          minutes = theCurrentdate.getMinutes();\r\n        }\r\n        const weekdays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        const monthNames = [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\"\r\n        ];\r\n        const userSignData = {\r\n          userName,\r\n          email: userEmail,\r\n          password: userPassword,\r\n          avatar: `https://api.adorable.io/avatars/${userName}`,\r\n          todoArray: [\r\n            {\r\n              id: -1,\r\n              title: \"Thanks for joining!\",\r\n              description: `In Deadline you can create and manage your tasks.\r\nCreate a new Deadline by clicking on Plus Button.\r\nSelect it's colorway, status, urgency level.\r\nGive it a try ðŸ™‚`,\r\n              dayText: weekdays[theCurrentdate.getDay()],\r\n              monthText: monthNames[theCurrentdate.getMonth()],\r\n              dayNumber: theCurrentdate.getDate(),\r\n              year: theCurrentdate.getFullYear(),\r\n              time: theCurrentdate.getHours() + \":\" + minutes,\r\n              colorway: \"blue\",\r\n              status: \"todo\",\r\n              urgency: \"low\",\r\n              dateAndTimeSum: 1\r\n            },\r\n            {\r\n              id: -1,\r\n              title: \"Urgent! Test features\",\r\n              description: `This task is Urgent!\r\nSort by deadline or by urgency level.\r\nSearch for a specific Task.\r\nClick your Avatar to open the main menu, Export tasks to Excel by selecting the 'Export' option`,\r\n              dayText: weekdays[theCurrentdate.getDay() + 1],\r\n              monthText: monthNames[theCurrentdate.getMonth() + 1],\r\n              dayNumber: theCurrentdate.getDate() + 1,\r\n              year: theCurrentdate.getFullYear() + 1,\r\n              time: theCurrentdate.getHours() + 1 + \":\" + minutes,\r\n              colorway: \"turquoise\",\r\n              status: \"todo\",\r\n              urgency: \"high\",\r\n              dateAndTimeSum: 1\r\n            }\r\n          ],\r\n          inProgressArray: [],\r\n          completedTasksArray: []\r\n        };\r\n\r\n        const jsonUserData = await fetchAPI({\r\n          urlString: \"createUser\",\r\n          method: \"newUserInDB\",\r\n          body: userSignData\r\n        });\r\n\r\n        console.log(\"userSignData\", userSignData);\r\n\r\n        // const options = {\r\n        //   method: \"POST\",\r\n        //   headers: {\r\n        //     \"Content-Type\": \"application/json\"\r\n        //   },\r\n        //   body: JSON.stringify(userSignData)\r\n        // };\r\n        // await fetch(\r\n        //   \"https://tracker-database.youngwebdevs.now.sh/login\",\r\n        //   options\r\n        // );\r\n        setRedirect(true);\r\n      } catch (error) {\r\n        console.log(\"error: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {redirect && <Redirect push to=\"/\" />}\r\n      <Header>\r\n        Sign Up <span>:)</span>\r\n      </Header>\r\n      <SignUpContainer onSubmit={sendForm}>\r\n        <AvatarDisplay avatarImg={avatar} />\r\n        <UserName\r\n          type=\"text\"\r\n          placeholder=\"Choose User Name...\"\r\n          onChange={changeAvatar}\r\n          minLength=\"4\"\r\n        />\r\n        <UserEmail type=\"email\" placeholder=\"Choose Email...\" minLength=\"2\" />\r\n        <UserPassword\r\n          onChange={e => setPasswordCompare(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Choose Password...\"\r\n          minLength=\"4\"\r\n        />\r\n        <ConfirmPassword\r\n          onChange={matchCheck}\r\n          matchError={matchError}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password...\"\r\n          minLength=\"4\"\r\n        />\r\n        <SignUpButton type=\"submit\">Submit</SignUpButton>\r\n      </SignUpContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })};\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  flex-basis: 10%;\r\n  font-size: 4rem;\r\n  font-family: \"Titillium Web\", sans-serif;\r\n\r\n  span {\r\n    color: red;\r\n    font-size: 5rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nconst SignUpContainer = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"center\" })};\r\n  ${borderShadowsRadius};\r\n  flex-basis: 65%;\r\n  width: 80%;\r\n  padding: 20px;\r\n\r\n  max-height: 475px;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst AvatarDisplay = styled.div`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  font-size: 2rem;\r\n  ${flexbox()}\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n  pointer-events: none;\r\n  background: ${({ avatarImg }) => `url(${avatarImg})`};\r\n  background-position: center;\r\n  background-size: cover;\r\n  box-shadow: -2px -2px 6px 0 rgba(242, 248, 250, 0.9),\r\n    2px 2px 6px 0 rgba(54, 73, 79, 0.25);\r\n  border: 1px solid rgba(242, 248, 250, 0.2);\r\n`;\r\n\r\nconst UserName = styled.input`\r\n  box-shadow: ${c.inputShadows};\r\n  background: ${c.inputShyBlue};\r\n  color: ${c.darkBlueText};\r\n  margin: 10px;\r\n  width: 100%;\r\n  height: 10%;\r\n  border-radius: 5px;\r\n  border: none;\r\n  padding-left: 10px;\r\n  font-size: 0.8rem;\r\n\r\n  opacity: 0.7;\r\n  transition: 0.3s ease-out;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst UserEmail = styled(UserName)``;\r\nconst UserPassword = styled(UserName)``;\r\nconst ConfirmPassword = styled(UserName)`\r\n  background-color: ${({ matchError }) => matchError};\r\n`;\r\nconst SignUpButton = styled.button`\r\n  margin-top: 15px;\r\n  ${buttonStyle}\r\n\r\n  background: ${c.elmShyBlue};\r\n  color: ${c.darkBlueText};\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.9;\r\n    cursor: pointer;\r\n    background: ${c.lightBlue};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}