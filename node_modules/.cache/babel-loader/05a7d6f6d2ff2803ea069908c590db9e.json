{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Dashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { AiOutlineExport, AiOutlinePoweroff } from \"react-icons/ai\";\nimport { GiClick, GiAstronautHelmet } from \"react-icons/gi\";\nimport { GoDeviceMobile, GoDeviceDesktop } from \"react-icons/go\";\nimport { FaHamburger } from \"react-icons/fa\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { MdClose } from \"react-icons/md\"; //-------Components-------//\n\nimport Todo from \"./Todo/Todo\";\nimport InProgress from \"./InProgress/InProgress\";\nimport Done from \"./Done/Done\";\nimport TaskCreation from \"./TaskCreation/TaskCreation\";\nimport SearchScreen from \"./SearchScreen\";\nimport HeadComponent from \"./HeadComponent/HeadComponent\";\nimport BodyComponent from \"./BodyComponent/BodyComponent\"; //-------Actions--------//\n\nimport { getUserAction } from \"../../state/actions/getUserAction\";\nimport { isLoggedAction } from \"../../state/actions/isLoggedAction\";\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\nimport { toggleDesktopAction, toggleMobileAction } from \"../../state/actions/toggleViewAction\";\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\nimport { searchWindowAction } from \"../../state/actions/searchWindowAction\";\n\nconst Dashbord = () => {\n  // const [desktopView, setDesktopView] = useState(true);\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        popupIsOpen = _useState2[0],\n        setPopupIsOpen = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        flag = _useState4[0],\n        setFlag = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dropDownIsOpen = _useState6[0],\n        setDropDownIsOpen = _useState6[1];\n\n  const desktopView = useSelector(state => state.toggleViewReducer);\n  const currentTab = useSelector(state => state.markTabReducer);\n  const isLogged = useSelector(state => state.isLoggedReducer);\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\n  const dispatch = useDispatch();\n\n  const oneTime = (() => {\n    if (flag) {\n      dispatch(updateArraysAction({\n        tasksCounter: loggedUser.tasksCounter,\n        todoArray: loggedUser.todoArray,\n        inProgressArray: loggedUser.inProgressArray,\n        completedTasksArray: loggedUser.completedTasksArray\n      }));\n      setFlag(false);\n    }\n  })();\n\n  return React.createElement(Wrapper, {\n    id: \"dashWrapper\",\n    onClick: e => {\n      dropDownIsOpen && setDropDownIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isLogged === false && React.createElement(Redirect, {\n    push: true,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(AppContainer, {\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TaskCreationWrapper, {\n    popupIsOpen: popupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TaskCreationContainer, {\n    id: \"taskContainer\",\n    onClick: e => {\n      e.target.id === \"taskContainer\" && setPopupIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TaskCreation, {\n    setPopupIsOpen: setPopupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(HeadComponent, {\n    dropDownIsOpen: dropDownIsOpen,\n    setDropDownIsOpen: setDropDownIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), searchIsOpen && React.createElement(SearchScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(BodyComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n};\n\nexport default Dashbord;\nconst Wrapper = styled.div`\n  ${flexbox()};\n  height: 100%;\n  width: 100%;\n`;\nconst AppContainer = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})};\n  flex-basis: 100%;\n  width: 100%;\n  height: 100%;\n  max-width: 500px;\n  position: relative;\n\n  /* @media (min-width: 767px) {\n    max-width: ${({\n  desktopView\n}) => desktopView ? \"1200px\" : \"500px\"};\n  } */\n\n  @media (min-width: 767px) {\n    max-width: 1200px;\n  }\n`;\nconst TaskCreationWrapper = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 10;\n  background: ${c.shyBlue};\n  transition: 0.2s ease-out;\n  transform: ${({\n  popupIsOpen\n}) => popupIsOpen ? \"scale(1)\" : \"scale(0)\"};\n`;\nconst TaskCreationContainer = styled.div`\n  ${flexbox()};\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 9;\n`;\nconst BodyContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n\n  @media (min-width: 767px) {\n    max-width: ${({\n  desktopView\n}) => desktopView ? \"1200px\" : \"500px\"};\n  }\n`;\nconst TabsContainer = styled.div`\n  ${flexbox({\n  jc: \"space-evenly\"\n})};\n  width: 100%;\n  height: 6%;\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\n  position: relative;\n  z-index: 7;\n  font-weight: bold;\n  font-size: 1.1rem;\n`;\nconst TodoTab = styled.a`\n  ${flexbox()};\n  flex-basis: 33%;\n  height: 100%;\n  border-radius: 15px 15px 0 0;\n  color: black;\n  transition: 0.2s ease-out;\n  text-decoration: none;\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\n\n    :hover {\n      cursor: ${({\n  desktopView\n}) => desktopView ? \"context-menu\" : \"pointer\"};\n    }\n  }\n`;\nconst InProgressTab = styled(TodoTab)`\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\n  }\n`;\nconst DoneTab = styled(TodoTab)`\n  opacity: ${({\n  currentTab\n}) => currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\n\n  @media (min-width: 767px) {\n    opacity: ${({\n  desktopView,\n  currentTab\n}) => !desktopView && currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\n  }\n`;\nconst TrackersContainer = styled.div`\n  position: relative;\n  height: 94%;\n  width: 100%;\n`;\nconst PageCarousel = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n`;\nconst AddDeadlineButton = styled.div`\n  ${flexbox()};\n  font-size: 1rem;\n  position: absolute;\n  right: 20px;\n  bottom: 20px;\n  border-radius: 50%;\n  height: 70px;\n  width: 70px;\n  font-family: \"Titillium Web\", sans-serif;\n\n  border: 1px solid rgba(242, 248, 250, 0.2);\n  box-shadow: -2px -2px 4px 0 rgba(242, 248, 250, 0.5),\n    2px 2px 4px 0 rgba(54, 73, 79, 0.25);\n  background: ${c.lightBlue};\n\n  transition: 0.3s ease-out;\n  opacity: 0.9;\n\n  span {\n    color: red;\n    font-size: 2rem;\n  }\n\n  :hover {\n    filter: brightness(1.15);\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Dashboard.jsx"],"names":["React","useState","useEffect","styled","useSelector","Redirect","Link","useHistory","useDispatch","flexbox","c","AiOutlineExport","AiOutlinePoweroff","GiClick","GiAstronautHelmet","GoDeviceMobile","GoDeviceDesktop","FaHamburger","FiSearch","MdClose","Todo","InProgress","Done","TaskCreation","SearchScreen","HeadComponent","BodyComponent","getUserAction","isLoggedAction","updateArraysAction","toggleDesktopAction","toggleMobileAction","filteringArraysAction","searchWindowAction","Dashbord","popupIsOpen","setPopupIsOpen","flag","setFlag","dropDownIsOpen","setDropDownIsOpen","desktopView","state","toggleViewReducer","currentTab","markTabReducer","isLogged","isLoggedReducer","loggedUser","userReducer","searchIsOpen","searchWindowReducer","dispatch","oneTime","tasksCounter","todoArray","inProgressArray","completedTasksArray","e","target","id","Wrapper","div","AppContainer","dir","jc","TaskCreationWrapper","shyBlue","TaskCreationContainer","BodyContainer","TabsContainer","TodoTab","a","InProgressTab","DoneTab","TrackersContainer","PageCarousel","AddDeadlineButton","lightBlue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\nimport { AiOutlineExport, AiOutlinePoweroff } from \"react-icons/ai\";\r\nimport { GiClick, GiAstronautHelmet } from \"react-icons/gi\";\r\nimport { GoDeviceMobile, GoDeviceDesktop } from \"react-icons/go\";\r\nimport { FaHamburger } from \"react-icons/fa\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\n//-------Components-------//\r\nimport Todo from \"./Todo/Todo\";\r\nimport InProgress from \"./InProgress/InProgress\";\r\nimport Done from \"./Done/Done\";\r\nimport TaskCreation from \"./TaskCreation/TaskCreation\";\r\nimport SearchScreen from \"./SearchScreen\";\r\nimport HeadComponent from \"./HeadComponent/HeadComponent\";\r\nimport BodyComponent from \"./BodyComponent/BodyComponent\";\r\n\r\n//-------Actions--------//\r\nimport { getUserAction } from \"../../state/actions/getUserAction\";\r\nimport { isLoggedAction } from \"../../state/actions/isLoggedAction\";\r\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\r\nimport {\r\n  toggleDesktopAction,\r\n  toggleMobileAction\r\n} from \"../../state/actions/toggleViewAction\";\r\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\r\nimport { searchWindowAction } from \"../../state/actions/searchWindowAction\";\r\n\r\nconst Dashbord = () => {\r\n  // const [desktopView, setDesktopView] = useState(true);\r\n  const [popupIsOpen, setPopupIsOpen] = useState(false);\r\n  const [flag, setFlag] = useState(true);\r\n  const [dropDownIsOpen, setDropDownIsOpen] = useState(false);\r\n\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const isLogged = useSelector(state => state.isLoggedReducer);\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const oneTime = (() => {\r\n    if (flag) {\r\n      dispatch(\r\n        updateArraysAction({\r\n          tasksCounter: loggedUser.tasksCounter,\r\n          todoArray: loggedUser.todoArray,\r\n          inProgressArray: loggedUser.inProgressArray,\r\n          completedTasksArray: loggedUser.completedTasksArray\r\n        })\r\n      );\r\n      setFlag(false);\r\n    }\r\n  })();\r\n\r\n  return (\r\n    <Wrapper\r\n      id=\"dashWrapper\"\r\n      onClick={e => {\r\n        dropDownIsOpen && setDropDownIsOpen(false);\r\n      }}\r\n    >\r\n      {isLogged === false && <Redirect push to=\"/\" />}\r\n      <AppContainer desktopView={desktopView}>\r\n        <TaskCreationWrapper popupIsOpen={popupIsOpen}>\r\n          <TaskCreationContainer\r\n            id=\"taskContainer\"\r\n            onClick={e => {\r\n              e.target.id === \"taskContainer\" && setPopupIsOpen(false);\r\n            }}\r\n          >\r\n            <TaskCreation setPopupIsOpen={setPopupIsOpen} />\r\n          </TaskCreationContainer>\r\n        </TaskCreationWrapper>\r\n\r\n        <HeadComponent\r\n          dropDownIsOpen={dropDownIsOpen}\r\n          setDropDownIsOpen={setDropDownIsOpen}\r\n        />\r\n        {searchIsOpen && <SearchScreen />}\r\n        <BodyComponent />\r\n      </AppContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Dashbord;\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexbox()};\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"flex-start\" })};\r\n  flex-basis: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 500px;\r\n  position: relative;\r\n\r\n  /* @media (min-width: 767px) {\r\n    max-width: ${({ desktopView }) => (desktopView ? \"1200px\" : \"500px\")};\r\n  } */\r\n\r\n  @media (min-width: 767px) {\r\n    max-width: 1200px;\r\n  }\r\n`;\r\n\r\nconst TaskCreationWrapper = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 10;\r\n  background: ${c.shyBlue};\r\n  transition: 0.2s ease-out;\r\n  transform: ${({ popupIsOpen }) => (popupIsOpen ? \"scale(1)\" : \"scale(0)\")};\r\n`;\r\n\r\nconst TaskCreationContainer = styled.div`\r\n  ${flexbox()};\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 9;\r\n`;\r\n\r\nconst BodyContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  @media (min-width: 767px) {\r\n    max-width: ${({ desktopView }) => (desktopView ? \"1200px\" : \"500px\")};\r\n  }\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  ${flexbox({ jc: \"space-evenly\" })};\r\n  width: 100%;\r\n  height: 6%;\r\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\r\n  position: relative;\r\n  z-index: 7;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst TodoTab = styled.a`\r\n  ${flexbox()};\r\n  flex-basis: 33%;\r\n  height: 100%;\r\n  border-radius: 15px 15px 0 0;\r\n  color: black;\r\n  transition: 0.2s ease-out;\r\n  text-decoration: none;\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n    :hover {\r\n      cursor: ${({ desktopView }) =>\r\n        desktopView ? \"context-menu\" : \"pointer\"};\r\n    }\r\n  }\r\n`;\r\n\r\nconst InProgressTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n\r\nconst DoneTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 767px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n\r\nconst TrackersContainer = styled.div`\r\n  position: relative;\r\n  height: 94%;\r\n  width: 100%;\r\n`;\r\n\r\nconst PageCarousel = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  scroll-snap-type: x mandatory;\r\n  scroll-behavior: smooth;\r\n`;\r\n\r\nconst AddDeadlineButton = styled.div`\r\n  ${flexbox()};\r\n  font-size: 1rem;\r\n  position: absolute;\r\n  right: 20px;\r\n  bottom: 20px;\r\n  border-radius: 50%;\r\n  height: 70px;\r\n  width: 70px;\r\n  font-family: \"Titillium Web\", sans-serif;\r\n\r\n  border: 1px solid rgba(242, 248, 250, 0.2);\r\n  box-shadow: -2px -2px 4px 0 rgba(242, 248, 250, 0.5),\r\n    2px 2px 4px 0 rgba(54, 73, 79, 0.25);\r\n  background: ${c.lightBlue};\r\n\r\n  transition: 0.3s ease-out;\r\n  opacity: 0.9;\r\n\r\n  span {\r\n    color: red;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  :hover {\r\n    filter: brightness(1.15);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}