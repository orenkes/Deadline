{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task\\\\BackSide\\\\BackSide.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\"; // import { updateArraysAction } from \"../../../../state/actions/updateArraysAction\";\n\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport { GiReturnArrow } from \"react-icons/gi\";\nimport _ from \"lodash\";\n\nconst BackSide = ({\n  cardIsFlipped,\n  setCardIsFlipped,\n  colorwayStyle,\n  status\n}) => {\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const dispatch = useDispatch();\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  const tasksCounter = tasksArrays.tasksCounter; //--SERVER FUNCTIONS--//\n\n  const updatingArraysInDataBase = async () => {\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter\n    };\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays) // We send data in JSON format\n\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n  }; //-------------------------------------------------//\n\n\n  const handleFirstMove = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, inProgressArray, \"inProgress\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, completedTasksArray, \"done\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n        updatingArraysInDataBase();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, completedTasksArray, \"done\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, todoArray, \"todo\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, todoArray, \"todo\");\n        updatingArraysInDataBase();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, null, null, true);\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, null, null, true);\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, null, null, true);\n        break;\n\n      default:\n        break;\n    }\n  }; //------------------------------------------------------//\n\n\n  const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination, deleteTask) => {\n    const selectedTask = _.remove(arrayToRemoveFrom, item => {\n      return item.id === id;\n    });\n\n    if (deleteTask === true) {\n      setCardIsFlipped(false);\n      dispatch(updateArraysAction(arrayToRemoveFrom));\n      updatingArraysInDataBase();\n      return;\n    }\n\n    const newStatusSelectedTask = _objectSpread({}, selectedTask[0], {\n      status: destination\n    });\n\n    arrayToAddInto.push(newStatusSelectedTask); // WARNING: because JS is flexable, this way will create duplicates rather than run over the current key:value pair.\n    // const updatedArrays = {\n    //   arrayToRemoveFrom,\n    //   arrayToAddInto\n    // };\n\n    const updatedArrays = {\n      arrayToRemoveFrom: arrayToRemoveFrom,\n      arrayToAddInto: arrayToAddInto\n    };\n    setCardIsFlipped(false);\n    dispatch(updateArraysAction(updatedArrays));\n  };\n\n  return React.createElement(BackSideBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(OptionsButtonBack, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(StyledArrowIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(MainActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(FirstMoveButton, {\n    onClick: () => {\n      handleFirstMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, firstButtonText)), React.createElement(OtherActionsArea, {\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(SecondMoveButton, {\n    onClick: () => {\n      handleSecondMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, secondButtonText), React.createElement(DeleteTaskButton, {\n    onClick: () => {\n      handleDelete(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Delete Tracker\")));\n};\n\nexport default BackSide;\nconst BackSideBox = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst StyledArrowIcon = styled(GiReturnArrow)`\n  transition: 2s infinite;\n\n  :hover {\n    filter: drop-shadow(0 0 5px gray);\n  }\n`;\nconst OptionsButton = styled.div`\n  ${flexbox()};\n  position: absolute;\n  z-index: 2;\n  right: 0;\n  top: 0;\n  height: 35%;\n  width: 50px;\n  font-size: 1.4rem;\n  transform: rotateY(180deg) rotateX(180deg);\n  border-radius: 10px;\n  background: white;\n  transition: 0.3s ease-in-out;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst OptionsButtonBack = styled(OptionsButton)`\n  height: 35%;\n  transform: rotateY(0) rotateX(0);\n`;\nconst MainActionArea = styled.div`\n  ${flexbox()};\n  flex-basis: 35%;\n  height: 35%;\n  width: 100%;\n`;\nconst FirstMoveButton = styled.div`\n  ${flexbox()};\n  position: relative;\n  height: 100%;\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n  font-weight: bold;\n  font-size: 1.2rem;\n  transition: 0.2s ease-out;\n\n  :hover {\n    cursor: pointer;\n    text-shadow: 0 0 5px gray;\n  }\n`;\nconst OtherActionsArea = styled.div`\n  ${flexbox({\n  dir: \"column\"\n})};\n  flex-basis: 65%;\n  height: 65%;\n  width: 100%;\n  background: ${({\n  colorwayStyle\n}) => colorwayStyle};\n  border-radius: 10px 0 10px 10px;\n`;\nconst SecondMoveButton = styled(FirstMoveButton)`\n  flex-basis: 50%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  color: white;\n\n  :hover {\n    text-shadow: 0 0 5px white;\n  }\n`;\nconst DeleteTaskButton = styled(SecondMoveButton)`\n  flex-basis: 50%;\n  width: 100%;\n  border-radius: 0 0 10px 10px;\n  color: ${c.shyRed};\n\n  :hover {\n    text-shadow: 0 0 5px red;\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/BackSide/BackSide.jsx"],"names":["React","styled","useSelector","flexbox","c","GiReturnArrow","_","BackSide","cardIsFlipped","setCardIsFlipped","colorwayStyle","status","tasksArrays","state","updateArraysReducer","dispatch","useDispatch","todoArray","inProgressArray","completedTasksArray","tasksCounter","updatingArraysInDataBase","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","handleFirstMove","selectChange","handleSecondMove","handleDelete","arrayToRemoveFrom","arrayToAddInto","destination","deleteTask","selectedTask","remove","item","id","updateArraysAction","newStatusSelectedTask","push","firstButtonText","secondButtonText","BackSideBox","div","StyledArrowIcon","OptionsButton","OptionsButtonBack","MainActionArea","FirstMoveButton","OtherActionsArea","dir","SecondMoveButton","DeleteTaskButton","shyRed"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import { updateArraysAction } from \"../../../../state/actions/updateArraysAction\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\nimport { GiReturnArrow } from \"react-icons/gi\";\r\nimport _ from \"lodash\";\r\n\r\nconst BackSide = ({\r\n  cardIsFlipped,\r\n  setCardIsFlipped,\r\n  colorwayStyle,\r\n  status\r\n}) => {\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  const tasksCounter = tasksArrays.tasksCounter;\r\n\r\n  //--SERVER FUNCTIONS--//\r\n\r\n  const updatingArraysInDataBase = async () => {\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter\r\n    };\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays) // We send data in JSON format\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n  };\r\n\r\n  //-------------------------------------------------//\r\n\r\n  const handleFirstMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, inProgressArray, \"inProgress\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, completedTasksArray, \"done\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, completedTasksArray, \"done\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, todoArray, \"todo\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, todoArray, \"todo\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, null, null, true);\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, null, null, true);\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, null, null, true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //------------------------------------------------------//\r\n\r\n  const selectChange = (\r\n    arrayToRemoveFrom,\r\n    arrayToAddInto,\r\n    destination,\r\n    deleteTask\r\n  ) => {\r\n    const selectedTask = _.remove(arrayToRemoveFrom, item => {\r\n      return item.id === id;\r\n    });\r\n\r\n    if (deleteTask === true) {\r\n      setCardIsFlipped(false);\r\n      dispatch(updateArraysAction(arrayToRemoveFrom));\r\n      updatingArraysInDataBase();\r\n      return;\r\n    }\r\n\r\n    const newStatusSelectedTask = {\r\n      ...selectedTask[0],\r\n      status: destination\r\n    };\r\n    arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n    // WARNING: because JS is flexable, this way will create duplicates rather than run over the current key:value pair.\r\n    // const updatedArrays = {\r\n    //   arrayToRemoveFrom,\r\n    //   arrayToAddInto\r\n    // };\r\n\r\n    const updatedArrays = {\r\n      arrayToRemoveFrom: arrayToRemoveFrom,\r\n      arrayToAddInto: arrayToAddInto\r\n    };\r\n\r\n    setCardIsFlipped(false);\r\n    dispatch(updateArraysAction(updatedArrays));\r\n  };\r\n\r\n  return (\r\n    <BackSideBox>\r\n      <OptionsButtonBack\r\n        onClick={() => setCardIsFlipped(!cardIsFlipped)}\r\n        colorwayStyle={colorwayStyle}\r\n      >\r\n        <StyledArrowIcon />\r\n      </OptionsButtonBack>\r\n\r\n      <MainActionArea>\r\n        <FirstMoveButton\r\n          onClick={() => {\r\n            handleFirstMove(status);\r\n          }}\r\n        >\r\n          {firstButtonText}\r\n        </FirstMoveButton>\r\n      </MainActionArea>\r\n      <OtherActionsArea colorwayStyle={colorwayStyle}>\r\n        <SecondMoveButton\r\n          onClick={() => {\r\n            handleSecondMove(status);\r\n          }}\r\n        >\r\n          {secondButtonText}\r\n        </SecondMoveButton>\r\n        <DeleteTaskButton\r\n          onClick={() => {\r\n            handleDelete(status);\r\n          }}\r\n        >\r\n          Delete Tracker\r\n        </DeleteTaskButton>\r\n      </OtherActionsArea>\r\n    </BackSideBox>\r\n  );\r\n};\r\n\r\nexport default BackSide;\r\n\r\nconst BackSideBox = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledArrowIcon = styled(GiReturnArrow)`\r\n  transition: 2s infinite;\r\n\r\n  :hover {\r\n    filter: drop-shadow(0 0 5px gray);\r\n  }\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  ${flexbox()};\r\n  position: absolute;\r\n  z-index: 2;\r\n  right: 0;\r\n  top: 0;\r\n  height: 35%;\r\n  width: 50px;\r\n  font-size: 1.4rem;\r\n  transform: rotateY(180deg) rotateX(180deg);\r\n  border-radius: 10px;\r\n  background: white;\r\n  transition: 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst OptionsButtonBack = styled(OptionsButton)`\r\n  height: 35%;\r\n  transform: rotateY(0) rotateX(0);\r\n`;\r\n\r\nconst MainActionArea = styled.div`\r\n  ${flexbox()};\r\n  flex-basis: 35%;\r\n  height: 35%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FirstMoveButton = styled.div`\r\n  ${flexbox()};\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 10px 10px 0 0;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  transition: 0.2s ease-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    text-shadow: 0 0 5px gray;\r\n  }\r\n`;\r\n\r\nconst OtherActionsArea = styled.div`\r\n  ${flexbox({ dir: \"column\" })};\r\n  flex-basis: 65%;\r\n  height: 65%;\r\n  width: 100%;\r\n  background: ${({ colorwayStyle }) => colorwayStyle};\r\n  border-radius: 10px 0 10px 10px;\r\n`;\r\n\r\nconst SecondMoveButton = styled(FirstMoveButton)`\r\n  flex-basis: 50%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  color: white;\r\n\r\n  :hover {\r\n    text-shadow: 0 0 5px white;\r\n  }\r\n`;\r\n\r\nconst DeleteTaskButton = styled(SecondMoveButton)`\r\n  flex-basis: 50%;\r\n  width: 100%;\r\n  border-radius: 0 0 10px 10px;\r\n  color: ${c.shyRed};\r\n\r\n  :hover {\r\n    text-shadow: 0 0 5px red;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}