{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport { GiReturnArrow } from \"react-icons/gi\";\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\n\nconst Task = ({\n  id,\n  title,\n  description,\n  deadline,\n  colorway,\n  urgency,\n  status,\n  firstButtonText,\n  secondButtonText\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardIsFlipped = _useState2[0],\n        setCardIsFlipped = _useState2[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  const tasksCounter = tasksArrays.tasksCounter; //--SERVER FUNCTIONS--//\n\n  const updatingArraysInDataBase = async () => {\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter\n    };\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays) // We send data in JSON format\n\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n  }; //--------------//\n\n\n  let urgencyShadow = ``;\n\n  const selectUrgency = (() => {\n    switch (urgency) {\n      case \"high\":\n        urgencyShadow = `-6px -6px 16px 0 red,\n        6px 6px 16px 0 red`;\n        break;\n\n      case \"regular\":\n        urgencyShadow = `-6px -6px 10px 0 blue,\n        6px 6px 10px 0 blue`;\n        break;\n\n      case \"low\":\n        urgencyShadow = `-3px -3px 6px 0 rgba(242, 248, 250, 1),\n        3px 3px 6px 0 rgba(54, 73, 79, 0.25)`;\n        break;\n\n      default:\n        urgencyShadow = `-3px -3px 6px 0 rgba(242, 248, 250, 1),\n      3px 3px 6px 0 rgba(54, 73, 79, 0.25)`;\n        break;\n    }\n  })();\n\n  let colorwayStyle = ``;\n\n  const selectColorway = (() => {\n    switch (colorway) {\n      case \"black\":\n        colorwayStyle = c.taskBlack;\n        break;\n\n      case \"blue\":\n        colorwayStyle = c.taskBlue;\n        break;\n\n      case \"turquoise\":\n        colorwayStyle = c.taskTurquoise;\n        break;\n\n      case \"green\":\n        colorwayStyle = c.taskGreen;\n        break;\n\n      case \"pink\":\n        colorwayStyle = c.taskPink;\n        break;\n\n      default:\n        colorwayStyle = c.taskBlack;\n        break;\n    }\n  })();\n\n  const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination, deleteTask) => {\n    const selectedTask = _.remove(arrayToRemoveFrom, item => {\n      return item.id === id;\n    });\n\n    if (deleteTask === true) {\n      setCardIsFlipped(false);\n      dispatch(updateArraysAction(arrayToRemoveFrom));\n      updatingArraysInDataBase();\n      return;\n    }\n\n    const newStatusSelectedTask = _objectSpread({}, selectedTask[0], {\n      status: destination\n    });\n\n    arrayToAddInto.push(newStatusSelectedTask); // WARNING: because JS is flexable, this way will create duplicates rather than run over the current key:value pair.\n    // const updatedArrays = {\n    //   arrayToRemoveFrom,\n    //   arrayToAddInto\n    // };\n\n    const updatedArrays = {\n      arrayToRemoveFrom: arrayToRemoveFrom,\n      arrayToAddInto: arrayToAddInto\n    };\n    setCardIsFlipped(false);\n    dispatch(updateArraysAction(updatedArrays));\n  };\n\n  const handleFirstMove = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, inProgressArray, \"inProgress\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, completedTasksArray, \"done\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n        updatingArraysInDataBase();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, completedTasksArray, \"done\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, todoArray, \"todo\");\n        updatingArraysInDataBase();\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, todoArray, \"todo\");\n        updatingArraysInDataBase();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    switch (status) {\n      case \"todo\":\n        selectChange(todoArray, null, null, true);\n        break;\n\n      case \"inProgress\":\n        selectChange(inProgressArray, null, null, true);\n        break;\n\n      case \"done\":\n        selectChange(completedTasksArray, null, null, true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    urgencyShadow: urgencyShadow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(GiReturnArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(HeaderArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, title)), React.createElement(InfoArea, {\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, deadline)))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(OptionsButtonBack, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(GiReturnArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })), React.createElement(MainActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(FirstMoveButton, {\n    onClick: () => {\n      handleFirstMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, firstButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))), React.createElement(OtherActionsArea, {\n    colorwayStyle: colorwayStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(SecondMoveButton, {\n    onClick: () => {\n      handleSecondMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, secondButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })), React.createElement(DeleteTaskButton, {\n    onClick: () => {\n      handleDelete(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Delete Tracker\", React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  })))));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 10px;\n  height: 30%;\n  max-height: 200px;\n  width: 90%;\n  max-width: 500px;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n  box-shadow: ${({\n  urgencyShadow\n}) => urgencyShadow};\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  ${flexbox()};\n  position: absolute;\n  z-index: 2;\n  right: 0;\n  top: 0;\n  height: 35%;\n  width: 50px;\n  font-size: 1.4rem;\n  transform: rotateY(180deg) rotateX(180deg);\n  border-radius: 0 10px 0 0;\n  background: white;\n  transition: 0.3s ease-in-out;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst HeaderArea = styled.div`\n  ${flexbox};\n  flex-basis: 35%;\n  height: 35%;\n  width: 100%;\n  border-radius: 10px;\n`;\nconst Title = styled.div`\n  ${flexbox({\n  jc: \"flex-start\"\n})}\n  height: 100%;\n  width: 100%;\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding-left: 10px;\n  color: ${c.darkText};\n  border-radius: 10px;\n`;\nconst InfoArea = styled.div`\n  ${flexbox({\n  dir: \"column\"\n})};\n  flex-basis: 65%;\n  height: 65%;\n  width: 100%;\n  border-radius: 10px 0 10px 10px;\n  background: ${({\n  colorwayStyle\n}) => colorwayStyle};\n`;\nconst Description = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  flex-basis: 80%;\n  height: 80%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  padding: 10px;\n  color: white;\n  font-size: 0.9rem;\n`;\nconst Deadline = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-end\"\n})}\n  flex-basis: 20%;\n  height: 20%;\n  width: 100%;\n  background: ${({\n  colorwayStyle\n}) => colorwayStyle};\n  border-radius: 0 0 10px 10px;\n  font-weight: bold;\n  padding: 0 0 8px 10px;\n  color: ${c.shyRed};\n  font-size: 1rem;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst OptionsButtonBack = styled(OptionsButton)`\n  height: 35%;\n  transform: rotateY(0) rotateX(0);\n`;\nconst HrMarker = styled.hr`\n  width: 70%;\n  height: 5px;\n  border-radius: 20px;\n  border: none;\n  transition: 0.3s ease-out;\n  position: absolute;\n  bottom: 0;\n`;\nconst MainActionArea = styled.div`\n  ${flexbox()};\n  flex-basis: 35%;\n  height: 35%;\n  width: 100%;\n`;\nconst FirstMoveButton = styled.div`\n  ${flexbox()};\n  position: relative;\n  height: 100%;\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n  font-weight: bold;\n  transition: 0.2s ease-out;\n\n  :hover ${HrMarker} {\n    cursor: pointer;\n    background: #4da6ff;\n    box-shadow: inset 2px 2px 4px #9bcdff;\n  }\n`;\nconst OtherActionsArea = styled.div`\n  ${flexbox({\n  dir: \"column\"\n})};\n  flex-basis: 65%;\n  height: 65%;\n  width: 100%;\n  background: ${({\n  colorwayStyle\n}) => colorwayStyle};\n  border-radius: 10px 0 10px 10px;\n`;\nconst SecondMoveButton = styled(FirstMoveButton)`\n  flex-basis: 50%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  color: white;\n`;\nconst DeleteTaskButton = styled(SecondMoveButton)`\n  flex-basis: 50%;\n  width: 100%;\n  border-radius: 0 0 10px 10px;\n  color: ${c.shyRed};\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/Task.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","_","flexbox","c","GiReturnArrow","getUserAction","updateArraysAction","Task","id","title","description","deadline","colorway","urgency","status","firstButtonText","secondButtonText","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","tasksCounter","updatingArraysInDataBase","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","urgencyShadow","selectUrgency","colorwayStyle","selectColorway","taskBlack","taskBlue","taskTurquoise","taskGreen","taskPink","selectChange","arrayToRemoveFrom","arrayToAddInto","destination","deleteTask","selectedTask","remove","item","newStatusSelectedTask","push","handleFirstMove","handleSecondMove","handleDelete","TaskContainer","div","FaceSide","OptionsButton","DetailsSection","dir","jc","HeaderArea","Title","darkText","InfoArea","Description","ai","Deadline","shyRed","BackSide","OptionsButtonBack","HrMarker","hr","MainActionArea","FirstMoveButton","OtherActionsArea","SecondMoveButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\nimport { GiReturnArrow } from \"react-icons/gi\";\r\n\r\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst Task = ({\r\n  id,\r\n  title,\r\n  description,\r\n  deadline,\r\n  colorway,\r\n  urgency,\r\n  status,\r\n  firstButtonText,\r\n  secondButtonText\r\n}) => {\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  const tasksCounter = tasksArrays.tasksCounter;\r\n\r\n  //--SERVER FUNCTIONS--//\r\n\r\n  const updatingArraysInDataBase = async () => {\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter\r\n    };\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays) // We send data in JSON format\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n  };\r\n\r\n  //--------------//\r\n\r\n  let urgencyShadow = ``;\r\n\r\n  const selectUrgency = (() => {\r\n    switch (urgency) {\r\n      case \"high\":\r\n        urgencyShadow = `-6px -6px 16px 0 red,\r\n        6px 6px 16px 0 red`;\r\n        break;\r\n      case \"regular\":\r\n        urgencyShadow = `-6px -6px 10px 0 blue,\r\n        6px 6px 10px 0 blue`;\r\n        break;\r\n      case \"low\":\r\n        urgencyShadow = `-3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n        3px 3px 6px 0 rgba(54, 73, 79, 0.25)`;\r\n        break;\r\n\r\n      default:\r\n        urgencyShadow = `-3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n      3px 3px 6px 0 rgba(54, 73, 79, 0.25)`;\r\n        break;\r\n    }\r\n  })();\r\n\r\n  let colorwayStyle = ``;\r\n\r\n  const selectColorway = (() => {\r\n    switch (colorway) {\r\n      case \"black\":\r\n        colorwayStyle = c.taskBlack;\r\n        break;\r\n      case \"blue\":\r\n        colorwayStyle = c.taskBlue;\r\n        break;\r\n      case \"turquoise\":\r\n        colorwayStyle = c.taskTurquoise;\r\n        break;\r\n      case \"green\":\r\n        colorwayStyle = c.taskGreen;\r\n        break;\r\n      case \"pink\":\r\n        colorwayStyle = c.taskPink;\r\n        break;\r\n\r\n      default:\r\n        colorwayStyle = c.taskBlack;\r\n        break;\r\n    }\r\n  })();\r\n\r\n  const selectChange = (\r\n    arrayToRemoveFrom,\r\n    arrayToAddInto,\r\n    destination,\r\n    deleteTask\r\n  ) => {\r\n    const selectedTask = _.remove(arrayToRemoveFrom, item => {\r\n      return item.id === id;\r\n    });\r\n\r\n    if (deleteTask === true) {\r\n      setCardIsFlipped(false);\r\n      dispatch(updateArraysAction(arrayToRemoveFrom));\r\n      updatingArraysInDataBase();\r\n      return;\r\n    }\r\n\r\n    const newStatusSelectedTask = {\r\n      ...selectedTask[0],\r\n      status: destination\r\n    };\r\n    arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n    // WARNING: because JS is flexable, this way will create duplicates rather than run over the current key:value pair.\r\n    // const updatedArrays = {\r\n    //   arrayToRemoveFrom,\r\n    //   arrayToAddInto\r\n    // };\r\n\r\n    const updatedArrays = {\r\n      arrayToRemoveFrom: arrayToRemoveFrom,\r\n      arrayToAddInto: arrayToAddInto\r\n    };\r\n\r\n    setCardIsFlipped(false);\r\n    dispatch(updateArraysAction(updatedArrays));\r\n  };\r\n\r\n  const handleFirstMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, inProgressArray, \"inProgress\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, completedTasksArray, \"done\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, completedTasksArray, \"done\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, todoArray, \"todo\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, todoArray, \"todo\");\r\n        updatingArraysInDataBase();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        selectChange(todoArray, null, null, true);\r\n        break;\r\n      case \"inProgress\":\r\n        selectChange(inProgressArray, null, null, true);\r\n        break;\r\n      case \"done\":\r\n        selectChange(completedTasksArray, null, null, true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped} urgencyShadow={urgencyShadow}>\r\n      <FaceSide>\r\n        <OptionsButton\r\n          onClick={() => setCardIsFlipped(!cardIsFlipped)}\r\n          colorwayStyle={colorwayStyle}\r\n        >\r\n          <GiReturnArrow />\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <HeaderArea>\r\n            <Title>{title}</Title>\r\n          </HeaderArea>\r\n          <InfoArea colorwayStyle={colorwayStyle}>\r\n            <Description>{description}</Description>\r\n            <Deadline>{deadline}</Deadline>\r\n          </InfoArea>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButtonBack\r\n          onClick={() => setCardIsFlipped(!cardIsFlipped)}\r\n          colorwayStyle={colorwayStyle}\r\n        >\r\n          <GiReturnArrow />\r\n        </OptionsButtonBack>\r\n\r\n        <MainActionArea>\r\n          <FirstMoveButton\r\n            onClick={() => {\r\n              handleFirstMove(status);\r\n            }}\r\n          >\r\n            {firstButtonText}\r\n            <HrMarker />\r\n          </FirstMoveButton>\r\n        </MainActionArea>\r\n        <OtherActionsArea colorwayStyle={colorwayStyle}>\r\n          <SecondMoveButton\r\n            onClick={() => {\r\n              handleSecondMove(status);\r\n            }}\r\n          >\r\n            {secondButtonText}\r\n            <HrMarker />\r\n          </SecondMoveButton>\r\n          <DeleteTaskButton\r\n            onClick={() => {\r\n              handleDelete(status);\r\n            }}\r\n          >\r\n            Delete Tracker\r\n            <HrMarker />\r\n          </DeleteTaskButton>\r\n        </OtherActionsArea>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 10px;\r\n  height: 30%;\r\n  max-height: 200px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: ${({ urgencyShadow }) => urgencyShadow};\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  ${flexbox()};\r\n  position: absolute;\r\n  z-index: 2;\r\n  right: 0;\r\n  top: 0;\r\n  height: 35%;\r\n  width: 50px;\r\n  font-size: 1.4rem;\r\n  transform: rotateY(180deg) rotateX(180deg);\r\n  border-radius: 0 10px 0 0;\r\n  background: white;\r\n  transition: 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst HeaderArea = styled.div`\r\n  ${flexbox};\r\n  flex-basis: 35%;\r\n  height: 35%;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  ${flexbox({ jc: \"flex-start\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n  color: ${c.darkText};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst InfoArea = styled.div`\r\n  ${flexbox({ dir: \"column\" })};\r\n  flex-basis: 65%;\r\n  height: 65%;\r\n  width: 100%;\r\n  border-radius: 10px 0 10px 10px;\r\n  background: ${({ colorwayStyle }) => colorwayStyle};\r\n`;\r\n\r\nconst Description = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  flex-basis: 80%;\r\n  height: 80%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  padding: 10px;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-end\" })}\r\n  flex-basis: 20%;\r\n  height: 20%;\r\n  width: 100%;\r\n  background: ${({ colorwayStyle }) => colorwayStyle};\r\n  border-radius: 0 0 10px 10px;\r\n  font-weight: bold;\r\n  padding: 0 0 8px 10px;\r\n  color: ${c.shyRed};\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst OptionsButtonBack = styled(OptionsButton)`\r\n  height: 35%;\r\n  transform: rotateY(0) rotateX(0);\r\n`;\r\n\r\nconst HrMarker = styled.hr`\r\n  width: 70%;\r\n  height: 5px;\r\n  border-radius: 20px;\r\n  border: none;\r\n  transition: 0.3s ease-out;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst MainActionArea = styled.div`\r\n  ${flexbox()};\r\n  flex-basis: 35%;\r\n  height: 35%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FirstMoveButton = styled.div`\r\n  ${flexbox()};\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 10px 10px 0 0;\r\n  font-weight: bold;\r\n  transition: 0.2s ease-out;\r\n\r\n  :hover ${HrMarker} {\r\n    cursor: pointer;\r\n    background: #4da6ff;\r\n    box-shadow: inset 2px 2px 4px #9bcdff;\r\n  }\r\n`;\r\n\r\nconst OtherActionsArea = styled.div`\r\n  ${flexbox({ dir: \"column\" })};\r\n  flex-basis: 65%;\r\n  height: 65%;\r\n  width: 100%;\r\n  background: ${({ colorwayStyle }) => colorwayStyle};\r\n  border-radius: 10px 0 10px 10px;\r\n`;\r\n\r\nconst SecondMoveButton = styled(FirstMoveButton)`\r\n  flex-basis: 50%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  color: white;\r\n`;\r\n\r\nconst DeleteTaskButton = styled(SecondMoveButton)`\r\n  flex-basis: 50%;\r\n  width: 100%;\r\n  border-radius: 0 0 10px 10px;\r\n  color: ${c.shyRed};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}