{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Todo\\\\Todo.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { flexbox } from \"../../../style/mixins\";\nimport Task from \"../Task\";\n\nconst Todo = () => {\n  const loggedUser = useSelector(state => state.userReducer[0]);\n\n  const _useState = useState([{\n    title: \"Go to the bank\",\n    description: \"go and get money\",\n    deadline: \"today\",\n    colorway: \"blue\",\n    _id: 1\n  }, {\n    title: \"Go to the mall\",\n    description: \"go and get money\",\n    deadline: \"today\",\n    colorway: \"red\",\n    _id: 2\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoArrayTest = _useState2[0],\n        setTodoArray = _useState2[1]; // const todoTasks = loggedUser.todoArray.map((task, index) => {\n  //   return (\n  //     <Task\n  //       key={index}\n  //       title={task.title}\n  //       description={task.description}\n  //       deadline={task.deadline}\n  //       colorWay={task.colorWay}\n  //     />\n  //   );\n  // });\n\n\n  const todoTasks = todoArrayTest.map((task, index) => {\n    return React.createElement(Task, {\n      _id: task._id,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      colorway: task.colorway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  });\n  return React.createElement(Wrapper, {\n    id: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, todoTasks));\n};\n\nexport default Todo;\nconst Wrapper = styled.div`\n  vertical-align: top;\n  ${flexbox()};\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n  background: lightblue;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n`;\nconst TasksList = styled.div`\n  /* ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})}; */\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Todo/Todo.jsx"],"names":["React","useState","styled","useSelector","flexbox","Task","Todo","loggedUser","state","userReducer","title","description","deadline","colorway","_id","todoArrayTest","setTodoArray","todoTasks","map","task","index","Wrapper","div","TasksList","dir","jc"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAV,CAA9B;;AADiB,oBAGqBR,QAAQ,CAAC,CAC7C;AACES,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,WAAW,EAAE,kBAFf;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,GAAG,EAAE;AALP,GAD6C,EAQ7C;AACEJ,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,WAAW,EAAE,kBAFf;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,QAAQ,EAAE,KAJZ;AAKEC,IAAAA,GAAG,EAAE;AALP,GAR6C,CAAD,CAH7B;AAAA;AAAA,QAGVC,aAHU;AAAA,QAGKC,YAHL,kBAoBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMC,SAAS,GAAGF,aAAa,CAACG,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnD,WACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACL,GADZ;AAEE,MAAA,KAAK,EAAEK,IAAI,CAACT,KAFd;AAGE,MAAA,WAAW,EAAES,IAAI,CAACR,WAHpB;AAIE,MAAA,QAAQ,EAAEQ,IAAI,CAACP,QAJjB;AAKE,MAAA,QAAQ,EAAEO,IAAI,CAACN,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAViB,CAAlB;AAYA,SAAO,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYI,SAAZ,CAApB,CAAP;AACD,CA5CD;;AA8CA,eAAeX,IAAf;AAEA,MAAMe,OAAO,GAAGnB,MAAM,CAACoB,GAAI;;IAEvBlB,OAAO,EAAG;;;;;;;CAFd;AAWA,MAAMmB,SAAS,GAAGrB,MAAM,CAACoB,GAAI;OACtBlB,OAAO,CAAC;AAAEoB,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CAAD,CAAsC;;;;CADpD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\n\r\nimport Task from \"../Task\";\r\n\r\nconst Todo = () => {\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n\r\n  const [todoArrayTest, setTodoArray] = useState([\r\n    {\r\n      title: \"Go to the bank\",\r\n      description: \"go and get money\",\r\n      deadline: \"today\",\r\n      colorway: \"blue\",\r\n      _id: 1\r\n    },\r\n    {\r\n      title: \"Go to the mall\",\r\n      description: \"go and get money\",\r\n      deadline: \"today\",\r\n      colorway: \"red\",\r\n      _id: 2\r\n    }\r\n  ]);\r\n\r\n  // const todoTasks = loggedUser.todoArray.map((task, index) => {\r\n  //   return (\r\n  //     <Task\r\n  //       key={index}\r\n  //       title={task.title}\r\n  //       description={task.description}\r\n  //       deadline={task.deadline}\r\n  //       colorWay={task.colorWay}\r\n  //     />\r\n  //   );\r\n  // });\r\n  const todoTasks = todoArrayTest.map((task, index) => {\r\n    return (\r\n      <Task\r\n        _id={task._id}\r\n        title={task.title}\r\n        description={task.description}\r\n        deadline={task.deadline}\r\n        colorway={task.colorway}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <Wrapper id=\"todo\">{<TasksList>{todoTasks}</TasksList>}</Wrapper>;\r\n};\r\n\r\nexport default Todo;\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: top;\r\n  ${flexbox()};\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n  background: lightblue;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TasksList = styled.div`\r\n  /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}