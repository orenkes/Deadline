{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { getUserAction } from \"../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\n\nconst Task = ({\n  title,\n  description,\n  deadline,\n  colorway,\n  status,\n  id,\n  firstButtonText,\n  secondButtonText,\n  refreshCounter,\n  setRefreshCounter,\n  setArrayLengthChekcer\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        statusChangeCounter = _useState2[0],\n        setStatusChangeCounter = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardIsFlipped = _useState4[0],\n        setCardIsFlipped = _useState4[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n\n  const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination, deleteTask) => {\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\n      return n.id === id;\n    });\n\n    console.log(\"selectedtask: \", selectedTask[0]);\n\n    if (deleteTask === true) {\n      setCardIsFlipped(false);\n      setRefreshCounter(refreshCounter + 1);\n      dispatch(updateArraysAction(arrayToRemoveFrom));\n      return;\n    }\n\n    const newStatusSelectedTask = _objectSpread({}, selectedTask[0], {\n      status: destination\n    });\n\n    arrayToAddInto.push(newStatusSelectedTask);\n    const updatedArrays = {\n      arrayToRemoveFrom,\n      arrayToAddInto\n    };\n    setCardIsFlipped(false);\n    setRefreshCounter(refreshCounter + 1);\n    dispatch(updateArraysAction(updatedArrays));\n  };\n\n  const handleFirstMove = () => {\n    switch (status) {\n      case \"todo\":\n        return selectChange(todoArray, inProgressArray, \"inProgress\");\n        break;\n\n      case \"inProgress\":\n        return selectChange(inProgressArray, completedTasksArray, \"done\");\n        break;\n\n      case \"done\":\n        return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        return selectChange(todoArray, completedTasksArray, \"done\");\n        break;\n\n      case \"inProgress\":\n        return selectChange(inProgressArray, todoArray, \"todo\");\n        break;\n\n      case \"done\":\n        return selectChange(completedTasksArray, todoArray, \"todo\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    switch (status) {\n      case \"todo\":\n        return selectChange(todoArray, null, null, true);\n        break;\n\n      case \"inProgress\":\n        return selectChange(inProgressArray, null, null, true);\n        break;\n\n      case \"done\":\n        return selectChange(completedTasksArray, null, null, true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"flip\")), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, title), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, deadline))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(OptionsButtonBack, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"flip\")), React.createElement(FirstMoveButton, {\n    onClick: handleFirstMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, firstButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(SecondMoveButton, {\n    onClick: handleSecondMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, secondButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(DeleteTaskButton, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Delete Tracker\", React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 5px;\n  height: 30%;\n  width: 90%;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  position: absolute;\n  z-index: 2;\n  right: 0;\n  top: 0;\n  height: 20%;\n  width: 10%;\n  background: ${c.bgSlateBlue};\n  border-radius: 10px 10px 0 10px;\n  box-shadow: -2px 2px 5px 0 rgba(80, 80, 80, 0.4);\n\n  :hover {\n    cursor: pointer;\n  }\n\n  div {\n    ${flexbox()};\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    background: lightcoral;\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst Title = styled.div`\n  ${flexbox({\n  jc: \"flex-start\"\n})}\n  flex-basis: 20%;\n  height: 20%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding-left: 8px;\n\n  color: ${c.darkText};\n`;\nconst Description = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  flex-basis: 60%;\n  height: 70%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  background: ${c.bgSlateBlue};\n  padding: 8px;\n  color: white;\n  font-size: 0.9rem;\n`;\nconst Deadline = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  flex-basis: 20%;\n  height: 10%;\n\n  width: 100%;\n  background: ${c.bgSlateBlue};\n  border-radius: 0 0 10px 10px;\n  font-weight: bold;\n  padding: 8px;\n  color: ${c.shyRed};\n  font-size: 1rem;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst OptionsButtonBack = styled(OptionsButton)`\n  height: 33.333%;\n`;\nconst HrMarker = styled.hr`\n  width: 5%;\n  height: 8px;\n  border-radius: 10px;\n  border: none;\n  transition: 0.3s ease-out;\n  position: absolute;\n  bottom: 0;\n\n  box-shadow: inset 1px 1px 2px dimgray, inset -1px -1px 2px dimgray;\n`;\nconst FirstMoveButton = styled.div`\n  position: relative;\n  ${flexbox({\n  dir: \"column\"\n})};\n  width: 100%;\n  height: 33.333%;\n  border-radius: 10px 10px 0 0;\n  font-weight: bold;\n  transition: 0.2s ease-out;\n  :hover {\n    cursor: pointer;\n  }\n\n  :hover ${HrMarker} {\n    background: #4da6ff;\n    box-shadow: inset 2px 2px 4px #9bcdff;\n  }\n`;\nconst SecondMoveButton = styled(FirstMoveButton)`\n  border-radius: 10px 0 0 0;\n  background: ${c.bgSlateBlue};\n  color: white;\n`;\nconst DeleteTaskButton = styled(SecondMoveButton)`\n  border-radius: 0 0 10px 10px;\n  color: ${c.shyRed};\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","_","flexbox","c","getUserAction","updateArraysAction","Task","title","description","deadline","colorway","status","id","firstButtonText","secondButtonText","refreshCounter","setRefreshCounter","setArrayLengthChekcer","statusChangeCounter","setStatusChangeCounter","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","selectChange","arrayToRemoveFrom","arrayToAddInto","destination","deleteTask","selectedTask","remove","n","console","log","newStatusSelectedTask","push","updatedArrays","handleFirstMove","handleSecondMove","handleDelete","TaskContainer","div","FaceSide","OptionsButton","bgSlateBlue","DetailsSection","dir","jc","Title","darkText","Description","ai","Deadline","shyRed","BackSide","OptionsButtonBack","HrMarker","hr","FirstMoveButton","SecondMoveButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\n\r\nimport { getUserAction } from \"../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\r\n\r\nconst Task = ({\r\n  title,\r\n  description,\r\n  deadline,\r\n  colorway,\r\n  status,\r\n  id,\r\n  firstButtonText,\r\n  secondButtonText,\r\n  refreshCounter,\r\n  setRefreshCounter,\r\n  setArrayLengthChekcer\r\n}) => {\r\n  const [statusChangeCounter, setStatusChangeCounter] = useState(0);\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n\r\n  const selectChange = (\r\n    arrayToRemoveFrom,\r\n    arrayToAddInto,\r\n    destination,\r\n    deleteTask\r\n  ) => {\r\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n      return n.id === id;\r\n    });\r\n    console.log(\"selectedtask: \", selectedTask[0]);\r\n\r\n    if (deleteTask === true) {\r\n      setCardIsFlipped(false);\r\n      setRefreshCounter(refreshCounter + 1);\r\n      dispatch(updateArraysAction(arrayToRemoveFrom));\r\n      return;\r\n    }\r\n\r\n    const newStatusSelectedTask = {\r\n      ...selectedTask[0],\r\n      status: destination\r\n    };\r\n    arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n    const updatedArrays = {\r\n      arrayToRemoveFrom,\r\n      arrayToAddInto\r\n    };\r\n\r\n    setCardIsFlipped(false);\r\n    setRefreshCounter(refreshCounter + 1);\r\n    dispatch(updateArraysAction(updatedArrays));\r\n  };\r\n\r\n  const handleFirstMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return selectChange(todoArray, inProgressArray, \"inProgress\");\r\n        break;\r\n      case \"inProgress\":\r\n        return selectChange(inProgressArray, completedTasksArray, \"done\");\r\n        break;\r\n      case \"done\":\r\n        return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return selectChange(todoArray, completedTasksArray, \"done\");\r\n        break;\r\n      case \"inProgress\":\r\n        return selectChange(inProgressArray, todoArray, \"todo\");\r\n        break;\r\n      case \"done\":\r\n        return selectChange(completedTasksArray, todoArray, \"todo\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return selectChange(todoArray, null, null, true);\r\n        break;\r\n      case \"inProgress\":\r\n        return selectChange(inProgressArray, null, null, true);\r\n        break;\r\n      case \"done\":\r\n        return selectChange(completedTasksArray, null, null, true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped}>\r\n      <FaceSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <Title>{title}</Title>\r\n          <Description>{description}</Description>\r\n          <Deadline>{deadline}</Deadline>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButtonBack onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButtonBack>\r\n\r\n        <FirstMoveButton onClick={handleFirstMove}>\r\n          {firstButtonText}\r\n          <HrMarker />\r\n        </FirstMoveButton>\r\n        <SecondMoveButton onClick={handleSecondMove}>\r\n          {secondButtonText}\r\n          <HrMarker />\r\n        </SecondMoveButton>\r\n        <DeleteTaskButton onClick={handleDelete}>\r\n          Delete Tracker\r\n          <HrMarker />\r\n        </DeleteTaskButton>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 5px;\r\n  height: 30%;\r\n  width: 90%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  position: absolute;\r\n  z-index: 2;\r\n  right: 0;\r\n  top: 0;\r\n  height: 20%;\r\n  width: 10%;\r\n  background: ${c.bgSlateBlue};\r\n  border-radius: 10px 10px 0 10px;\r\n  box-shadow: -2px 2px 5px 0 rgba(80, 80, 80, 0.4);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  div {\r\n    ${flexbox()};\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: lightcoral;\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  ${flexbox({ jc: \"flex-start\" })}\r\n  flex-basis: 20%;\r\n  height: 20%;\r\n  width: 100%;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  padding-left: 8px;\r\n\r\n  color: ${c.darkText};\r\n`;\r\n\r\nconst Description = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  flex-basis: 60%;\r\n  height: 70%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  background: ${c.bgSlateBlue};\r\n  padding: 8px;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  flex-basis: 20%;\r\n  height: 10%;\r\n\r\n  width: 100%;\r\n  background: ${c.bgSlateBlue};\r\n  border-radius: 0 0 10px 10px;\r\n  font-weight: bold;\r\n  padding: 8px;\r\n  color: ${c.shyRed};\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst OptionsButtonBack = styled(OptionsButton)`\r\n  height: 33.333%;\r\n`;\r\n\r\nconst HrMarker = styled.hr`\r\n  width: 5%;\r\n  height: 8px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  transition: 0.3s ease-out;\r\n  position: absolute;\r\n  bottom: 0;\r\n\r\n  box-shadow: inset 1px 1px 2px dimgray, inset -1px -1px 2px dimgray;\r\n`;\r\n\r\nconst FirstMoveButton = styled.div`\r\n  position: relative;\r\n  ${flexbox({ dir: \"column\" })};\r\n  width: 100%;\r\n  height: 33.333%;\r\n  border-radius: 10px 10px 0 0;\r\n  font-weight: bold;\r\n  transition: 0.2s ease-out;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  :hover ${HrMarker} {\r\n    background: #4da6ff;\r\n    box-shadow: inset 2px 2px 4px #9bcdff;\r\n  }\r\n`;\r\n\r\nconst SecondMoveButton = styled(FirstMoveButton)`\r\n  border-radius: 10px 0 0 0;\r\n  background: ${c.bgSlateBlue};\r\n  color: white;\r\n`;\r\n\r\nconst DeleteTaskButton = styled(SecondMoveButton)`\r\n  border-radius: 0 0 10px 10px;\r\n  color: ${c.shyRed};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}