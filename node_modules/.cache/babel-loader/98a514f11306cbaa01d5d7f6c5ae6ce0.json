{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\BodyComponent\\\\Trackers\\\\Done.jsx\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as c from \"../../../../style/colors\";\nimport TasksLister from \"../../TasksLister\"; //-------- Redux --------//\n\nimport { markDone } from \"../../../../state/actions/markTabAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\n\nconst Done = () => {\n  const _useInView = useInView({\n    threshold: 0.5\n  }),\n        _useInView2 = _slicedToArray(_useInView, 2),\n        ref = _useInView2[0],\n        inView = _useInView2[1];\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const desktopView = useSelector(state => state.toggleViewReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatchCurrentTab();\n  }, [inView]);\n\n  const dispatchCurrentTab = () => {\n    if (inView) {\n      dispatch(markDone());\n      console.log(\"doneview\");\n    }\n  };\n\n  return React.createElement(Wrapper, {\n    id: \"done\",\n    ref: ref,\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TasksLister, {\n    arrayToMap: tasksArrays.completedTasksArray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default Done;\nconst Wrapper = styled.div`\n  vertical-align: top;\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n\n  background: ${c.gradientRed};\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\n\n  @media (min-width: 769px) {\n    width: ${({\n  desktopView\n}) => desktopView ? \"33.333%\" : \"100%\"};\n  }\n`; // const TasksList = styled.div`\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\n//   height: 100%;\n//   width: 100%;\n//   overflow-y: auto;\n// `;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/BodyComponent/Trackers/Done.jsx"],"names":["React","useEffect","styled","c","TasksLister","markDone","useSelector","useDispatch","useInView","Done","threshold","ref","inView","tasksArrays","state","updateArraysReducer","desktopView","toggleViewReducer","dispatch","dispatchCurrentTab","console","log","completedTasksArray","Wrapper","div","gradientRed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,0BAAnB;AAEA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,yCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,qBACKD,SAAS,CAAC;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAAD,CADd;AAAA;AAAA,QACVC,GADU;AAAA,QACLC,MADK;;AAEjB,QAAMC,WAAW,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,mBAAhB,CAA/B;AACA,QAAMC,WAAW,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,iBAAhB,CAA/B;AAEA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACP,MAAD,CAFM,CAAT;;AAIA,QAAMO,kBAAkB,GAAG,MAAM;AAC/B,QAAIP,MAAJ,EAAY;AACVM,MAAAA,QAAQ,CAACb,QAAQ,EAAT,CAAR;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,GALD;;AAOA,SACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEV,GAAxB;AAA6B,IAAA,WAAW,EAAEK,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEH,WAAW,CAACS,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAvBD;;AAyBA,eAAeb,IAAf;AAEA,MAAMc,OAAO,GAAGrB,MAAM,CAACsB,GAAI;;;;;;;;;gBASXrB,CAAC,CAACsB,WAAY;;;;;aAKjB,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAsBA,WAAW,GAAG,SAAH,GAAe,MAAQ;;CAdrE,C,CAkBA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as c from \"../../../../style/colors\";\r\n\r\nimport TasksLister from \"../../TasksLister\";\r\n\r\n//-------- Redux --------//\r\nimport { markDone } from \"../../../../state/actions/markTabAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst Done = () => {\r\n  const [ref, inView] = useInView({ threshold: 0.5 });\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatchCurrentTab();\r\n  }, [inView]);\r\n\r\n  const dispatchCurrentTab = () => {\r\n    if (inView) {\r\n      dispatch(markDone());\r\n      console.log(\"doneview\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper id=\"done\" ref={ref} desktopView={desktopView}>\r\n      <TasksLister arrayToMap={tasksArrays.completedTasksArray} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Done;\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: top;\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: ${c.gradientRed};\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\r\n\r\n  @media (min-width: 769px) {\r\n    width: ${({ desktopView }) => (desktopView ? \"33.333%\" : \"100%\")};\r\n  }\r\n`;\r\n\r\n// const TasksList = styled.div`\r\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n//   height: 100%;\r\n//   width: 100%;\r\n//   overflow-y: auto;\r\n// `;\r\n"]},"metadata":{},"sourceType":"module"}