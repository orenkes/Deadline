{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getUserAction } from \"../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../state/actions/tasksArraysAction\";\n\nconst Task = ({\n  title,\n  description,\n  deadline,\n  colorway,\n  status,\n  id\n}) => {\n  const _useState = useState(status),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentStatus = _useState2[0],\n        setCurrentStatus = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstMoveOptionDisplay = _useState4[0],\n        setFirstMoveOptionDisplay = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        secondMoveOptionDisplay = _useState6[0],\n        setSecondMoveOptionDisplay = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cardIsFlipped = _useState8[0],\n        setCardIsFlipped = _useState8[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateTasksArraysReducer);\n  useEffect(() => {\n    firstMoveOption();\n    secondMoveOption();\n  }, [currentStatus]);\n\n  const firstMoveOption = () => {\n    switch (currentStatus) {\n      case \"todo\":\n        return setFirstMoveOptionDisplay(\"Forward to In Progress\");\n        break;\n\n      case \"inProgress\":\n        return setFirstMoveOptionDisplay(\"Forward to Done\");\n        break;\n\n      case \"done\":\n        return setFirstMoveOptionDisplay(\"Return to In Progress\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const secondMoveOption = () => {\n    switch (currentStatus) {\n      case \"todo\":\n        return setSecondMoveOptionDisplay(\"Forward to Done\");\n        break;\n\n      case \"inProgress\":\n        return setSecondMoveOptionDisplay(\"Return to Todo\");\n        break;\n\n      case \"done\":\n        return setSecondMoveOptionDisplay(\"Return to Todo\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const selectChange = (arrayToRemoveFrom, arrayToAddTo, newStatus) => {\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\n      return n.id === id;\n    });\n\n    arrayToAddTo.push(...selectedTask);\n    const updatedArrays = {\n      todoArray: arrayToRemoveFrom,\n      inProgressArray: arrayToAddTo\n    };\n    dispatch(updateArraysAction(updatedArrays));\n  };\n\n  const handleFirstMove = () => {\n    switch (currentStatus) {\n      case \"todo\":\n        setCurrentStatus(\"inProgress\");\n        return selectChange(tasksArrays.todoArray, tasksArrays.inProgressArray);\n        break;\n\n      case \"inprogress\":\n        setCurrentStatus(\"done\");\n        return selectChange(tasksArrays.inProgressArray, tasksArrays.completedTasksArray); // push > done\n\n        break;\n\n      case \"done\":\n        setCurrentStatus(\"inProgress\");\n        return selectChange(tasksArrays.completedTasksArray, tasksArrays.inProgressArray); // push back > in progress\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        setCurrentStatus(\"done\");\n        return selectChange(tasksArrays.todoArray, tasksArrays.completedTasksArray); // push > in Done\n\n        break;\n\n      case \"inprogress\":\n        setCurrentStatus(\"todo\");\n        return selectChange(tasksArrays.inProgressArray, tasksArrays.todoArray); // push back > todo\n\n        break;\n\n      case \"done\":\n        setCurrentStatus(\"todo\");\n        return selectChange(tasksArrays.completedTasksArray, tasksArrays.todoArray); // push back > todo\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {};\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"flip\")), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, title), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, deadline))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"flip\")), React.createElement(MoveToButton, {\n    onClick: handleFirstMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, firstMoveOptionDisplay), React.createElement(MoveToButton, {\n    onClick: handleSecondMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, secondMoveOptionDisplay), React.createElement(DeleteTaskButton, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Delete Tracker\")));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 5px;\n  height: 30%;\n  width: 90%;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 20%;\n  width: 10%;\n  background: lightsteelblue;\n  border-radius: 10px 10px 0 10px;\n\n  div {\n    ${flexbox()};\n\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    background: lightcoral;\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst Title = styled.div`\n  flex-basis: 20%;\n  height: 20%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 5px;\n`;\nconst Description = styled.div`\n  flex-basis: 60%;\n  height: 70%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  background: lightsteelblue;\n  padding: 5px;\n`;\nconst Deadline = styled.div`\n  flex-basis: 20%;\n  height: 10%;\n\n  width: 100%;\n  background: lightsteelblue;\n  border-radius: 0 0 10px 10px;\n  padding: 5px;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst MoveToButton = styled.div`\n  width: 100%;\n  border: 1px solid black;\n  height: 33%;\n`;\nconst DeleteTaskButton = styled.div`\n  height: 33%;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task.jsx"],"names":["React","useState","useEffect","styled","flexbox","useSelector","useDispatch","_","getUserAction","updateArraysAction","Task","title","description","deadline","colorway","status","id","currentStatus","setCurrentStatus","firstMoveOptionDisplay","setFirstMoveOptionDisplay","secondMoveOptionDisplay","setSecondMoveOptionDisplay","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","tasksArrays","updateTasksArraysReducer","firstMoveOption","secondMoveOption","selectChange","arrayToRemoveFrom","arrayToAddTo","newStatus","selectedTask","remove","n","push","updatedArrays","todoArray","inProgressArray","handleFirstMove","completedTasksArray","handleSecondMove","handleDelete","TaskContainer","div","FaceSide","OptionsButton","DetailsSection","dir","jc","Title","Description","Deadline","BackSide","MoveToButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getUserAction } from \"../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../state/actions/tasksArraysAction\";\r\n\r\nconst Task = ({ title, description, deadline, colorway, status, id }) => {\r\n  const [currentStatus, setCurrentStatus] = useState(status);\r\n  const [firstMoveOptionDisplay, setFirstMoveOptionDisplay] = useState(\"\");\r\n  const [secondMoveOptionDisplay, setSecondMoveOptionDisplay] = useState(\"\");\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateTasksArraysReducer);\r\n\r\n  useEffect(() => {\r\n    firstMoveOption();\r\n    secondMoveOption();\r\n  }, [currentStatus]);\r\n\r\n  const firstMoveOption = () => {\r\n    switch (currentStatus) {\r\n      case \"todo\":\r\n        return setFirstMoveOptionDisplay(\"Forward to In Progress\");\r\n        break;\r\n      case \"inProgress\":\r\n        return setFirstMoveOptionDisplay(\"Forward to Done\");\r\n        break;\r\n      case \"done\":\r\n        return setFirstMoveOptionDisplay(\"Return to In Progress\");\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const secondMoveOption = () => {\r\n    switch (currentStatus) {\r\n      case \"todo\":\r\n        return setSecondMoveOptionDisplay(\"Forward to Done\");\r\n        break;\r\n      case \"inProgress\":\r\n        return setSecondMoveOptionDisplay(\"Return to Todo\");\r\n        break;\r\n      case \"done\":\r\n        return setSecondMoveOptionDisplay(\"Return to Todo\");\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const selectChange = (arrayToRemoveFrom, arrayToAddTo, newStatus) => {\r\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n      return n.id === id;\r\n    });\r\n    arrayToAddTo.push(...selectedTask);\r\n\r\n    const updatedArrays = {\r\n      todoArray: arrayToRemoveFrom,\r\n      inProgressArray: arrayToAddTo\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n  };\r\n\r\n  const handleFirstMove = () => {\r\n    switch (currentStatus) {\r\n      case \"todo\":\r\n        setCurrentStatus(\"inProgress\");\r\n        return selectChange(tasksArrays.todoArray, tasksArrays.inProgressArray);\r\n\r\n        break;\r\n      case \"inprogress\":\r\n        setCurrentStatus(\"done\");\r\n        return selectChange(\r\n          tasksArrays.inProgressArray,\r\n          tasksArrays.completedTasksArray\r\n        );\r\n\r\n        // push > done\r\n        break;\r\n      case \"done\":\r\n        setCurrentStatus(\"inProgress\");\r\n        return selectChange(\r\n          tasksArrays.completedTasksArray,\r\n          tasksArrays.inProgressArray\r\n        );\r\n        // push back > in progress\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        setCurrentStatus(\"done\");\r\n        return selectChange(\r\n          tasksArrays.todoArray,\r\n          tasksArrays.completedTasksArray\r\n        );\r\n        // push > in Done\r\n        break;\r\n      case \"inprogress\":\r\n        setCurrentStatus(\"todo\");\r\n        return selectChange(tasksArrays.inProgressArray, tasksArrays.todoArray);\r\n        // push back > todo\r\n        break;\r\n      case \"done\":\r\n        setCurrentStatus(\"todo\");\r\n        return selectChange(\r\n          tasksArrays.completedTasksArray,\r\n          tasksArrays.todoArray\r\n        );\r\n        // push back > todo\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {};\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped}>\r\n      <FaceSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <Title>{title}</Title>\r\n          <Description>{description}</Description>\r\n          <Deadline>{deadline}</Deadline>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n\r\n        <MoveToButton onClick={handleFirstMove}>\r\n          {firstMoveOptionDisplay}\r\n        </MoveToButton>\r\n        <MoveToButton onClick={handleSecondMove}>\r\n          {secondMoveOptionDisplay}\r\n        </MoveToButton>\r\n        <DeleteTaskButton onClick={handleDelete}>\r\n          Delete Tracker\r\n        </DeleteTaskButton>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 5px;\r\n  height: 30%;\r\n  width: 90%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 20%;\r\n  width: 10%;\r\n  background: lightsteelblue;\r\n  border-radius: 10px 10px 0 10px;\r\n\r\n  div {\r\n    ${flexbox()};\r\n\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: lightcoral;\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 20%;\r\n  height: 20%;\r\n  width: 100%;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  flex-basis: 60%;\r\n  height: 70%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  background: lightsteelblue;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  flex-basis: 20%;\r\n  height: 10%;\r\n\r\n  width: 100%;\r\n  background: lightsteelblue;\r\n  border-radius: 0 0 10px 10px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MoveToButton = styled.div`\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  height: 33%;\r\n`;\r\n\r\nconst DeleteTaskButton = styled.div`\r\n  height: 33%;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}