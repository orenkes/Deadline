{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\nimport { updatingArraysInDataBase, deletingFromArrayInDataBase, selectChange, handleFirstMove, handleSecondMove, handleDelete } from \"./taskLogic\";\n\nconst Task = ({\n  title,\n  description,\n  deadline,\n  colorway,\n  status,\n  id,\n  firstButtonText,\n  secondButtonText,\n  setArrayLengthChekcer\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardIsFlipped = _useState2[0],\n        setCardIsFlipped = _useState2[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray; // const selectChange = (\n  //   arrayToRemoveFrom,\n  //   arrayToAddInto,\n  //   destination,\n  //   deleteTask\n  // ) => {\n  //   const selectedTask = _.remove(arrayToRemoveFrom, n => {\n  //     return n.id === id;\n  //   });\n  //   console.log(\"selectedtask: \", selectedTask[0]);\n  //   if (deleteTask === true) {\n  //     setCardIsFlipped(false);\n  //     // setRefreshCounter(refreshCounter + 1);\n  //     dispatch(updateArraysAction(arrayToRemoveFrom));\n  //     return;\n  //   }\n  //   const newStatusSelectedTask = {\n  //     ...selectedTask[0],\n  //     status: destination\n  //   };\n  //   arrayToAddInto.push(newStatusSelectedTask);\n  //   const updatedArrays = {\n  //     arrayToRemoveFrom,\n  //     arrayToAddInto\n  //   };\n  //   setCardIsFlipped(false);\n  //   // setRefreshCounter(refreshCounter + 1);\n  //   dispatch(updateArraysAction(updatedArrays));\n  // };\n  // const handleFirstMove = () => {\n  //   switch (status) {\n  //     case \"todo\":\n  //       return selectChange(todoArray, inProgressArray, \"inProgress\");\n  //       break;\n  //     case \"inProgress\":\n  //       return selectChange(inProgressArray, completedTasksArray, \"done\");\n  //       break;\n  //     case \"done\":\n  //       return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n  // const handleSecondMove = () => {\n  //   switch (status) {\n  //     case \"todo\":\n  //       return selectChange(todoArray, completedTasksArray, \"done\");\n  //       break;\n  //     case \"inProgress\":\n  //       return selectChange(inProgressArray, todoArray, \"todo\");\n  //       break;\n  //     case \"done\":\n  //       return selectChange(completedTasksArray, todoArray, \"todo\");\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n  // const handleDelete = () => {\n  //   switch (status) {\n  //     case \"todo\":\n  //       return selectChange(todoArray, null, null, true);\n  //       break;\n  //     case \"inProgress\":\n  //       return selectChange(inProgressArray, null, null, true);\n  //       break;\n  //     case \"done\":\n  //       return selectChange(completedTasksArray, null, null, true);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"flip\")), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, title), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, deadline))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(OptionsButtonBack, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"flip\")), React.createElement(FirstMoveButton, {\n    onClick: () => {\n      handleFirstMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, firstButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(SecondMoveButton, {\n    onClick: () => {\n      handleSecondMove(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, secondButtonText, React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(DeleteTaskButton, {\n    onClick: () => {\n      handleDelete(status);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Delete Tracker\", React.createElement(HrMarker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 5px;\n  height: 30%;\n  max-height: 200px;\n  width: 90%;\n  max-width: 500px;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  position: absolute;\n  z-index: 2;\n  right: 0;\n  top: 0;\n  height: 30%;\n  width: 50px;\n  background: ${c.bgSlateBlue};\n  border-radius: 10px 10px 0 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  div {\n    ${flexbox()};\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    background: lightcoral;\n    transition: 0.3s ease-in-out;\n    :hover {\n      transform: scale(1.02) translateX(2px) translateY(-4px);\n      box-shadow: -2px 2px 6px ${c.darkText};\n    }\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst Title = styled.div`\n  ${flexbox({\n  jc: \"flex-start\"\n})}\n  flex-basis: 30%;\n  height: 30%;\n  width: 100%;\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding-left: 10px;\n\n  color: ${c.darkText};\n`;\nconst Description = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  flex-basis: 60%;\n  height: 60%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  background: ${c.bgSlateBlue};\n  padding: 10px;\n  color: white;\n  font-size: 0.9rem;\n`;\nconst Deadline = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-end\"\n})}\n  flex-basis: 10%;\n  height: 10%;\n\n  width: 100%;\n  background: ${c.bgSlateBlue};\n  border-radius: 0 0 10px 10px;\n  font-weight: bold;\n  padding: 0 0 8px 10px;\n  color: ${c.shyRed};\n  font-size: 1rem;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst OptionsButtonBack = styled(OptionsButton)`\n  height: 33.333%;\n`;\nconst HrMarker = styled.hr`\n  width: 70%;\n  height: 5px;\n  border-radius: 20px;\n  border: none;\n  transition: 0.3s ease-out;\n  position: absolute;\n  bottom: 0;\n`;\nconst FirstMoveButton = styled.div`\n  position: relative;\n  ${flexbox({\n  dir: \"column\"\n})};\n  width: 100%;\n  height: 33.333%;\n  border-radius: 10px 10px 0 0;\n  font-weight: bold;\n  transition: 0.2s ease-out;\n  :hover {\n    cursor: pointer;\n  }\n\n  :hover ${HrMarker} {\n    background: #4da6ff;\n    box-shadow: inset 2px 2px 4px #9bcdff;\n  }\n`;\nconst SecondMoveButton = styled(FirstMoveButton)`\n  border-radius: 10px 0 0 0;\n  background: ${c.bgSlateBlue};\n  color: white;\n`;\nconst DeleteTaskButton = styled(SecondMoveButton)`\n  border-radius: 0 0 10px 10px;\n  color: ${c.shyRed};\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/Task.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","_","flexbox","c","getUserAction","updateArraysAction","updatingArraysInDataBase","deletingFromArrayInDataBase","selectChange","handleFirstMove","handleSecondMove","handleDelete","Task","title","description","deadline","colorway","status","id","firstButtonText","secondButtonText","setArrayLengthChekcer","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","TaskContainer","div","FaceSide","OptionsButton","bgSlateBlue","darkText","DetailsSection","dir","jc","Title","Description","ai","Deadline","shyRed","BackSide","OptionsButtonBack","HrMarker","hr","FirstMoveButton","SecondMoveButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nimport {\r\n  updatingArraysInDataBase,\r\n  deletingFromArrayInDataBase,\r\n  selectChange,\r\n  handleFirstMove,\r\n  handleSecondMove,\r\n  handleDelete\r\n} from \"./taskLogic\";\r\n\r\nconst Task = ({\r\n  title,\r\n  description,\r\n  deadline,\r\n  colorway,\r\n  status,\r\n  id,\r\n  firstButtonText,\r\n  secondButtonText,\r\n  setArrayLengthChekcer\r\n}) => {\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n\r\n  // const selectChange = (\r\n  //   arrayToRemoveFrom,\r\n  //   arrayToAddInto,\r\n  //   destination,\r\n  //   deleteTask\r\n  // ) => {\r\n  //   const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n  //     return n.id === id;\r\n  //   });\r\n  //   console.log(\"selectedtask: \", selectedTask[0]);\r\n\r\n  //   if (deleteTask === true) {\r\n  //     setCardIsFlipped(false);\r\n  //     // setRefreshCounter(refreshCounter + 1);\r\n  //     dispatch(updateArraysAction(arrayToRemoveFrom));\r\n  //     return;\r\n  //   }\r\n\r\n  //   const newStatusSelectedTask = {\r\n  //     ...selectedTask[0],\r\n  //     status: destination\r\n  //   };\r\n  //   arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n  //   const updatedArrays = {\r\n  //     arrayToRemoveFrom,\r\n  //     arrayToAddInto\r\n  //   };\r\n\r\n  //   setCardIsFlipped(false);\r\n  //   // setRefreshCounter(refreshCounter + 1);\r\n  //   dispatch(updateArraysAction(updatedArrays));\r\n  // };\r\n\r\n  // const handleFirstMove = () => {\r\n  //   switch (status) {\r\n  //     case \"todo\":\r\n  //       return selectChange(todoArray, inProgressArray, \"inProgress\");\r\n  //       break;\r\n  //     case \"inProgress\":\r\n  //       return selectChange(inProgressArray, completedTasksArray, \"done\");\r\n  //       break;\r\n  //     case \"done\":\r\n  //       return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  // const handleSecondMove = () => {\r\n  //   switch (status) {\r\n  //     case \"todo\":\r\n  //       return selectChange(todoArray, completedTasksArray, \"done\");\r\n  //       break;\r\n  //     case \"inProgress\":\r\n  //       return selectChange(inProgressArray, todoArray, \"todo\");\r\n  //       break;\r\n  //     case \"done\":\r\n  //       return selectChange(completedTasksArray, todoArray, \"todo\");\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  // const handleDelete = () => {\r\n  //   switch (status) {\r\n  //     case \"todo\":\r\n  //       return selectChange(todoArray, null, null, true);\r\n  //       break;\r\n  //     case \"inProgress\":\r\n  //       return selectChange(inProgressArray, null, null, true);\r\n  //       break;\r\n  //     case \"done\":\r\n  //       return selectChange(completedTasksArray, null, null, true);\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped}>\r\n      <FaceSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <Title>{title}</Title>\r\n          <Description>{description}</Description>\r\n          <Deadline>{deadline}</Deadline>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButtonBack onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButtonBack>\r\n\r\n        <FirstMoveButton\r\n          onClick={() => {\r\n            handleFirstMove(status);\r\n          }}\r\n        >\r\n          {firstButtonText}\r\n          <HrMarker />\r\n        </FirstMoveButton>\r\n        <SecondMoveButton\r\n          onClick={() => {\r\n            handleSecondMove(status);\r\n          }}\r\n        >\r\n          {secondButtonText}\r\n          <HrMarker />\r\n        </SecondMoveButton>\r\n        <DeleteTaskButton\r\n          onClick={() => {\r\n            handleDelete(status);\r\n          }}\r\n        >\r\n          Delete Tracker\r\n          <HrMarker />\r\n        </DeleteTaskButton>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 5px;\r\n  height: 30%;\r\n  max-height: 200px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  position: absolute;\r\n  z-index: 2;\r\n  right: 0;\r\n  top: 0;\r\n  height: 30%;\r\n  width: 50px;\r\n  background: ${c.bgSlateBlue};\r\n  border-radius: 10px 10px 0 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  div {\r\n    ${flexbox()};\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: lightcoral;\r\n    transition: 0.3s ease-in-out;\r\n    :hover {\r\n      transform: scale(1.02) translateX(2px) translateY(-4px);\r\n      box-shadow: -2px 2px 6px ${c.darkText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  ${flexbox({ jc: \"flex-start\" })}\r\n  flex-basis: 30%;\r\n  height: 30%;\r\n  width: 100%;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  padding-left: 10px;\r\n\r\n  color: ${c.darkText};\r\n`;\r\n\r\nconst Description = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  flex-basis: 60%;\r\n  height: 60%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  background: ${c.bgSlateBlue};\r\n  padding: 10px;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-end\" })}\r\n  flex-basis: 10%;\r\n  height: 10%;\r\n\r\n  width: 100%;\r\n  background: ${c.bgSlateBlue};\r\n  border-radius: 0 0 10px 10px;\r\n  font-weight: bold;\r\n  padding: 0 0 8px 10px;\r\n  color: ${c.shyRed};\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst OptionsButtonBack = styled(OptionsButton)`\r\n  height: 33.333%;\r\n`;\r\n\r\nconst HrMarker = styled.hr`\r\n  width: 70%;\r\n  height: 5px;\r\n  border-radius: 20px;\r\n  border: none;\r\n  transition: 0.3s ease-out;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst FirstMoveButton = styled.div`\r\n  position: relative;\r\n  ${flexbox({ dir: \"column\" })};\r\n  width: 100%;\r\n  height: 33.333%;\r\n  border-radius: 10px 10px 0 0;\r\n  font-weight: bold;\r\n  transition: 0.2s ease-out;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  :hover ${HrMarker} {\r\n    background: #4da6ff;\r\n    box-shadow: inset 2px 2px 4px #9bcdff;\r\n  }\r\n`;\r\n\r\nconst SecondMoveButton = styled(FirstMoveButton)`\r\n  border-radius: 10px 0 0 0;\r\n  background: ${c.bgSlateBlue};\r\n  color: white;\r\n`;\r\n\r\nconst DeleteTaskButton = styled(SecondMoveButton)`\r\n  border-radius: 0 0 10px 10px;\r\n  color: ${c.shyRed};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}