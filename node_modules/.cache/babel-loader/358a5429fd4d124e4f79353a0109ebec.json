{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Dashboard.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../style/mixins\"; //-------Components-------//\n\nimport Todo from \"./Todo/Todo\";\nimport InProgress from \"./InProgress/InProgress\";\nimport Done from \"./Done/Done\";\nimport TaskCreation from \"./TaskCreation\"; //-------Actions--------//\n\nimport { importUserAction } from \"../../state/actions/importUserAction\";\nimport { isLoggedAction } from \"../../state/actions/isLoggedAction\";\n\nconst Dashbord = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        popupIsOpen = _useState2[0],\n        setPopupIsOpen = _useState2[1];\n\n  const dispatch = useDispatch();\n  const isLogged = useSelector(state => state.isLoggedReducer);\n  const loggedUser = useSelector(state => state.userReducer[0]);\n\n  const signOut = () => {\n    dispatch(importUserAction({}));\n    dispatch(isLoggedAction({}));\n  };\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TaskCreationWrapper, {\n    popupIsOpen: popupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TaskCreationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TaskCreation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))), React.createElement(HeaderContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(LogOutButton, {\n    onClick: signOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Log Out\"), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Tracker\"), React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(TabsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TodoTab, {\n    href: \"#todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"To Do\"), React.createElement(InProgressTab, {\n    href: \"#progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"In Progress\"), React.createElement(DoneTab, {\n    href: \"#done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Done\")), React.createElement(TrackersContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(PageCarousel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(InProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Done, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(AddTrackerButton, {\n    onClick: () => setPopupIsOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nexport default Dashbord;\nconst Wrapper = styled.div`\n  ${flexbox()};\n  height: 100%;\n  width: 100%;\n`;\nconst AppContainer = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})};\n  flex-basis: 100%;\n  width: 100%;\n  height: 100vh;\n  max-width: 500px;\n  position: relative;\n`;\nconst TaskCreationWrapper = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 1;\n  background: rgba(0, 0, 0, 0.8);\n  transition: 2s ease-out;\n  transform: ${({\n  popupIsOpen\n}) => popupIsOpen ? \"scale(1)\" : \"scale(0)\"};\n`;\nconst TaskCreationContainer = styled.div`\n  width: 95%;\n  height: 50%;\n  position: absolute;\n`;\nconst HeaderContainer = styled.div`\n  ${flexbox({\n  jc: \"space-around\"\n})};\n  height: 50px;\n  width: 100%;\n`;\nconst LogOutButton = styled.button`\n  flex-basis: 10%;\n`;\nconst Header = styled.h1`\n  flex-basis: 70%;\n  font-size: 2rem;\n  text-align: center;\n`;\nconst Logo = styled.h1`\n  text-align: center;\n  flex-basis: 10%;\n  color: black;\n\n  div {\n    ${flexbox()};\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n  }\n`;\nconst TabsContainer = styled.div`\n  ${flexbox({\n  jc: \"space-evenly\"\n})};\n  width: 100%;\n  height: 75px;\n`;\nconst TodoTab = styled.a`\n  ${flexbox()};\n  flex-basis: 25%;\n  height: 100%;\n  border-radius: 15px 15px 0 0;\n  color: black;\n  text-decoration: none;\n`;\nconst InProgressTab = styled(TodoTab)``;\nconst DoneTab = styled(TodoTab)``;\nconst TrackersContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background: lightyellow;\n`;\nconst PageCarousel = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  white-space: nowrap;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n`;\nconst AddTrackerButton = styled.div`\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  border: 1px solid blue;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Dashboard.jsx"],"names":["React","useState","styled","useSelector","Redirect","Link","useDispatch","flexbox","Todo","InProgress","Done","TaskCreation","importUserAction","isLoggedAction","Dashbord","popupIsOpen","setPopupIsOpen","dispatch","isLogged","state","isLoggedReducer","loggedUser","userReducer","signOut","Wrapper","div","AppContainer","dir","jc","TaskCreationWrapper","TaskCreationContainer","HeaderContainer","LogOutButton","button","Header","h1","Logo","TabsContainer","TodoTab","a","InProgressTab","DoneTab","TrackersContainer","PageCarousel","AddTrackerButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { flexbox } from \"../../style/mixins\";\r\n\r\n//-------Components-------//\r\nimport Todo from \"./Todo/Todo\";\r\nimport InProgress from \"./InProgress/InProgress\";\r\nimport Done from \"./Done/Done\";\r\nimport TaskCreation from \"./TaskCreation\";\r\n\r\n//-------Actions--------//\r\nimport { importUserAction } from \"../../state/actions/importUserAction\";\r\nimport { isLoggedAction } from \"../../state/actions/isLoggedAction\";\r\n\r\nconst Dashbord = () => {\r\n  const [popupIsOpen, setPopupIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const isLogged = useSelector(state => state.isLoggedReducer);\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const signOut = () => {\r\n    dispatch(importUserAction({}));\r\n    dispatch(isLoggedAction({}));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* {isLogged === false && <Redirect push to=\"/\" />} */}\r\n      <AppContainer>\r\n        <TaskCreationWrapper popupIsOpen={popupIsOpen}>\r\n          <TaskCreationContainer>\r\n            <TaskCreation />\r\n          </TaskCreationContainer>\r\n        </TaskCreationWrapper>\r\n\r\n        <HeaderContainer>\r\n          <LogOutButton onClick={signOut}>Log Out</LogOutButton>\r\n          <Header>Tracker</Header>\r\n          <Logo>{/* <div>{loggedUser.avatar}</div> */}</Logo>\r\n        </HeaderContainer>\r\n\r\n        <TabsContainer>\r\n          <TodoTab href=\"#todo\">To Do</TodoTab>\r\n          <InProgressTab href=\"#progress\">In Progress</InProgressTab>\r\n          <DoneTab href=\"#done\">Done</DoneTab>\r\n        </TabsContainer>\r\n\r\n        <TrackersContainer>\r\n          <PageCarousel>\r\n            <Todo />\r\n            <InProgress />\r\n            <Done />\r\n          </PageCarousel>\r\n          <AddTrackerButton onClick={() => setPopupIsOpen(true)} />\r\n        </TrackersContainer>\r\n      </AppContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Dashbord;\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexbox()};\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"flex-start\" })};\r\n  flex-basis: 100%;\r\n  width: 100%;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  position: relative;\r\n`;\r\n\r\nconst TaskCreationWrapper = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  transition: 2s ease-out;\r\n  transform: ${({ popupIsOpen }) => (popupIsOpen ? \"scale(1)\" : \"scale(0)\")};\r\n`;\r\n\r\nconst TaskCreationContainer = styled.div`\r\n  width: 95%;\r\n  height: 50%;\r\n  position: absolute;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  ${flexbox({ jc: \"space-around\" })};\r\n  height: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst LogOutButton = styled.button`\r\n  flex-basis: 10%;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  flex-basis: 70%;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  text-align: center;\r\n  flex-basis: 10%;\r\n  color: black;\r\n\r\n  div {\r\n    ${flexbox()};\r\n    height: 30px;\r\n    width: 30px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  ${flexbox({ jc: \"space-evenly\" })};\r\n  width: 100%;\r\n  height: 75px;\r\n`;\r\n\r\nconst TodoTab = styled.a`\r\n  ${flexbox()};\r\n  flex-basis: 25%;\r\n  height: 100%;\r\n  border-radius: 15px 15px 0 0;\r\n  color: black;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst InProgressTab = styled(TodoTab)``;\r\nconst DoneTab = styled(TodoTab)``;\r\n\r\nconst TrackersContainer = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: lightyellow;\r\n`;\r\n\r\nconst PageCarousel = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n  scroll-snap-type: x mandatory;\r\n  scroll-behavior: smooth;\r\n`;\r\n\r\nconst AddTrackerButton = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n  border: 1px solid blue;\r\n  border-radius: 50%;\r\n  height: 50px;\r\n  width: 50px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}