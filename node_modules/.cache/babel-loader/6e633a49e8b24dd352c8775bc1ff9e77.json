{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Todo\\\\Todo.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../../style/mixins\";\nimport Task from \"../Task\";\n\nconst Todo = () => {\n  const loggedUser = useSelector(state => state.userReducer[0]);\n\n  const _useState = useState(loggedUser.todoArray.length),\n        _useState2 = _slicedToArray(_useState, 2),\n        arrayLengthChecker = _useState2[0],\n        setArrayLengthChekcer = _useState2[1]; // const [todoArrayTest, setTodoArray] = useState([\n  //   {\n  //     title: \"Go to the bank\",\n  //     description: \"go and get money\",\n  //     deadline: \"today\",\n  //     colorway: \"blue\",\n  //     _id: 1\n  //   },\n  //   {\n  //     title: \"Go to the mall\",\n  //     description: \"go and get money\",\n  //     deadline: \"today\",\n  //     colorway: \"red\",\n  //     _id: 2\n  //   }\n  // ]);\n\n\n  const todoTasks = () => {\n    return loggedUser.todoArray.map((task, index) => {\n      return React.createElement(Task, {\n        id: task.id,\n        key: index,\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline,\n        colorway: task.colorway,\n        status: task.status,\n        setArrayLengthChecker: setArrayLengthChecker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    });\n  }; // const todoTasks = todoArrayTest.map((task, index) => {\n  //   return (\n  //     <Task\n  //       _id={task._id}\n  //       title={task.title}\n  //       description={task.description}\n  //       deadline={task.deadline}\n  //       colorway={task.colorway}\n  //     />\n  //   );\n  // });\n\n\n  return React.createElement(Wrapper, {\n    id: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, todoTasks));\n};\n\nexport default Todo;\nconst Wrapper = styled.div`\n  vertical-align: top;\n  ${flexbox()};\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n  background: lightblue;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n`;\nconst TasksList = styled.div`\n  /* ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})}; */\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Todo/Todo.jsx"],"names":["React","useState","styled","useSelector","useDispatch","flexbox","Task","Todo","loggedUser","state","userReducer","todoArray","length","arrayLengthChecker","setArrayLengthChekcer","todoTasks","map","task","index","id","title","description","deadline","colorway","status","setArrayLengthChecker","Wrapper","div","TasksList","dir","jc"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAV,CAA9B;;AADiB,oBAEmCT,QAAQ,CAC1DO,UAAU,CAACG,SAAX,CAAqBC,MADqC,CAF3C;AAAA;AAAA,QAEVC,kBAFU;AAAA,QAEUC,qBAFV,kBAMjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOP,UAAU,CAACG,SAAX,CAAqBK,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,aACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,GAAG,EAAED,KAFP;AAGE,QAAA,KAAK,EAAED,IAAI,CAACG,KAHd;AAIE,QAAA,WAAW,EAAEH,IAAI,CAACI,WAJpB;AAKE,QAAA,QAAQ,EAAEJ,IAAI,CAACK,QALjB;AAME,QAAA,QAAQ,EAAEL,IAAI,CAACM,QANjB;AAOE,QAAA,MAAM,EAAEN,IAAI,CAACO,MAPf;AAQE,QAAA,qBAAqB,EAAEC,qBARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KAbM,CAAP;AAcD,GAfD,CAvBiB,CAwCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYV,SAAZ,CAApB,CAAP;AACD,CArDD;;AAuDA,eAAeR,IAAf;AAEA,MAAMmB,OAAO,GAAGxB,MAAM,CAACyB,GAAI;;IAEvBtB,OAAO,EAAG;;;;;;;CAFd;AAWA,MAAMuB,SAAS,GAAG1B,MAAM,CAACyB,GAAI;OACtBtB,OAAO,CAAC;AAAEwB,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CAAD,CAAsC;;;;CADpD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\n\r\nimport Task from \"../Task\";\r\n\r\nconst Todo = () => {\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const [arrayLengthChecker, setArrayLengthChekcer] = useState(\r\n    loggedUser.todoArray.length\r\n  );\r\n\r\n  // const [todoArrayTest, setTodoArray] = useState([\r\n  //   {\r\n  //     title: \"Go to the bank\",\r\n  //     description: \"go and get money\",\r\n  //     deadline: \"today\",\r\n  //     colorway: \"blue\",\r\n  //     _id: 1\r\n  //   },\r\n  //   {\r\n  //     title: \"Go to the mall\",\r\n  //     description: \"go and get money\",\r\n  //     deadline: \"today\",\r\n  //     colorway: \"red\",\r\n  //     _id: 2\r\n  //   }\r\n  // ]);\r\n\r\n  const todoTasks = () => {\r\n    return loggedUser.todoArray.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          status={task.status}\r\n          setArrayLengthChecker={setArrayLengthChecker}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  // const todoTasks = todoArrayTest.map((task, index) => {\r\n  //   return (\r\n  //     <Task\r\n  //       _id={task._id}\r\n  //       title={task.title}\r\n  //       description={task.description}\r\n  //       deadline={task.deadline}\r\n  //       colorway={task.colorway}\r\n  //     />\r\n  //   );\r\n  // });\r\n\r\n  return <Wrapper id=\"todo\">{<TasksList>{todoTasks}</TasksList>}</Wrapper>;\r\n};\r\n\r\nexport default Todo;\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: top;\r\n  ${flexbox()};\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n  background: lightblue;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TasksList = styled.div`\r\n  /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}