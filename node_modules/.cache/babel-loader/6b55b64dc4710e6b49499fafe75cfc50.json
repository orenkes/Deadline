{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Todo\\\\Todo.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../../style/mixins\";\nimport Task from \"../Task\";\n\nconst Todo = () => {\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  dispatch(updateArraysAction({\n    todoArray: loggedUser.todoArray,\n    inProgressArray: loggedUser.inProgressArray,\n    completedTasksArray: loggedUser.completedTasksArray\n  })); // const [todoArrayTest, setTodoArray] = useState([\n  //   {\n  //     title: \"Go to the bank\",\n  //     description: \"go and get money\",\n  //     deadline: \"today\",\n  //     colorway: \"blue\",\n  //     _id: 1\n  //   },\n  //   {\n  //     title: \"Go to the mall\",\n  //     description: \"go and get money\",\n  //     deadline: \"today\",\n  //     colorway: \"red\",\n  //     _id: 2\n  //   }\n  // ]);\n\n  const todoTasks = loggedUser.todoArray.map((task, index) => {\n    return React.createElement(Task, {\n      id: task.id,\n      key: index,\n      title: task.title,\n      description: task.description,\n      deadline: task.deadline,\n      colorWay: task.colorWay,\n      status: task.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }); // const todoTasks = todoArrayTest.map((task, index) => {\n  //   return (\n  //     <Task\n  //       _id={task._id}\n  //       title={task.title}\n  //       description={task.description}\n  //       deadline={task.deadline}\n  //       colorway={task.colorway}\n  //     />\n  //   );\n  // });\n\n  return React.createElement(Wrapper, {\n    id: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, todoTasks));\n};\n\nexport default Todo;\nconst Wrapper = styled.div`\n  vertical-align: top;\n  ${flexbox()};\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n  background: lightblue;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n`;\nconst TasksList = styled.div`\n  /* ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})}; */\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Todo/Todo.jsx"],"names":["React","useState","styled","useSelector","useDispatch","flexbox","Task","Todo","dispatch","loggedUser","state","userReducer","updateArraysAction","todoArray","inProgressArray","completedTasksArray","todoTasks","map","task","index","id","title","description","deadline","colorWay","status","Wrapper","div","TasksList","dir","jc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAV,CAA9B;AAEAH,EAAAA,QAAQ,CACNI,kBAAkB,CAAC;AACjBC,IAAAA,SAAS,EAAEJ,UAAU,CAACI,SADL;AAEjBC,IAAAA,eAAe,EAAEL,UAAU,CAACK,eAFX;AAGjBC,IAAAA,mBAAmB,EAAEN,UAAU,CAACM;AAHf,GAAD,CADZ,CAAR,CALiB,CAajB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,SAAS,GAAGP,UAAU,CAACI,SAAX,CAAqBI,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1D,WACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,MAAA,GAAG,EAAED,KAFP;AAGE,MAAA,KAAK,EAAED,IAAI,CAACG,KAHd;AAIE,MAAA,WAAW,EAAEH,IAAI,CAACI,WAJpB;AAKE,MAAA,QAAQ,EAAEJ,IAAI,CAACK,QALjB;AAME,MAAA,QAAQ,EAAEL,IAAI,CAACM,QANjB;AAOE,MAAA,MAAM,EAAEN,IAAI,CAACO,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAZiB,CAAlB,CA9BiB,CA2CjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYT,SAAZ,CAApB,CAAP;AACD,CAxDD;;AA0DA,eAAeT,IAAf;AAEA,MAAMmB,OAAO,GAAGxB,MAAM,CAACyB,GAAI;;IAEvBtB,OAAO,EAAG;;;;;;;CAFd;AAWA,MAAMuB,SAAS,GAAG1B,MAAM,CAACyB,GAAI;OACtBtB,OAAO,CAAC;AAAEwB,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CAAD,CAAsC;;;;CADpD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\n\r\nimport Task from \"../Task\";\r\n\r\nconst Todo = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n\r\n  dispatch(\r\n    updateArraysAction({\r\n      todoArray: loggedUser.todoArray,\r\n      inProgressArray: loggedUser.inProgressArray,\r\n      completedTasksArray: loggedUser.completedTasksArray\r\n    })\r\n  );\r\n\r\n  // const [todoArrayTest, setTodoArray] = useState([\r\n  //   {\r\n  //     title: \"Go to the bank\",\r\n  //     description: \"go and get money\",\r\n  //     deadline: \"today\",\r\n  //     colorway: \"blue\",\r\n  //     _id: 1\r\n  //   },\r\n  //   {\r\n  //     title: \"Go to the mall\",\r\n  //     description: \"go and get money\",\r\n  //     deadline: \"today\",\r\n  //     colorway: \"red\",\r\n  //     _id: 2\r\n  //   }\r\n  // ]);\r\n\r\n  const todoTasks = loggedUser.todoArray.map((task, index) => {\r\n    return (\r\n      <Task\r\n        id={task.id}\r\n        key={index}\r\n        title={task.title}\r\n        description={task.description}\r\n        deadline={task.deadline}\r\n        colorWay={task.colorWay}\r\n        status={task.status}\r\n      />\r\n    );\r\n  });\r\n  // const todoTasks = todoArrayTest.map((task, index) => {\r\n  //   return (\r\n  //     <Task\r\n  //       _id={task._id}\r\n  //       title={task.title}\r\n  //       description={task.description}\r\n  //       deadline={task.deadline}\r\n  //       colorway={task.colorway}\r\n  //     />\r\n  //   );\r\n  // });\r\n\r\n  return <Wrapper id=\"todo\">{<TasksList>{todoTasks}</TasksList>}</Wrapper>;\r\n};\r\n\r\nexport default Todo;\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: top;\r\n  ${flexbox()};\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n  background: lightblue;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst TasksList = styled.div`\r\n  /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}