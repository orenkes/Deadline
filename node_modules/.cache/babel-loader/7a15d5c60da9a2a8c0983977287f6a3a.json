{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TasksLister.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./Task/Task\";\nimport { flexbox } from \"../../style/mixins\";\nimport { useSelector } from \"react-redux\";\n\nconst TasksLister = ({\n  arrayToMap\n}) => {\n  const toggleSort = useSelector(state => state.toggleSortRedcuer);\n  useEffect(() => {\n    sortArray();\n  }, [toggleSort]);\n\n  const sortArray = () => {\n    //<--IF (sortTaskBy === false) THE TASKS SORTED BY DEADLINE-->//\n    if (toggleSort) {\n      const compare = (a, b) => {\n        const timeA = a.dateAndTimeSum;\n        const timeB = b.dateAndTimeSum;\n        let comparison = 0;\n\n        if (timeA > timeB) {\n          comparison = 1;\n        } else if (timeA < timeB) {\n          comparison = -1;\n        }\n\n        return comparison;\n      };\n\n      arrayToMap.sort(compare);\n    } //<--IF (sortTaskBy === true) THE TASKS SORTED BY URGENCY-->//\n    else {\n        const compare = (a, b) => {\n          const urgencyNumberA = () => {\n            switch (a.urgency) {\n              case \"low\":\n                return 0;\n                break;\n\n              case \"regular\":\n                return 1;\n                break;\n\n              case \"high\":\n                return 2;\n                break;\n            }\n          };\n\n          const urgencyNumberB = () => {\n            switch (b.urgency) {\n              case \"low\":\n                return 0;\n                break;\n\n              case \"regular\":\n                return 1;\n                break;\n\n              case \"high\":\n                return 2;\n                break;\n            }\n          };\n\n          const urgencyA = urgencyNumberA();\n          const urgencyB = urgencyNumberB();\n          let comparison = 0;\n\n          if (urgencyA < urgencyB) {\n            comparison = 1;\n          } else if (urgencyA > urgencyB) {\n            comparison = -1;\n          }\n\n          return comparison;\n        };\n\n        const sortedArray = arrayToMap.sort(compare);\n      } // <----------------------------->\n\n  };\n\n  const tasksMap = () => {\n    return arrayToMap.map((task, index) => {\n      return React.createElement(Task, {\n        id: task.id,\n        key: index,\n        dayText: task.dayText,\n        monthText: task.monthText,\n        dayNumber: task.dayNumber,\n        dateAndTimeSum: task.dateAndTimeSum,\n        time: task.time,\n        year: task.year,\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline,\n        colorway: task.colorway,\n        urgency: task.urgency,\n        status: task.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, tasksMap());\n};\n\nexport default TasksLister;\nconst TasksList = styled.div`\n  ${flexbox({\n  jc: \"flex-start\",\n  ai: \"flex-start\"\n})}\n  align-content: flex-start;\n  padding: 20px;\n  flex-wrap: wrap;\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TasksLister.jsx"],"names":["React","useState","useEffect","styled","Task","flexbox","useSelector","TasksLister","arrayToMap","toggleSort","state","toggleSortRedcuer","sortArray","compare","a","b","timeA","dateAndTimeSum","timeB","comparison","sort","urgencyNumberA","urgency","urgencyNumberB","urgencyA","urgencyB","sortedArray","tasksMap","map","task","index","id","dayText","monthText","dayNumber","time","year","title","description","deadline","colorway","status","TasksList","div","jc","ai"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./Task/Task\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TasksLister = ({ arrayToMap }) => {\r\n  const toggleSort = useSelector(state => state.toggleSortRedcuer);\r\n\r\n  useEffect(() => {\r\n    sortArray();\r\n  }, [toggleSort]);\r\n\r\n  const sortArray = () => {\r\n    //<--IF (sortTaskBy === false) THE TASKS SORTED BY DEADLINE-->//\r\n    if (toggleSort) {\r\n      const compare = (a, b) => {\r\n        const timeA = a.dateAndTimeSum;\r\n        const timeB = b.dateAndTimeSum;\r\n\r\n        let comparison = 0;\r\n        if (timeA > timeB) {\r\n          comparison = 1;\r\n        } else if (timeA < timeB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      };\r\n      arrayToMap.sort(compare);\r\n    }\r\n    //<--IF (sortTaskBy === true) THE TASKS SORTED BY URGENCY-->//\r\n    else {\r\n      const compare = (a, b) => {\r\n        const urgencyNumberA = () => {\r\n          switch (a.urgency) {\r\n            case \"low\":\r\n              return 0;\r\n              break;\r\n            case \"regular\":\r\n              return 1;\r\n              break;\r\n            case \"high\":\r\n              return 2;\r\n              break;\r\n          }\r\n        };\r\n\r\n        const urgencyNumberB = () => {\r\n          switch (b.urgency) {\r\n            case \"low\":\r\n              return 0;\r\n              break;\r\n            case \"regular\":\r\n              return 1;\r\n              break;\r\n            case \"high\":\r\n              return 2;\r\n              break;\r\n          }\r\n        };\r\n\r\n        const urgencyA = urgencyNumberA();\r\n        const urgencyB = urgencyNumberB();\r\n\r\n        let comparison = 0;\r\n        if (urgencyA < urgencyB) {\r\n          comparison = 1;\r\n        } else if (urgencyA > urgencyB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      };\r\n\r\n      const sortedArray = arrayToMap.sort(compare);\r\n    }\r\n    // <----------------------------->\r\n  };\r\n\r\n  const tasksMap = () => {\r\n    return arrayToMap.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          dayText={task.dayText}\r\n          monthText={task.monthText}\r\n          dayNumber={task.dayNumber}\r\n          dateAndTimeSum={task.dateAndTimeSum}\r\n          time={task.time}\r\n          year={task.year}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          urgency={task.urgency}\r\n          status={task.status}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return <TasksList>{tasksMap()}</TasksList>;\r\n};\r\n\r\nexport default TasksLister;\r\n\r\nconst TasksList = styled.div`\r\n  ${flexbox({ jc: \"flex-start\", ai: \"flex-start\" })}\r\n  align-content: flex-start;\r\n  padding: 20px;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}