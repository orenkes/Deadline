{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _toConsumableArray from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  height: 90%;\\n  width: 100%;\\n  overflow-y: auto;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  border: none;\\n  background: \",\";\\n  font-family: \\\"Helvetica Neue\\\", sans-serif;\\n  border-radius: 25px;\\n  padding-left: 15px;\\n  width: 80%;\\n  max-width: 400px;\\n  height: 50px;\\n  font-size: 1.1rem;\\n  outline: none;\\n  :focus {\\n    filter: brightness(1.1);\\n  }\\n\\n  box-shadow: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  position: relative;\\n  \",\";\\n  height: 10%;\\n  width: 100%;\\n  font-size: 3rem;\\n  text-align: center;\\n  color: white;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  font-weight: bold;\\n  letter-spacing: 3px;\\n  z-index: 3;\\n  box-shadow: 0 20px 20px -20px lightslategray;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  display: \",\";\\n  width: 100%;\\n  height: 100%;\\n  height: calc(100% - 70px);\\n  background: \",\";\\n  position: absolute;\\n  bottom: 0;\\n  z-index: 8;\\n\\n  @media (min-width: 769px) {\\n    max-width: \",\";\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import styled,{keyframes}from\"styled-components\";import{flexbox}from\"../../../style/mixins\";import*as c from\"../../../style/colors\";import{useDispatch,useSelector}from\"react-redux\";import{MdKeyboardArrowRight}from\"react-icons/md\";import{filteringArraysAction}from\"../../../state/actions/filteredTasksAction\";import{toggleDeadlineAction,toggleUrgencyAction}from\"../../../state/actions/toggleSortAction\";import TasksLister from\"../TasksLister\";var SearchScreen=function SearchScreen(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchInput=_useState2[0],setSearchInput=_useState2[1];// const [filteredArray, setFilteredArray] = useState([]);\nvar dispatch=useDispatch();var loggedUser=useSelector(function(state){return state.userReducer[0];});var searchIsOpen=useSelector(function(state){return state.searchWindowReducer;});var desktopView=useSelector(function(state){return state.toggleViewReducer;});var currentTab=useSelector(function(state){return state.markTabReducer;});var sortTasksBy=useSelector(function(state){return state.sortTasksByReducer;});var tasksArrays=useSelector(function(state){return state.updateArraysReducer;});var toggleSort=useSelector(function(state){return state.toggleSortReducer;});var filteringArrays=useSelector(function(state){return state.filteringArraysReducer;});useEffect(function(){dispatch(filteringArraysAction([].concat(_toConsumableArray(tasksArrays.todoArray),_toConsumableArray(tasksArrays.inProgressArray),_toConsumableArray(tasksArrays.completedTasksArray))));},[tasksArrays]);var getSearchInput=function getSearchInput(e){e.preventDefault();if(e.target.value===\"\"){dispatch(filteringArraysAction([].concat(_toConsumableArray(tasksArrays.todoArray),_toConsumableArray(tasksArrays.inProgressArray),_toConsumableArray(tasksArrays.completedTasksArray))));}else{setSearchInput(e.target.value);var _searchInput=e.target.value;dispatch(filteringArraysAction([].concat(_toConsumableArray(tasksArrays.todoArray),_toConsumableArray(tasksArrays.inProgressArray),_toConsumableArray(tasksArrays.completedTasksArray))));var filteredTasks=filteringArrays.filter(function(task){return task.title.toUpperCase().includes(_searchInput.toUpperCase());});dispatch(filteringArraysAction(_toConsumableArray(filteredTasks)));}};return React.createElement(SearchScreenBox,{searchIsOpen:searchIsOpen,desktopView:desktopView},React.createElement(SearchHeadSection,null,React.createElement(SearchInput,{placeholder:\"Search Deadline\",onChange:getSearchInput})),React.createElement(TasksDisplay,null,React.createElement(TasksLister,{arrayToMap:filteringArrays})));};export default SearchScreen;var SearchScreenBox=styled.div(_templateObject(),flexbox(),function(_ref){var searchIsOpen=_ref.searchIsOpen;return searchIsOpen?\"block\":\"none\";},c.gradientCyan,function(_ref2){var desktopView=_ref2.desktopView;return desktopView?\"1200px\":\"500px\";});var SearchHeadSection=styled.div(_templateObject2(),flexbox());var SearchInput=styled.input(_templateObject3(),c.inputShyBlue,c.inputShadows);var TasksDisplay=styled.div(_templateObject4(),flexbox());","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/SearchComponent/SearchComponent.jsx"],"names":["React","useState","useEffect","styled","keyframes","flexbox","c","useDispatch","useSelector","MdKeyboardArrowRight","filteringArraysAction","toggleDeadlineAction","toggleUrgencyAction","TasksLister","SearchScreen","searchInput","setSearchInput","dispatch","loggedUser","state","userReducer","searchIsOpen","searchWindowReducer","desktopView","toggleViewReducer","currentTab","markTabReducer","sortTasksBy","sortTasksByReducer","tasksArrays","updateArraysReducer","toggleSort","toggleSortReducer","filteringArrays","filteringArraysReducer","todoArray","inProgressArray","completedTasksArray","getSearchInput","e","preventDefault","target","value","filteredTasks","filter","task","title","toUpperCase","includes","SearchScreenBox","div","gradientCyan","SearchHeadSection","SearchInput","input","inputShyBlue","inputShadows","TasksDisplay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\r\n\r\nimport { filteringArraysAction } from \"../../../state/actions/filteredTasksAction\";\r\nimport {\r\n  toggleDeadlineAction,\r\n  toggleUrgencyAction\r\n} from \"../../../state/actions/toggleSortAction\";\r\n\r\nimport TasksLister from \"../TasksLister\";\r\n\r\nconst SearchScreen = () => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  // const [filteredArray, setFilteredArray] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const sortTasksBy = useSelector(state => state.sortTasksByReducer);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const toggleSort = useSelector(state => state.toggleSortReducer);\r\n  const filteringArrays = useSelector(state => state.filteringArraysReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      filteringArraysAction([\r\n        ...tasksArrays.todoArray,\r\n        ...tasksArrays.inProgressArray,\r\n        ...tasksArrays.completedTasksArray\r\n      ])\r\n    );\r\n  }, [tasksArrays]);\r\n\r\n  const getSearchInput = e => {\r\n    e.preventDefault();\r\n    if (e.target.value === \"\") {\r\n      dispatch(\r\n        filteringArraysAction([\r\n          ...tasksArrays.todoArray,\r\n          ...tasksArrays.inProgressArray,\r\n          ...tasksArrays.completedTasksArray\r\n        ])\r\n      );\r\n    } else {\r\n      setSearchInput(e.target.value);\r\n      let searchInput = e.target.value;\r\n      dispatch(\r\n        filteringArraysAction([\r\n          ...tasksArrays.todoArray,\r\n          ...tasksArrays.inProgressArray,\r\n          ...tasksArrays.completedTasksArray\r\n        ])\r\n      );\r\n\r\n      const filteredTasks = filteringArrays.filter(task =>\r\n        task.title.toUpperCase().includes(searchInput.toUpperCase())\r\n      );\r\n\r\n      dispatch(filteringArraysAction([...filteredTasks]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchScreenBox searchIsOpen={searchIsOpen} desktopView={desktopView}>\r\n      <SearchHeadSection>\r\n        <SearchInput placeholder=\"Search Deadline\" onChange={getSearchInput} />\r\n      </SearchHeadSection>\r\n      <TasksDisplay>\r\n        <TasksLister arrayToMap={filteringArrays} />\r\n      </TasksDisplay>\r\n    </SearchScreenBox>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n\r\nconst SearchScreenBox = styled.div`\r\n  ${flexbox()};\r\n  display: ${({ searchIsOpen }) => (searchIsOpen ? \"block\" : \"none\")};\r\n  width: 100%;\r\n  height: 100%;\r\n  height: calc(100% - 70px);\r\n  background: ${c.gradientCyan};\r\n  position: absolute;\r\n  bottom: 0;\r\n  z-index: 8;\r\n\r\n  @media (min-width: 769px) {\r\n    max-width: ${({ desktopView }) => (desktopView ? \"1200px\" : \"500px\")};\r\n  }\r\n`;\r\n\r\nconst SearchHeadSection = styled.div`\r\n  position: relative;\r\n  ${flexbox()};\r\n  height: 10%;\r\n  width: 100%;\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  color: white;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: bold;\r\n  letter-spacing: 3px;\r\n  z-index: 3;\r\n  box-shadow: 0 20px 20px -20px lightslategray;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  height: 100%;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  font-family: \"Helvetica Neue\", sans-serif;\r\n  border-radius: 25px;\r\n  padding-left: 15px;\r\n  width: 80%;\r\n  max-width: 400px;\r\n  height: 50px;\r\n  font-size: 1.1rem;\r\n  outline: none;\r\n  :focus {\r\n    filter: brightness(1.1);\r\n  }\r\n\r\n  box-shadow: ${c.inputShadows};\r\n`;\r\n\r\nconst TasksDisplay = styled.div`\r\n  ${flexbox()};\r\n  height: 90%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}