{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\ExcelButton.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { useSelector } from \"react-redux\";\nimport { TiExportOutline } from \"react-icons/ti\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nconst ExcelButton = () => {\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const headers = [{\n    label: \"Task Id\",\n    key: \"id\"\n  }, {\n    label: \"Task title\",\n    key: \"title\"\n  }, {\n    label: \"Description\",\n    key: \"description\"\n  }, {\n    label: \"Deadline day\",\n    key: \"dayText\"\n  }, {\n    label: \"Deadline month\",\n    key: \"monthText\"\n  }, {\n    label: \"Deadline day number\",\n    key: \"dayNumber\"\n  }, {\n    label: \"Deadline day number\",\n    key: \"dayNumber\"\n  }, {\n    label: \"Deadline year\",\n    key: \"dayNumber\"\n  }, {\n    label: \"Task color\",\n    key: \"colorway\"\n  }, {\n    label: \"Task status\",\n    key: \"status\"\n  }, {\n    label: \"Task urgency\",\n    key: \"urgency\"\n  }, {\n    label: \"Time stamp\",\n    key: \"dateAndTimeSum\"\n  }];\n  const data = [...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray];\n  return React.createElement(ExcelButtonBox, {\n    data: data,\n    headers: headers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Export\", React.createElement(TiExportOutline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default ExcelButton;\nconst ExcelButtonBox = styled(CSVLink)`\n  ${flexbox()}\n  flex-basis: 25%;\n  height: 25%;\n  width: 100%;\n  background: ${c.bgSlateBlue};\n  font-weight: bold;\n  font-size: 1.1rem;\n  background: white;\n  text-decoration: none;\n  color: ${c.darkBlueText};\n  transition: 0.2s ease-out;\n\n  :hover {\n    background: ${c.bgfadeBlue};\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/ExcelButton.jsx"],"names":["React","styled","flexbox","c","useSelector","TiExportOutline","CSVLink","CSVDownload","ExcelButton","tasksArrays","state","updateArraysReducer","headers","label","key","data","todoArray","inProgressArray","completedTasksArray","ExcelButtonBox","bgSlateBlue","darkBlueText","bgfadeBlue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,mBAAhB,CAA/B;AACA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GALc,EAMd;AAAED,IAAAA,KAAK,EAAE,qBAAT;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GANc,EAOd;AAAED,IAAAA,KAAK,EAAE,qBAAT;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GAPc,EAQd;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GARc,EASd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GATc,EAUd;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GAVc,EAWd;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAXc,EAYd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,GAAG,EAAE;AAA5B,GAZc,CAAhB;AAeA,QAAMC,IAAI,GAAG,CACX,GAAGN,WAAW,CAACO,SADJ,EAEX,GAAGP,WAAW,CAACQ,eAFJ,EAGX,GAAGR,WAAW,CAACS,mBAHJ,CAAb;AAMA,SACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEH,IAAtB;AAA4B,IAAA,OAAO,EAAEH,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA7BD;;AA+BA,eAAeJ,WAAf;AAEA,MAAMW,cAAc,GAAGlB,MAAM,CAACK,OAAD,CAAU;IACnCJ,OAAO,EAAG;;;;gBAIEC,CAAC,CAACiB,WAAY;;;;;WAKnBjB,CAAC,CAACkB,YAAa;;;;kBAIRlB,CAAC,CAACmB,UAAW;;;CAd/B","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { TiExportOutline } from \"react-icons/ti\";\r\n\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nconst ExcelButton = () => {\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const headers = [\r\n    { label: \"Task Id\", key: \"id\" },\r\n    { label: \"Task title\", key: \"title\" },\r\n    { label: \"Description\", key: \"description\" },\r\n    { label: \"Deadline day\", key: \"dayText\" },\r\n    { label: \"Deadline month\", key: \"monthText\" },\r\n    { label: \"Deadline day number\", key: \"dayNumber\" },\r\n    { label: \"Deadline day number\", key: \"dayNumber\" },\r\n    { label: \"Deadline year\", key: \"dayNumber\" },\r\n    { label: \"Task color\", key: \"colorway\" },\r\n    { label: \"Task status\", key: \"status\" },\r\n    { label: \"Task urgency\", key: \"urgency\" },\r\n    { label: \"Time stamp\", key: \"dateAndTimeSum\" }\r\n  ];\r\n\r\n  const data = [\r\n    ...tasksArrays.todoArray,\r\n    ...tasksArrays.inProgressArray,\r\n    ...tasksArrays.completedTasksArray\r\n  ];\r\n\r\n  return (\r\n    <ExcelButtonBox data={data} headers={headers}>\r\n      Export\r\n      <TiExportOutline />\r\n    </ExcelButtonBox>\r\n  );\r\n};\r\n\r\nexport default ExcelButton;\r\n\r\nconst ExcelButtonBox = styled(CSVLink)`\r\n  ${flexbox()}\r\n  flex-basis: 25%;\r\n  height: 25%;\r\n  width: 100%;\r\n  background: ${c.bgSlateBlue};\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  background: white;\r\n  text-decoration: none;\r\n  color: ${c.darkBlueText};\r\n  transition: 0.2s ease-out;\r\n\r\n  :hover {\r\n    background: ${c.bgfadeBlue};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}