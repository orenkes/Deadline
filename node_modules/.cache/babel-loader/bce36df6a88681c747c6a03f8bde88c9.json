{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  height: 50px;\\n  width: 50%;\\n  min-width: 250px;\\n  border-radius: 5px;\\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\\n  border: none;\\n  background: \",\";\\n  font-size: 0.9rem;\\n  color: \",\";\\n  text-shadow: 0 0 1px white;\\n  font-weight: bold;\\n  font-size: 1rem;\\n  font-family: \\\"Montserrat\\\";\\n  opacity: 0.8;\\n  transition: 0.3s ease-out;\\n\\n  outline: none;\\n\\n  :hover,\\n  :focus {\\n    opacity: 1;\\n    cursor: pointer;\\n    background: \",\";\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  text-align: center;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  resize: none;\\n  flex-basis: 30%;\\n  height: 30%;\\n  width: 90%;\\n\\n  border-radius: 5px;\\n  border: none;\\n  background: \",\";\\n  box-shadow: \",\";\\n  padding: 20px;\\n  font-size: 1.1rem;\\n\\n  opacity: 0.8;\\n  transition: 0.3s ease-out;\\n\\n  outline: none;\\n\\n  :focus {\\n    filter: brightness(1.1);\\n    opacity: 1;\\n  }\\n  :hover {\\n    opacity: 1;\\n  }\\n\\n  @media (max-width: 450px) {\\n    flex-basis: 25%;\\n    height: 25%;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  flex-basis: 10%;\\n  height: 10%;\\n  width: 90%;\\n\\n  border-radius: 5px;\\n  border: none;\\n  background: \",\";\\n  box-shadow: \",\";\\n  padding: 20px;\\n  font-size: 1.4rem;\\n  transition: 0.1s linear;\\n\\n  opacity: 0.8;\\n  transition: 0.3s ease-out;\\n  outline: none;\\n\\n  :focus {\\n    filter: brightness(1.1);\\n    opacity: 1;\\n  }\\n  :hover {\\n    opacity: 1;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  height: 100%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  background: \",\";\\n  width: 95%;\\n  max-width: 500px;\\n  height: 70%;\\n  padding: 20px 0;\\n\\n  @media (max-width: 450px) {\\n    height: 80%;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import styled,{keyframes}from\"styled-components\";import{useSelector,useDispatch}from\"react-redux\";import{flexbox,borderShadowsRadius}from\"../../../style/mixins\";import*as c from\"../../../style/colors\";import TaskColorPicker from\"./TaskColorPicker\";import TaskStatusSelect from\"./TaskStatusSelect\";import TaskUrgencySelect from\"./TaskUrgencySelect\";import createDateSum from\"../../SignUp/createDateSum\";import{updateArraysAction}from\"../../../state/actions/updateArraysAction\";var TaskCreation=function TaskCreation(_ref){var setPopupIsOpen=_ref.setPopupIsOpen;var _useState=useState(\"turquoise\"),_useState2=_slicedToArray(_useState,2),colorway=_useState2[0],setColorway=_useState2[1];var _useState3=useState(\"To Do\"),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];var _useState5=useState(\"low\"),_useState6=_slicedToArray(_useState5,2),urgency=_useState6[0],setUrgency=_useState6[1];var tasksArrays=useSelector(function(state){return state.updateArraysReducer;});var _useState7=useState(tasksArrays.tasksCounter),_useState8=_slicedToArray(_useState7,2),tasksCounter=_useState8[0],setTasksCounter=_useState8[1];var dispatch=useDispatch();var todoArray=tasksArrays.todoArray;var inProgressArray=tasksArrays.inProgressArray;var completedTasksArray=tasksArrays.completedTasksArray;var getTasksCounter=tasksArrays.tasksCounter;var updatingArraysInDataBase=function updatingArraysInDataBase(newTasksCounter){var updatedArrays,putMethod;return _regeneratorRuntime.async(function updatingArraysInDataBase$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"newTasksCounter\",newTasksCounter);updatedArrays={todoArray:todoArray,inProgressArray:inProgressArray,completedTasksArray:completedTasksArray,tasksCounter:newTasksCounter};dispatch(updateArraysAction(updatedArrays));console.log(\"updatedArrays\",updatedArrays);putMethod={method:\"PUT\",headers:{\"Content-type\":\"application/json; charset=UTF-8\",\"auth-token\":localStorage.getItem(\"token\")},body:JSON.stringify(updatedArrays)};_context.next=7;return _regeneratorRuntime.awrap(fetch(\"https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays\",putMethod));case 7:console.log(\"PUT ENDED\");case 8:case\"end\":return _context.stop();}}});};var createTask=function createTask(e){e.preventDefault();if(e.target[0].value===\"\"||e.target[1].value===\"\"||e.target[2].value===\"\"){alert(\"One or more of the fields is empty\");}else{setPopupIsOpen(false);console.log(getTasksCounter,\"tasksCounter before\");var newTasksCounter=getTasksCounter+1;console.log(newTasksCounter,\"newTasksCounter after\");var title=e.target[0].value;var description=e.target[1].value;var deadlineISO=e.target[2].value;//---TIME AND DATE SUM--//\n// const reducer = (accumulator, currentValue) => accumulator + currentValue;\n// const dateAndTimeArray = deadlineISO.split(\"T\");\n// const date = dateAndTimeArray[0];\n// const dateArray = date.split(\"-\");\n// console.log(\"dateArray\", dateArray);\n// const dateSum = dateArray.reduce(reducer);\n// console.log(\"dateSum\", dateSum);\n// const timeString = dateAndTimeArray[1];\n// const timeArray = timeString.split(\":\");\n// const timeSum = timeArray.reduce(reducer);\n// console.log(\"timeSum\", timeSum);\n// const dateAndTimeSum = dateSum + timeSum;\n// console.log(\"dateAndTimeSum\", dateAndTimeSum);\nvar dateSum=createDateSum(deadlineISO);var taskObject={id:newTasksCounter,title:title,description:description,colorway:colorway,status:status,urgency:urgency,deadlineISO:deadlineISO,dateAndTimeSum:dateSum};console.log(taskObject,\"taskObject\");switch(status){case\"To Do\":todoArray.push(taskObject);updatingArraysInDataBase(newTasksCounter);break;case\"In Progress\":inProgressArray.push(taskObject);updatingArraysInDataBase(newTasksCounter);break;case\"Done\":completedTasksArray.push(taskObject);updatingArraysInDataBase(newTasksCounter);break;default:break;}e.target[0].value=\"\";e.target[1].value=\"\";e.target[2].value=\"\";}};return React.createElement(Container,null,React.createElement(TaskForm,{onSubmit:createTask},React.createElement(TitleInput,{type:\"text\",placeholder:\"Task Title...\",minLength:\"1\",maxLength:\"22\"}),React.createElement(DescrptionInput,{placeholder:\"Task Descrption...\",minLength:\"1\",maxLength:\"150\"}),React.createElement(DeadlineInput,{type:\"datetime-local\",max:\"3000-01-01T00:00\",min:\"2020-01-01T00:00\"}),React.createElement(TaskColorPicker,{colorway:colorway,setColorway:setColorway}),React.createElement(TaskStatusSelect,{status:status,setStatus:setStatus}),React.createElement(TaskUrgencySelect,{urgency:urgency,setUrgency:setUrgency}),React.createElement(SubmitButton,{type:\"submit\"},\"Add Deadline\")));};export default TaskCreation;var Container=styled.div(_templateObject(),borderShadowsRadius,c.bgShyBlue);var TaskForm=styled.form(_templateObject2(),flexbox({dir:\"column\",jc:\"space-around\"}));var TitleInput=styled.input(_templateObject3(),c.inputShyBlue,c.inputShadows);var DescrptionInput=styled.textarea(_templateObject4(),c.inputShyBlue,c.inputShadows);var DeadlineInput=styled(TitleInput)(_templateObject5());var SubmitButton=styled.button(_templateObject6(),c.elmShyBlue,c.darkBlueText,c.elmLightBlue);","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TaskCreation/TaskCreation.jsx"],"names":["React","useState","useEffect","styled","keyframes","useSelector","useDispatch","flexbox","borderShadowsRadius","c","TaskColorPicker","TaskStatusSelect","TaskUrgencySelect","createDateSum","updateArraysAction","TaskCreation","setPopupIsOpen","colorway","setColorway","status","setStatus","urgency","setUrgency","tasksArrays","state","updateArraysReducer","tasksCounter","setTasksCounter","dispatch","todoArray","inProgressArray","completedTasksArray","getTasksCounter","updatingArraysInDataBase","newTasksCounter","console","log","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","createTask","e","preventDefault","target","value","alert","title","description","deadlineISO","dateSum","taskObject","id","dateAndTimeSum","push","Container","div","bgShyBlue","TaskForm","form","dir","jc","TitleInput","input","inputShyBlue","inputShadows","DescrptionInput","textarea","DeadlineInput","SubmitButton","button","elmShyBlue","darkBlueText","elmLightBlue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox, borderShadowsRadius } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport TaskColorPicker from \"./TaskColorPicker\";\r\nimport TaskStatusSelect from \"./TaskStatusSelect\";\r\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\r\n\r\nimport createDateSum from \"../../SignUp/createDateSum\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst TaskCreation = ({ setPopupIsOpen }) => {\r\n  const [colorway, setColorway] = useState(\"turquoise\");\r\n  const [status, setStatus] = useState(\"To Do\");\r\n  const [urgency, setUrgency] = useState(\"low\");\r\n\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const [tasksCounter, setTasksCounter] = useState(tasksArrays.tasksCounter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  let getTasksCounter = tasksArrays.tasksCounter;\r\n\r\n  const updatingArraysInDataBase = async newTasksCounter => {\r\n    console.log(\"newTasksCounter\", newTasksCounter);\r\n\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter: newTasksCounter\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n\r\n    console.log(\"updatedArrays\", updatedArrays);\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays)\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n\r\n    console.log(\"PUT ENDED\");\r\n  };\r\n\r\n  const createTask = e => {\r\n    e.preventDefault();\r\n    if (\r\n      e.target[0].value === \"\" ||\r\n      e.target[1].value === \"\" ||\r\n      e.target[2].value === \"\"\r\n    ) {\r\n      alert(\"One or more of the fields is empty\");\r\n    } else {\r\n      setPopupIsOpen(false);\r\n      console.log(getTasksCounter, \"tasksCounter before\");\r\n      const newTasksCounter = getTasksCounter + 1;\r\n      console.log(newTasksCounter, \"newTasksCounter after\");\r\n\r\n      const title = e.target[0].value;\r\n      const description = e.target[1].value;\r\n      const deadlineISO = e.target[2].value;\r\n\r\n      //---TIME AND DATE SUM--//\r\n      // const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n      // const dateAndTimeArray = deadlineISO.split(\"T\");\r\n      // const date = dateAndTimeArray[0];\r\n      // const dateArray = date.split(\"-\");\r\n      // console.log(\"dateArray\", dateArray);\r\n      // const dateSum = dateArray.reduce(reducer);\r\n      // console.log(\"dateSum\", dateSum);\r\n      // const timeString = dateAndTimeArray[1];\r\n      // const timeArray = timeString.split(\":\");\r\n      // const timeSum = timeArray.reduce(reducer);\r\n      // console.log(\"timeSum\", timeSum);\r\n      // const dateAndTimeSum = dateSum + timeSum;\r\n      // console.log(\"dateAndTimeSum\", dateAndTimeSum);\r\n\r\n      const dateSum = createDateSum(deadlineISO);\r\n\r\n      const taskObject = {\r\n        id: newTasksCounter,\r\n        title,\r\n        description,\r\n        colorway,\r\n        status,\r\n        urgency,\r\n        deadlineISO,\r\n        dateAndTimeSum: dateSum\r\n      };\r\n\r\n      console.log(taskObject, \"taskObject\");\r\n\r\n      switch (status) {\r\n        case \"To Do\":\r\n          todoArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"In Progress\":\r\n          inProgressArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"Done\":\r\n          completedTasksArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      e.target[0].value = \"\";\r\n      e.target[1].value = \"\";\r\n      e.target[2].value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TaskForm onSubmit={createTask}>\r\n        <TitleInput\r\n          type=\"text\"\r\n          placeholder=\"Task Title...\"\r\n          minLength=\"1\"\r\n          maxLength=\"22\"\r\n        />\r\n        <DescrptionInput\r\n          placeholder=\"Task Descrption...\"\r\n          minLength=\"1\"\r\n          maxLength=\"150\"\r\n        />\r\n        <DeadlineInput\r\n          type=\"datetime-local\"\r\n          max=\"3000-01-01T00:00\"\r\n          min=\"2020-01-01T00:00\"\r\n        />\r\n\r\n        <TaskColorPicker colorway={colorway} setColorway={setColorway} />\r\n        <TaskStatusSelect status={status} setStatus={setStatus} />\r\n        <TaskUrgencySelect urgency={urgency} setUrgency={setUrgency} />\r\n        <SubmitButton type=\"submit\">Add Deadline</SubmitButton>\r\n      </TaskForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n\r\nconst Container = styled.div`\r\n  ${borderShadowsRadius}\r\n  background: ${c.bgShyBlue};\r\n  width: 95%;\r\n  max-width: 500px;\r\n  height: 70%;\r\n  padding: 20px 0;\r\n\r\n  @media (max-width: 450px) {\r\n    height: 80%;\r\n  }\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  flex-basis: 10%;\r\n  height: 10%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.4rem;\r\n  transition: 0.1s linear;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n  outline: none;\r\n\r\n  :focus {\r\n    filter: brightness(1.1);\r\n    opacity: 1;\r\n  }\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst DescrptionInput = styled.textarea`\r\n  resize: none;\r\n  flex-basis: 30%;\r\n  height: 30%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.1rem;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  outline: none;\r\n\r\n  :focus {\r\n    filter: brightness(1.1);\r\n    opacity: 1;\r\n  }\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    flex-basis: 25%;\r\n    height: 25%;\r\n  }\r\n`;\r\n\r\nconst DeadlineInput = styled(TitleInput)`\r\n  text-align: center;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  height: 50px;\r\n  width: 50%;\r\n  min-width: 250px;\r\n  border-radius: 5px;\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n  border: none;\r\n  background: ${c.elmShyBlue};\r\n  font-size: 0.9rem;\r\n  color: ${c.darkBlueText};\r\n  text-shadow: 0 0 1px white;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  font-family: \"Montserrat\";\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  outline: none;\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n    background: ${c.elmLightBlue};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}