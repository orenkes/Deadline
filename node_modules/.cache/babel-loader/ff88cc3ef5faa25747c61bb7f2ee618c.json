{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Dashboard.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\"; //-------Components-------//\n// import Todo from \"./Todo/Todo\";\n// import InProgress from \"./InProgress/InProgress\";\n// import Done from \"./Done/Done\";\n\nimport TaskCreation from \"./TaskCreation/TaskCreation\";\nimport SearchComponent from \"./SearchComponent/SearchComponent\";\nimport HeadComponent from \"./HeadComponent/HeadComponent\";\nimport BodyComponent from \"./BodyComponent/BodyComponent\"; //-------Actions--------//\n\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\n\nconst Dashbord = () => {\n  // const [desktopView, setDesktopView] = useState(true);\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        popupIsOpen = _useState2[0],\n        setPopupIsOpen = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        flag = _useState4[0],\n        setFlag = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dropDownIsOpen = _useState6[0],\n        setDropDownIsOpen = _useState6[1];\n\n  const desktopView = useSelector(state => state.toggleViewReducer);\n  const currentTab = useSelector(state => state.markTabReducer);\n  const isLogged = useSelector(state => state.isLoggedReducer);\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\n  const dispatch = useDispatch();\n\n  const oneTime = (() => {\n    if (flag) {\n      dispatch(updateArraysAction({\n        tasksCounter: loggedUser.tasksCounter,\n        todoArray: loggedUser.todoArray,\n        inProgressArray: loggedUser.inProgressArray,\n        completedTasksArray: loggedUser.completedTasksArray\n      }));\n      setFlag(false);\n    }\n  })();\n\n  return React.createElement(Wrapper, {\n    id: \"dashWrapper\",\n    onClick: e => {\n      dropDownIsOpen && setDropDownIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, isLogged === false && React.createElement(Redirect, {\n    push: true,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(AppContainer, {\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TaskCreationWrapper, {\n    popupIsOpen: popupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TaskCreationContainer, {\n    id: \"taskContainer\",\n    onClick: e => {\n      e.target.id === \"taskContainer\" && setPopupIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TaskCreation, {\n    setPopupIsOpen: setPopupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(HeadComponent, {\n    dropDownIsOpen: dropDownIsOpen,\n    setDropDownIsOpen: setDropDownIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), searchIsOpen && React.createElement(SearchComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(BodyComponent, {\n    setPopupIsOpen: setPopupIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n};\n\nexport default Dashbord;\nconst Wrapper = styled.div`\n  ${flexbox()};\n  height: 100%;\n  width: 100%;\n  background: ${c.bgApp};\n`;\nconst AppContainer = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})};\n  flex-basis: 100%;\n  width: 100%;\n  height: 100%;\n  max-width: 500px;\n  position: relative;\n\n  @media (min-width: 769px) {\n    max-width: 1200px;\n  }\n`;\nconst TaskCreationWrapper = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 10;\n  background: ${c.shyBlue};\n  transition: 0.2s ease-out;\n  transform: ${({\n  popupIsOpen\n}) => popupIsOpen ? \"scale(1)\" : \"scale(0)\"};\n`;\nconst TaskCreationContainer = styled.div`\n  ${flexbox()};\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 9;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Dashboard.jsx"],"names":["React","useState","styled","useSelector","Redirect","useDispatch","flexbox","c","TaskCreation","SearchComponent","HeadComponent","BodyComponent","updateArraysAction","Dashbord","popupIsOpen","setPopupIsOpen","flag","setFlag","dropDownIsOpen","setDropDownIsOpen","desktopView","state","toggleViewReducer","currentTab","markTabReducer","isLogged","isLoggedReducer","loggedUser","userReducer","searchIsOpen","searchWindowReducer","dispatch","oneTime","tasksCounter","todoArray","inProgressArray","completedTasksArray","e","target","id","Wrapper","div","bgApp","AppContainer","dir","jc","TaskCreationWrapper","shyBlue","TaskCreationContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\n\r\n//-------Components-------//\r\n// import Todo from \"./Todo/Todo\";\r\n// import InProgress from \"./InProgress/InProgress\";\r\n// import Done from \"./Done/Done\";\r\nimport TaskCreation from \"./TaskCreation/TaskCreation\";\r\nimport SearchComponent from \"./SearchComponent/SearchComponent\";\r\nimport HeadComponent from \"./HeadComponent/HeadComponent\";\r\nimport BodyComponent from \"./BodyComponent/BodyComponent\";\r\n\r\n//-------Actions--------//\r\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\r\n\r\nconst Dashbord = () => {\r\n  // const [desktopView, setDesktopView] = useState(true);\r\n  const [popupIsOpen, setPopupIsOpen] = useState(false);\r\n  const [flag, setFlag] = useState(true);\r\n  const [dropDownIsOpen, setDropDownIsOpen] = useState(false);\r\n\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const isLogged = useSelector(state => state.isLoggedReducer);\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const oneTime = (() => {\r\n    if (flag) {\r\n      dispatch(\r\n        updateArraysAction({\r\n          tasksCounter: loggedUser.tasksCounter,\r\n          todoArray: loggedUser.todoArray,\r\n          inProgressArray: loggedUser.inProgressArray,\r\n          completedTasksArray: loggedUser.completedTasksArray\r\n        })\r\n      );\r\n      setFlag(false);\r\n    }\r\n  })();\r\n\r\n  return (\r\n    <Wrapper\r\n      id=\"dashWrapper\"\r\n      onClick={e => {\r\n        dropDownIsOpen && setDropDownIsOpen(false);\r\n      }}\r\n    >\r\n      {isLogged === false && <Redirect push to=\"/\" />}\r\n      <AppContainer desktopView={desktopView}>\r\n        <TaskCreationWrapper popupIsOpen={popupIsOpen}>\r\n          <TaskCreationContainer\r\n            id=\"taskContainer\"\r\n            onClick={e => {\r\n              e.target.id === \"taskContainer\" && setPopupIsOpen(false);\r\n            }}\r\n          >\r\n            <TaskCreation setPopupIsOpen={setPopupIsOpen} />\r\n          </TaskCreationContainer>\r\n        </TaskCreationWrapper>\r\n\r\n        <HeadComponent\r\n          dropDownIsOpen={dropDownIsOpen}\r\n          setDropDownIsOpen={setDropDownIsOpen}\r\n        />\r\n\r\n        {searchIsOpen && <SearchComponent />}\r\n\r\n        <BodyComponent setPopupIsOpen={setPopupIsOpen} />\r\n      </AppContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Dashbord;\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexbox()};\r\n  height: 100%;\r\n  width: 100%;\r\n  background: ${c.bgApp};\r\n`;\r\n\r\nconst AppContainer = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"flex-start\" })};\r\n  flex-basis: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 500px;\r\n  position: relative;\r\n\r\n  @media (min-width: 769px) {\r\n    max-width: 1200px;\r\n  }\r\n`;\r\n\r\nconst TaskCreationWrapper = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 10;\r\n  background: ${c.shyBlue};\r\n  transition: 0.2s ease-out;\r\n  transform: ${({ popupIsOpen }) => (popupIsOpen ? \"scale(1)\" : \"scale(0)\")};\r\n`;\r\n\r\nconst TaskCreationContainer = styled.div`\r\n  ${flexbox()};\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 9;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}