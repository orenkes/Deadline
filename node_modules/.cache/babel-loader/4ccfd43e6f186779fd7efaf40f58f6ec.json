{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TaskCreation.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\n\nconst TaskCreation = ({\n  setPopupIsOpen\n}) => {\n  const _useState = useState(\"black\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        colorway = _useState2[0],\n        setColorway = _useState2[1];\n\n  const _useState3 = useState(\"todo\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState(\"low\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        urgency = _useState6[0],\n        seturgency = _useState6[1];\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n\n  const _useState7 = useState(tasksArrays.tasksCounter),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tasksCounter = _useState8[0],\n        setTasksCounter = _useState8[1];\n\n  const dispatch = useDispatch();\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  let getTasksCounter = tasksArrays.tasksCounter;\n\n  const updatingArraysInDataBase = async newTasksCounter => {\n    console.log(\"newTasksCounter\", newTasksCounter);\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter: newTasksCounter\n    };\n    dispatch(updateArraysAction(updatedArrays));\n    console.log(\"updatedArrays\", updatedArrays);\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays)\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n    console.log(\"PUT ENDED\");\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n    setPopupIsOpen(false);\n    console.log(getTasksCounter, \"tasksCounter before\");\n    const newTasksCounter = getTasksCounter + 1;\n    console.log(newTasksCounter, \"newTasksCounter after\");\n    const title = e.target[0].value;\n    const description = e.target[1].value;\n    const deadline = e.target[2].value;\n    const taskObject = {\n      id: newTasksCounter,\n      title,\n      description,\n      deadline,\n      colorway,\n      status,\n      urgency\n    };\n    console.log(taskObject, \"taskObject\");\n\n    switch (status) {\n      case \"todo\":\n        todoArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      case \"inProgress\":\n        inProgressArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      case \"done\":\n        completedTasksArray.push(taskObject);\n        updatingArraysInDataBase(newTasksCounter);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Add New Deadline\"), React.createElement(TaskForm, {\n    onSubmit: createTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    type: \"text\",\n    placeholder: \"Task Title...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(DescrptionInput, {\n    placeholder: \"Task Descrption...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(DeadlineInput, {\n    type: \"datetime-local\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(TaskColorPiker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Select Colorway:\", React.createElement(ColorOptionBlack, {\n    onClick: () => setColorway(\"black\"),\n    colorway: colorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(ColorOptionBlue, {\n    onClick: () => setColorway(\"blue\"),\n    colorway: colorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(ColorOptionGreen, {\n    onClick: () => setColorway(\"green\"),\n    colorway: colorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(ColorOptionPink, {\n    onClick: () => setColorway(\"pink\"),\n    colorway: colorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(ColorOptionRed, {\n    onClick: () => setColorway(\"red\"),\n    colorway: colorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(TaskStatusSelect, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(StatusOption, {\n    onClick: () => setStatus(\"todo\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"ToDo\"), React.createElement(StatusOption, {\n    onClick: () => setStatus(\"inProgress\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"InProgress\"), React.createElement(StatusOption, {\n    onClick: () => setStatus(\"done\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Done\")), React.createElement(TaskUrgencySelect, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(UrgencyOption, {\n    onClick: () => seturgency(\"low\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"low\"), React.createElement(UrgencyOption, {\n    onClick: () => seturgency(\"regular\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"regular\"), React.createElement(UrgencyOption, {\n    onClick: () => seturgency(\"high\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"high\")), React.createElement(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Add\")));\n};\n\nexport default TaskCreation;\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${c.shyBlue};\n  border-radius: 15px;\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\n  border: 1px solid rgba(242, 248, 250, 0.2);\n`;\nconst Header = styled.h1`\n  text-align: center;\n  font-size: 2rem;\n  padding-bottom: 10px;\n`;\nconst TaskForm = styled.form`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-between\"\n})}\n  flex-wrap: wrap;\n  height: 90%;\n`;\nconst TitleInput = styled.input`\n  width: 90%;\n  height: 10%;\n`;\nconst DescrptionInput = styled.textarea`\n  width: 90%;\n  height: 30%;\n`;\nconst DeadlineInput = styled.input``;\nconst TaskColorPiker = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 50px;\n`;\nconst ColorOptionStyle = `\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-left: 5px;\n  box-sizing: border-box;\n\n  :hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\nconst ColorOptionBlack = styled.div`\n  ${ColorOptionStyle};\n  opacity: ${({\n  colorway\n}) => colorway === \"black\" ? \"1\" : \"0.8\"};\n  border: ${({\n  colorway\n}) => colorway === \"black\" ? \"3px solid white\" : \"\"};\n\n  background-color: black;\n`;\nconst ColorOptionBlue = styled.div`\n  ${ColorOptionStyle};\n  opacity: ${({\n  colorway\n}) => colorway === \"blue\" ? \"1\" : \"0.8\"};\n  border: ${({\n  colorway\n}) => colorway === \"blue\" ? \"3px solid white\" : \"\"};\n  background-color: blue;\n`;\nconst ColorOptionGreen = styled.div`\n  ${ColorOptionStyle};\n  opacity: ${({\n  colorway\n}) => colorway === \"green\" ? \"1\" : \"0.8\"};\n  border: ${({\n  colorway\n}) => colorway === \"green\" ? \"3px solid white\" : \"\"};\n  background-color: green;\n`;\nconst ColorOptionPink = styled.div`\n  ${ColorOptionStyle};\n  opacity: ${({\n  colorway\n}) => colorway === \"pink\" ? \"1\" : \"0.8\"};\n  border: ${({\n  colorway\n}) => colorway === \"pink\" ? \"3px solid white\" : \"\"};\n  background-color: pink;\n`;\nconst ColorOptionRed = styled.div`\n  ${ColorOptionStyle};\n  opacity: ${({\n  colorway\n}) => colorway === \"red\" ? \"1\" : \"0.8\"};\n  border: ${({\n  colorway\n}) => colorway === \"red\" ? \"3px solid white\" : \"\"};\n  background-color: red;\n`;\nconst TaskStatusSelect = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 50px;\n`;\nconst TaskUrgencySelect = styled.div`\n  ${flexbox()}\n  width: 100%;\n  height: 50px;\n`;\nconst UrgencyOption = styled.div``;\nconst StatusOption = styled.div`\n  width: 50px;\n  height: 50px;\n  border: 1px solid red;\n`;\nconst SubmitButton = styled.button``;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TaskCreation.jsx"],"names":["React","useState","styled","useSelector","useDispatch","flexbox","c","updateArraysAction","TaskCreation","setPopupIsOpen","colorway","setColorway","status","setStatus","urgency","seturgency","tasksArrays","state","updateArraysReducer","tasksCounter","setTasksCounter","dispatch","todoArray","inProgressArray","completedTasksArray","getTasksCounter","updatingArraysInDataBase","newTasksCounter","console","log","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","createTask","e","preventDefault","title","target","value","description","deadline","taskObject","id","push","Container","div","shyBlue","Header","h1","TaskForm","form","dir","jc","TitleInput","input","DescrptionInput","textarea","DeadlineInput","TaskColorPiker","ColorOptionStyle","ColorOptionBlack","ColorOptionBlue","ColorOptionGreen","ColorOptionPink","ColorOptionRed","TaskStatusSelect","TaskUrgencySelect","UrgencyOption","StatusOption","SubmitButton","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\n\r\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\r\n\r\nconst TaskCreation = ({ setPopupIsOpen }) => {\r\n  const [colorway, setColorway] = useState(\"black\");\r\n  const [status, setStatus] = useState(\"todo\");\r\n  const [urgency, seturgency] = useState(\"low\");\r\n\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const [tasksCounter, setTasksCounter] = useState(tasksArrays.tasksCounter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  let getTasksCounter = tasksArrays.tasksCounter;\r\n\r\n  const updatingArraysInDataBase = async newTasksCounter => {\r\n    console.log(\"newTasksCounter\", newTasksCounter);\r\n\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter: newTasksCounter\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n\r\n    console.log(\"updatedArrays\", updatedArrays);\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays)\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n\r\n    console.log(\"PUT ENDED\");\r\n  };\r\n\r\n  const createTask = e => {\r\n    e.preventDefault();\r\n    setPopupIsOpen(false);\r\n\r\n    console.log(getTasksCounter, \"tasksCounter before\");\r\n    const newTasksCounter = getTasksCounter + 1;\r\n    console.log(newTasksCounter, \"newTasksCounter after\");\r\n\r\n    const title = e.target[0].value;\r\n    const description = e.target[1].value;\r\n    const deadline = e.target[2].value;\r\n\r\n    const taskObject = {\r\n      id: newTasksCounter,\r\n      title,\r\n      description,\r\n      deadline,\r\n      colorway,\r\n      status,\r\n      urgency\r\n    };\r\n\r\n    console.log(taskObject, \"taskObject\");\r\n\r\n    switch (status) {\r\n      case \"todo\":\r\n        todoArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      case \"inProgress\":\r\n        inProgressArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      case \"done\":\r\n        completedTasksArray.push(taskObject);\r\n        updatingArraysInDataBase(newTasksCounter);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Add New Deadline</Header>\r\n      <TaskForm onSubmit={createTask}>\r\n        <TitleInput type=\"text\" placeholder=\"Task Title...\" />\r\n        <DescrptionInput placeholder=\"Task Descrption...\" />\r\n        <DeadlineInput type=\"datetime-local\" />\r\n        <TaskColorPiker>\r\n          Select Colorway:\r\n          <ColorOptionBlack\r\n            onClick={() => setColorway(\"black\")}\r\n            colorway={colorway}\r\n          ></ColorOptionBlack>\r\n          <ColorOptionBlue\r\n            onClick={() => setColorway(\"blue\")}\r\n            colorway={colorway}\r\n          ></ColorOptionBlue>\r\n          <ColorOptionGreen\r\n            onClick={() => setColorway(\"green\")}\r\n            colorway={colorway}\r\n          ></ColorOptionGreen>\r\n          <ColorOptionPink\r\n            onClick={() => setColorway(\"pink\")}\r\n            colorway={colorway}\r\n          ></ColorOptionPink>\r\n          <ColorOptionRed\r\n            onClick={() => setColorway(\"red\")}\r\n            colorway={colorway}\r\n          ></ColorOptionRed>\r\n        </TaskColorPiker>\r\n        <TaskStatusSelect>\r\n          <StatusOption onClick={() => setStatus(\"todo\")}>ToDo</StatusOption>\r\n          <StatusOption onClick={() => setStatus(\"inProgress\")}>\r\n            InProgress\r\n          </StatusOption>\r\n          <StatusOption onClick={() => setStatus(\"done\")}>Done</StatusOption>\r\n        </TaskStatusSelect>\r\n        <TaskUrgencySelect>\r\n          <UrgencyOption onClick={() => seturgency(\"low\")}>low</UrgencyOption>\r\n          <UrgencyOption onClick={() => seturgency(\"regular\")}>\r\n            regular\r\n          </UrgencyOption>\r\n          <UrgencyOption onClick={() => seturgency(\"high\")}>high</UrgencyOption>\r\n        </TaskUrgencySelect>\r\n        <SubmitButton type=\"submit\">Add</SubmitButton>\r\n      </TaskForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${c.shyBlue};\r\n  border-radius: 15px;\r\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\r\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\r\n  border: 1px solid rgba(242, 248, 250, 0.2);\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"space-between\" })}\r\n  flex-wrap: wrap;\r\n  height: 90%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 90%;\r\n  height: 10%;\r\n`;\r\nconst DescrptionInput = styled.textarea`\r\n  width: 90%;\r\n  height: 30%;\r\n`;\r\nconst DeadlineInput = styled.input``;\r\n\r\nconst TaskColorPiker = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 50px;\r\n`;\r\n\r\nconst ColorOptionStyle = `\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin-left: 5px;\r\n  box-sizing: border-box;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ColorOptionBlack = styled.div`\r\n  ${ColorOptionStyle};\r\n  opacity: ${({ colorway }) => (colorway === \"black\" ? \"1\" : \"0.8\")};\r\n  border: ${({ colorway }) => (colorway === \"black\" ? \"3px solid white\" : \"\")};\r\n\r\n  background-color: black;\r\n`;\r\nconst ColorOptionBlue = styled.div`\r\n  ${ColorOptionStyle};\r\n  opacity: ${({ colorway }) => (colorway === \"blue\" ? \"1\" : \"0.8\")};\r\n  border: ${({ colorway }) => (colorway === \"blue\" ? \"3px solid white\" : \"\")};\r\n  background-color: blue;\r\n`;\r\nconst ColorOptionGreen = styled.div`\r\n  ${ColorOptionStyle};\r\n  opacity: ${({ colorway }) => (colorway === \"green\" ? \"1\" : \"0.8\")};\r\n  border: ${({ colorway }) => (colorway === \"green\" ? \"3px solid white\" : \"\")};\r\n  background-color: green;\r\n`;\r\nconst ColorOptionPink = styled.div`\r\n  ${ColorOptionStyle};\r\n  opacity: ${({ colorway }) => (colorway === \"pink\" ? \"1\" : \"0.8\")};\r\n  border: ${({ colorway }) => (colorway === \"pink\" ? \"3px solid white\" : \"\")};\r\n  background-color: pink;\r\n`;\r\nconst ColorOptionRed = styled.div`\r\n  ${ColorOptionStyle};\r\n  opacity: ${({ colorway }) => (colorway === \"red\" ? \"1\" : \"0.8\")};\r\n  border: ${({ colorway }) => (colorway === \"red\" ? \"3px solid white\" : \"\")};\r\n  background-color: red;\r\n`;\r\nconst TaskStatusSelect = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 50px;\r\n`;\r\n\r\nconst TaskUrgencySelect = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  height: 50px;\r\n`;\r\n\r\nconst UrgencyOption = styled.div``;\r\n\r\nconst StatusOption = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 1px solid red;\r\n`;\r\n\r\nconst SubmitButton = styled.button``;\r\n"]},"metadata":{},"sourceType":"module"}