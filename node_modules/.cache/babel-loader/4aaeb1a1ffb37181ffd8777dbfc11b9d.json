{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  opacity: \",\";\\n\\n  @media (min-width: 769px) {\\n    opacity: \",\";\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  opacity: \",\";\\n\\n  @media (min-width: 769px) {\\n    opacity: \",\";\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  flex-basis: 33%;\\n  height: 100%;\\n  border-radius: 15px 15px 0 0;\\n  color: black;\\n  transition: 0.2s ease-out;\\n  text-decoration: none;\\n  opacity: \",\";\\n\\n  @media (min-width: 769px) {\\n    opacity: \",\";\\n\\n    :hover {\\n      cursor: \",\";\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  width: 100%;\\n  height: 6%;\\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\\n  position: relative;\\n  z-index: 7;\\n  font-weight: bold;\\n  font-size: 1.1rem;\\n  background: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import{flexbox}from\"../../../style/mixins\";import*as c from\"../../../style/colors\";// Packages //\nimport{useSelector,useDispatch}from\"react-redux\";// Actions //\nimport{toggleDesktopAction,toggleMobileAction}from\"../../../state/actions/toggleViewAction\";// Add ons //\nimport{GoDeviceMobile,GoDeviceDesktop}from\"react-icons/go\";var Tabs=function Tabs(){var currentTab=useSelector(function(state){return state.markTabReducer;});var desktopView=useSelector(function(state){return state.toggleViewReducer;});return React.createElement(TabsContainer,null,React.createElement(TodoTab,{href:\"#todo\",currentTab:currentTab,desktopView:desktopView},\"To Do\"),React.createElement(InProgressTab,{href:\"#progress\",currentTab:currentTab,desktopView:desktopView},\"In Progress\"),React.createElement(DoneTab,{href:\"#done\",currentTab:currentTab,desktopView:desktopView},\"Done\"));};export default Tabs;var TabsContainer=styled.div(_templateObject(),flexbox({jc:\"space-evenly\"}),c.shyBlue);var TodoTab=styled.a(_templateObject2(),flexbox(),function(_ref){var currentTab=_ref.currentTab;return currentTab===\"currentTabTodo\"?\"1\":\"0.5\";},function(_ref2){var desktopView=_ref2.desktopView,currentTab=_ref2.currentTab;return!desktopView&&currentTab===\"currentTabTodo\"?\"1\":\"0.5\";},function(_ref3){var desktopView=_ref3.desktopView;return desktopView?\"context-menu\":\"pointer\";});var InProgressTab=styled(TodoTab)(_templateObject3(),function(_ref4){var currentTab=_ref4.currentTab;return currentTab===\"currentTabProgress\"?\"1\":\"0.5\";},function(_ref5){var desktopView=_ref5.desktopView,currentTab=_ref5.currentTab;return!desktopView&&currentTab===\"currentTabProgress\"?\"1\":\"0.5\";});var DoneTab=styled(TodoTab)(_templateObject4(),function(_ref6){var currentTab=_ref6.currentTab;return currentTab===\"currentTabDone\"?\"1\":\"0.5\";},function(_ref7){var desktopView=_ref7.desktopView,currentTab=_ref7.currentTab;return!desktopView&&currentTab===\"currentTabDone\"?\"1\":\"0.5\";});","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/BodyComponent/Tabs.jsx"],"names":["React","styled","flexbox","c","useSelector","useDispatch","toggleDesktopAction","toggleMobileAction","GoDeviceMobile","GoDeviceDesktop","Tabs","currentTab","state","markTabReducer","desktopView","toggleViewReducer","TabsContainer","div","jc","shyBlue","TodoTab","a","InProgressTab","DoneTab"],"mappings":"mzCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,KAAwB,uBAAxB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,uBAAnB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA;AACA,OACEC,mBADF,CAEEC,kBAFF,KAGO,yCAHP,CAKA;AACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,gBAAhD,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,UAAU,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,cAAV,EAAN,CAA9B,CACA,GAAMC,CAAAA,WAAW,CAAGV,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACG,iBAAV,EAAN,CAA/B,CAEA,MACE,qBAAC,aAAD,MACE,oBAAC,OAAD,EAAS,IAAI,CAAC,OAAd,CAAsB,UAAU,CAAEJ,UAAlC,CAA8C,WAAW,CAAEG,WAA3D,UADF,CAIE,oBAAC,aAAD,EACE,IAAI,CAAC,WADP,CAEE,UAAU,CAAEH,UAFd,CAGE,WAAW,CAAEG,WAHf,gBAJF,CAWE,oBAAC,OAAD,EAAS,IAAI,CAAC,OAAd,CAAsB,UAAU,CAAEH,UAAlC,CAA8C,WAAW,CAAEG,WAA3D,SAXF,CADF,CAiBD,CArBD,CAuBA,cAAeJ,CAAAA,IAAf,CAEA,GAAMM,CAAAA,aAAa,CAAGf,MAAM,CAACgB,GAAV,mBACff,OAAO,CAAC,CAAEgB,EAAE,CAAE,cAAN,CAAD,CADQ,CASHf,CAAC,CAACgB,OATC,CAAnB,CAYA,GAAMC,CAAAA,OAAO,CAAGnB,MAAM,CAACoB,CAAV,oBACTnB,OAAO,EADE,CAQA,kBAAGS,CAAAA,UAAH,MAAGA,UAAH,OACTA,CAAAA,UAAU,GAAK,gBAAf,CAAkC,GAAlC,CAAwC,KAD/B,EARA,CAYE,mBAAGG,CAAAA,WAAH,OAAGA,WAAH,CAAgBH,UAAhB,OAAgBA,UAAhB,OACT,CAACG,WAAD,EAAgBH,UAAU,GAAK,gBAA/B,CAAkD,GAAlD,CAAwD,KAD/C,EAZF,CAgBG,mBAAGG,CAAAA,WAAH,OAAGA,WAAH,OACRA,CAAAA,WAAW,CAAG,cAAH,CAAoB,SADvB,EAhBH,CAAb,CAsBA,GAAMQ,CAAAA,aAAa,CAAGrB,MAAM,CAACmB,OAAD,CAAT,oBACN,mBAAGT,CAAAA,UAAH,OAAGA,UAAH,OACTA,CAAAA,UAAU,GAAK,oBAAf,CAAsC,GAAtC,CAA4C,KADnC,EADM,CAKJ,mBAAGG,CAAAA,WAAH,OAAGA,WAAH,CAAgBH,UAAhB,OAAgBA,UAAhB,OACT,CAACG,WAAD,EAAgBH,UAAU,GAAK,oBAA/B,CAAsD,GAAtD,CAA4D,KADnD,EALI,CAAnB,CAUA,GAAMY,CAAAA,OAAO,CAAGtB,MAAM,CAACmB,OAAD,CAAT,oBACA,mBAAGT,CAAAA,UAAH,OAAGA,UAAH,OACTA,CAAAA,UAAU,GAAK,gBAAf,CAAkC,GAAlC,CAAwC,KAD/B,EADA,CAKE,mBAAGG,CAAAA,WAAH,OAAGA,WAAH,CAAgBH,UAAhB,OAAgBA,UAAhB,OACT,CAACG,WAAD,EAAgBH,UAAU,GAAK,gBAA/B,CAAkD,GAAlD,CAAwD,KAD/C,EALF,CAAb","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\n// Packages //\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions //\r\nimport {\r\n  toggleDesktopAction,\r\n  toggleMobileAction\r\n} from \"../../../state/actions/toggleViewAction\";\r\n\r\n// Add ons //\r\nimport { GoDeviceMobile, GoDeviceDesktop } from \"react-icons/go\";\r\n\r\nconst Tabs = () => {\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n\r\n  return (\r\n    <TabsContainer>\r\n      <TodoTab href=\"#todo\" currentTab={currentTab} desktopView={desktopView}>\r\n        To Do\r\n      </TodoTab>\r\n      <InProgressTab\r\n        href=\"#progress\"\r\n        currentTab={currentTab}\r\n        desktopView={desktopView}\r\n      >\r\n        In Progress\r\n      </InProgressTab>\r\n      <DoneTab href=\"#done\" currentTab={currentTab} desktopView={desktopView}>\r\n        Done\r\n      </DoneTab>\r\n    </TabsContainer>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n\r\nconst TabsContainer = styled.div`\r\n  ${flexbox({ jc: \"space-evenly\" })};\r\n  width: 100%;\r\n  height: 6%;\r\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.15);\r\n  position: relative;\r\n  z-index: 7;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  background: ${c.shyBlue};\r\n`;\r\n\r\nconst TodoTab = styled.a`\r\n  ${flexbox()};\r\n  flex-basis: 33%;\r\n  height: 100%;\r\n  border-radius: 15px 15px 0 0;\r\n  color: black;\r\n  transition: 0.2s ease-out;\r\n  text-decoration: none;\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 769px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabTodo\" ? \"1\" : \"0.5\"};\r\n\r\n    :hover {\r\n      cursor: ${({ desktopView }) =>\r\n        desktopView ? \"context-menu\" : \"pointer\"};\r\n    }\r\n  }\r\n`;\r\n\r\nconst InProgressTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 769px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabProgress\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n\r\nconst DoneTab = styled(TodoTab)`\r\n  opacity: ${({ currentTab }) =>\r\n    currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n\r\n  @media (min-width: 769px) {\r\n    opacity: ${({ desktopView, currentTab }) =>\r\n      !desktopView && currentTab === \"currentTabDone\" ? \"1\" : \"0.5\"};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}