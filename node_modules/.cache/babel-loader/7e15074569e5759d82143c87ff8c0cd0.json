{"ast":null,"code":"const fetchAPI = async (urlString, method) => {\n  let options = {}; // <---GET A USER FROM DATABASE USING A TOKEN ON HIS LOCAL STORAGE-->\n\n  const getToken = {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      \"auth-token\": localStorage.getItem(\"token\")\n    }\n  }; // <---UPDATING THE TASKS ARRAYS IN THE DB-->\n  //   const put = {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-type\": \"application/json; charset=UTF-8\",\n  //       \"auth-token\": localStorage.getItem(\"token\")\n  //     },\n  //     body: JSON.stringify(body) // We send the updated arrays in JSON format\n  //   };\n  //   //<---CREATE A NEW USER IN DB--->\n  //   const post = {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(body)\n  //   };\n\n  switch (method) {\n    case \"noOption\":\n      options = {};\n      break;\n\n    case \"get\":\n      options = {};\n      break;\n\n    case \"getToken\":\n      options = getToken;\n      break;\n    // case \"put\":\n    //   options = put;\n    //   break;\n    // case \"post\":\n    //   options = post;\n    //   break;\n\n    default:\n      break;\n  }\n\n  const urls = {\n    logWithToken: `https://tracker-database.youngwebdevs.now.sh/login/loggeduser/`,\n    createUser: `https://tracker-database.youngwebdevs.now.sh/login/loggeduser/`,\n    // get: `https://tracker-database.youngwebdevs.now.sh/login/userfromdb/?userName=${paramOne}&password=${paramTwo}`,\n    put: `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`\n  };\n  const result = await fetch(urls[urlString], options);\n  console.log(\"urls[urlString]\", urls[urlString]);\n  if (method === \"getToken\") localStorage.setItem(\"token\", result.headers.get(\"auth-token\"));\n  const resultJSON = await result.json();\n  return resultJSON;\n};\n\nexport default fetchAPI;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/service/services.js"],"names":["fetchAPI","urlString","method","options","getToken","headers","localStorage","getItem","urls","logWithToken","createUser","put","result","fetch","console","log","setItem","get","resultJSON","json"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,OAAOC,SAAP,EAAkBC,MAAlB,KAA6B;AAC5C,MAAIC,OAAO,GAAG,EAAd,CAD4C,CAG5C;;AAEA,QAAMC,QAAQ,GAAG;AACfF,IAAAA,MAAM,EAAE,KADO;AAEfG,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEP,oBAAcC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFP;AAFM,GAAjB,CAL4C,CAa5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAQL,MAAR;AACE,SAAK,UAAL;AACEC,MAAAA,OAAO,GAAG,EAAV;AACA;;AACF,SAAK,KAAL;AACEA,MAAAA,OAAO,GAAG,EAAV;AACA;;AACF,SAAK,UAAL;AACEA,MAAAA,OAAO,GAAGC,QAAV;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACA;AACE;AAjBJ;;AAoBA,QAAMI,IAAI,GAAG;AACXC,IAAAA,YAAY,EAAG,gEADJ;AAEXC,IAAAA,UAAU,EAAG,gEAFF;AAGX;AACAC,IAAAA,GAAG,EAAG;AAJK,GAAb;AAOA,QAAMC,MAAM,GAAG,MAAMC,KAAK,CAACL,IAAI,CAACP,SAAD,CAAL,EAAkBE,OAAlB,CAA1B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,IAAI,CAACP,SAAD,CAAnC;AACA,MAAIC,MAAM,KAAK,UAAf,EACEI,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACP,OAAP,CAAeY,GAAf,CAAmB,YAAnB,CAA9B;AACF,QAAMC,UAAU,GAAG,MAAMN,MAAM,CAACO,IAAP,EAAzB;AACA,SAAOD,UAAP;AACD,CAlED;;AAoEA,eAAelB,QAAf","sourcesContent":["const fetchAPI = async (urlString, method) => {\r\n  let options = {};\r\n\r\n  // <---GET A USER FROM DATABASE USING A TOKEN ON HIS LOCAL STORAGE-->\r\n\r\n  const getToken = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      \"auth-token\": localStorage.getItem(\"token\")\r\n    }\r\n  };\r\n\r\n  // <---UPDATING THE TASKS ARRAYS IN THE DB-->\r\n\r\n  //   const put = {\r\n  //     method: \"PUT\",\r\n  //     headers: {\r\n  //       \"Content-type\": \"application/json; charset=UTF-8\",\r\n  //       \"auth-token\": localStorage.getItem(\"token\")\r\n  //     },\r\n  //     body: JSON.stringify(body) // We send the updated arrays in JSON format\r\n  //   };\r\n\r\n  //   //<---CREATE A NEW USER IN DB--->\r\n  //   const post = {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\"\r\n  //     },\r\n  //     body: JSON.stringify(body)\r\n  //   };\r\n\r\n  switch (method) {\r\n    case \"noOption\":\r\n      options = {};\r\n      break;\r\n    case \"get\":\r\n      options = {};\r\n      break;\r\n    case \"getToken\":\r\n      options = getToken;\r\n      break;\r\n    // case \"put\":\r\n    //   options = put;\r\n    //   break;\r\n    // case \"post\":\r\n    //   options = post;\r\n    //   break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const urls = {\r\n    logWithToken: `https://tracker-database.youngwebdevs.now.sh/login/loggeduser/`,\r\n    createUser: `https://tracker-database.youngwebdevs.now.sh/login/loggeduser/`,\r\n    // get: `https://tracker-database.youngwebdevs.now.sh/login/userfromdb/?userName=${paramOne}&password=${paramTwo}`,\r\n    put: `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`\r\n  };\r\n\r\n  const result = await fetch(urls[urlString], options);\r\n  console.log(\"urls[urlString]\", urls[urlString]);\r\n  if (method === \"getToken\")\r\n    localStorage.setItem(\"token\", result.headers.get(\"auth-token\"));\r\n  const resultJSON = await result.json();\r\n  return resultJSON;\r\n};\r\n\r\nexport default fetchAPI;\r\n"]},"metadata":{},"sourceType":"module"}