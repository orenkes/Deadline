{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TaskCreation\\\\TaskCreation.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox, borderShadowsRadius } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport TaskColorPicker from \"./TaskColorPicker\";\nimport TaskStatusSelect from \"./TaskStatusSelect\";\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\n\nconst TaskCreation = ({\n  setPopupIsOpen\n}) => {\n  const _useState = useState(\"turquoise\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        colorway = _useState2[0],\n        setColorway = _useState2[1];\n\n  const _useState3 = useState(\"todo\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState(\"low\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        urgency = _useState6[0],\n        setUrgency = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        unFilledInput = _useState8[0],\n        setUnFilledInput = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messageText = _useState10[0],\n        setMessageText = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        showTextBox = _useState12[0],\n        setShowTextBox = _useState12[1];\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n\n  const _useState13 = useState(tasksArrays.tasksCounter),\n        _useState14 = _slicedToArray(_useState13, 2),\n        tasksCounter = _useState14[0],\n        setTasksCounter = _useState14[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setMessageTextFunction(unFilledInput);\n    setTimeout(() => {\n      setShowTextBox(false);\n    }, 4000);\n  }, [unFilledInput]);\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  let getTasksCounter = tasksArrays.tasksCounter;\n\n  const updatingArraysInDataBase = async newTasksCounter => {\n    console.log(\"newTasksCounter\", newTasksCounter);\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter: newTasksCounter\n    };\n    dispatch(updateArraysAction(updatedArrays));\n    console.log(\"updatedArrays\", updatedArrays);\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays)\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n    console.log(\"PUT ENDED\");\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (e.target[0].value === \"\" || e.target[1].value === \"\" || e.target[2].value === \"\") {\n      if (e.target[0].value === \"\") {\n        setUnFilledInput(\"title\");\n      } else if (e.target[1].value === \"\") {\n        setUnFilledInput(\"description\");\n      } else {\n        setUnFilledInput(\"dateAndTime\");\n      }\n    } else {\n      setPopupIsOpen(false);\n      setUnFilledInput(\"\");\n      console.log(getTasksCounter, \"tasksCounter before\");\n      const newTasksCounter = getTasksCounter + 1;\n      console.log(newTasksCounter, \"newTasksCounter after\");\n      const title = e.target[0].value;\n      const description = e.target[1].value;\n      const deadlineISO = e.target[2].value;\n\n      const reducer = (accumulator, currentValue) => Number(accumulator) + Number(currentValue); //---TIME AND DATE SUM--//\n\n\n      const dateAndTimeArray = deadlineISO.split(\"T\");\n      const date = dateAndTimeArray[0];\n      const dateArray = date.split(\"-\");\n      const dateSum = dateArray.reduce(reducer);\n      console.log(\"dateSum\", dateSum);\n      const timeString = dateAndTimeArray[1];\n      const timeArray = timeString.split(\":\");\n      const timeSum = timeArray.reduce(reducer);\n      console.log(\"timeSum\", timeSum);\n      const dateAndTimeSum = dateSum + timeSum;\n      console.log(\"dateAndTimeSum\", dateAndTimeSum); //---TIME AND DATE PROPS--//\n\n      const deadline = String(new Date(deadlineISO));\n      const deadlineArray = deadline.split(\" \");\n      const dayText = deadlineArray[0];\n      const monthText = deadlineArray[1];\n      const dayNumber = deadlineArray[2];\n      const year = deadlineArray[3];\n      const time = deadlineArray[4].slice(0, 5);\n      const taskObject = {\n        id: newTasksCounter,\n        title,\n        description,\n        dayText,\n        monthText,\n        dayNumber,\n        year,\n        time,\n        colorway,\n        status,\n        urgency,\n        dateAndTimeSum\n      };\n      console.log(taskObject, \"taskObject\");\n\n      switch (status) {\n        case \"todo\":\n          todoArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        case \"inProgress\":\n          inProgressArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        case \"done\":\n          completedTasksArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        default:\n          break;\n      }\n\n      e.target[0].value = \"\";\n      e.target[1].value = \"\";\n      e.target[2].value = \"\";\n    }\n  };\n\n  const setMessageTextFunction = unFilledInput => {\n    switch (unFilledInput) {\n      case \"title\":\n        setMessageText(\"Title input must be filled\");\n        setShowTextBox(true);\n        break;\n\n      case \"description\":\n        setMessageText(\"Description input must be filled\");\n        setShowTextBox(true);\n        break;\n\n      case \"dateAndTime\":\n        setMessageText(\"Date and time must be filled\");\n        setShowTextBox(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, showTextBox && React.createElement(MessageWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(MessageBox, {\n    showTextBox: showTextBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, messageText)), React.createElement(TaskForm, {\n    onSubmit: createTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    unFilledInput: unFilledInput,\n    type: \"text\",\n    placeholder: \"Task Title...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(DescrptionInput, {\n    unFilledInput: unFilledInput,\n    placeholder: \"Task Descrption...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(DeadlineInput, {\n    unFilledInput: unFilledInput,\n    type: \"datetime-local\",\n    max: \"3000-01-01T00:00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(TaskColorPicker, {\n    colorway: colorway,\n    setColorway: setColorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(TaskStatusSelect, {\n    status: status,\n    setStatus: setStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(TaskUrgencySelect, {\n    urgency: urgency,\n    setUrgency: setUrgency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Add Deadline\")));\n};\n\nexport default TaskCreation;\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px 0;\n  ${borderShadowsRadius}\n  background: ${c.bgShyBlue};\n`;\nconst messageAnimation = keyframes`\n0%{\n  transform: translateY(10px);\n}\n50%{\n  transform: translateY(-20px);\n}\n100%{\n  transform: translateY(10px);\n}\n`;\nconst MessageWrapper = styled.div`\n  ${flexbox()}\n`;\nconst MessageBox = styled.div`\n  ${flexbox({\n  ai: \"flex-start\"\n})}\n  padding-top: 5px;\n  height: 60px;\n  width: 300px;\n  color: white;\n  text-align: center;\n  background: linear-gradient(to right, #485563, #29323c);\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\n  border-radius: 10px;\n  border: 1px solid rgba(242, 248, 250, 0.2);\n  /* left: 50%; */\n  /* transform: translateX(-50%); */\n  position: absolute;\n  top: 0;\n  z-index: -1;\n  transition: 2s ease-in-out;\n  /* animation: ${messageAnimation} 3s ease-in-out alternate infinite; */\n  animation: ${messageAnimation} 3s ease-in-out alternate;\n`;\nconst TaskForm = styled.form`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n`;\nconst TitleInput = styled.input`\n  flex-basis: 10%;\n  height: 10%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: ${c.inputShyBlue};\n  box-shadow: ${c.inputShadows};\n  padding: 20px;\n  font-size: 1.4rem;\n  transition: 0.1s linear;\n\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nconst DescrptionInput = styled.textarea`\n  resize: none;\n  flex-basis: 30%;\n  height: 30%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: ${c.inputShyBlue};\n  box-shadow: ${c.inputShadows};\n  padding: 20px;\n  font-size: 1.1rem;\n\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  @media (max-width: 450px) {\n    flex-basis: 25%;\n    height: 25%;\n  }\n`;\nconst DeadlineInput = styled(TitleInput)`\n  text-align: center;s\n`;\nconst SubmitButton = styled.button`\n  height: 50px;\n  width: 50%;\n  min-width: 250px;\n  border-radius: 5px;\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\n  border: none;\n  background: ${c.elmShyBlue};\n  font-size: 0.9rem;\n  color: ${c.darkBlueText};\n  text-shadow: 0 0 1px white;\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  outline: none;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    cursor: pointer;\n    background: ${c.elmLightBlue};\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TaskCreation/TaskCreation.jsx"],"names":["React","useState","useEffect","styled","keyframes","useSelector","useDispatch","flexbox","borderShadowsRadius","c","TaskColorPicker","TaskStatusSelect","TaskUrgencySelect","updateArraysAction","TaskCreation","setPopupIsOpen","colorway","setColorway","status","setStatus","urgency","setUrgency","unFilledInput","setUnFilledInput","messageText","setMessageText","showTextBox","setShowTextBox","tasksArrays","state","updateArraysReducer","tasksCounter","setTasksCounter","dispatch","setMessageTextFunction","setTimeout","todoArray","inProgressArray","completedTasksArray","getTasksCounter","updatingArraysInDataBase","newTasksCounter","console","log","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","createTask","e","preventDefault","target","value","title","description","deadlineISO","reducer","accumulator","currentValue","Number","dateAndTimeArray","split","date","dateArray","dateSum","reduce","timeString","timeArray","timeSum","dateAndTimeSum","deadline","String","Date","deadlineArray","dayText","monthText","dayNumber","year","time","slice","taskObject","id","push","Container","div","bgShyBlue","messageAnimation","MessageWrapper","MessageBox","ai","TaskForm","form","dir","jc","TitleInput","input","inputShyBlue","inputShadows","DescrptionInput","textarea","DeadlineInput","SubmitButton","button","elmShyBlue","darkBlueText","elmLightBlue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox, borderShadowsRadius } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport TaskColorPicker from \"./TaskColorPicker\";\r\nimport TaskStatusSelect from \"./TaskStatusSelect\";\r\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst TaskCreation = ({ setPopupIsOpen }) => {\r\n  const [colorway, setColorway] = useState(\"turquoise\");\r\n  const [status, setStatus] = useState(\"todo\");\r\n  const [urgency, setUrgency] = useState(\"low\");\r\n  const [unFilledInput, setUnFilledInput] = useState(\"\");\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [showTextBox, setShowTextBox] = useState(false);\r\n\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const [tasksCounter, setTasksCounter] = useState(tasksArrays.tasksCounter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setMessageTextFunction(unFilledInput);\r\n    setTimeout(() => {\r\n      setShowTextBox(false);\r\n    }, 4000);\r\n  }, [unFilledInput]);\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  let getTasksCounter = tasksArrays.tasksCounter;\r\n\r\n  const updatingArraysInDataBase = async newTasksCounter => {\r\n    console.log(\"newTasksCounter\", newTasksCounter);\r\n\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter: newTasksCounter\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n\r\n    console.log(\"updatedArrays\", updatedArrays);\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays)\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n\r\n    console.log(\"PUT ENDED\");\r\n  };\r\n\r\n  const createTask = e => {\r\n    e.preventDefault();\r\n    if (\r\n      e.target[0].value === \"\" ||\r\n      e.target[1].value === \"\" ||\r\n      e.target[2].value === \"\"\r\n    ) {\r\n      if (e.target[0].value === \"\") {\r\n        setUnFilledInput(\"title\");\r\n      } else if (e.target[1].value === \"\") {\r\n        setUnFilledInput(\"description\");\r\n      } else {\r\n        setUnFilledInput(\"dateAndTime\");\r\n      }\r\n    } else {\r\n      setPopupIsOpen(false);\r\n      setUnFilledInput(\"\");\r\n      console.log(getTasksCounter, \"tasksCounter before\");\r\n      const newTasksCounter = getTasksCounter + 1;\r\n      console.log(newTasksCounter, \"newTasksCounter after\");\r\n\r\n      const title = e.target[0].value;\r\n      const description = e.target[1].value;\r\n      const deadlineISO = e.target[2].value;\r\n\r\n      const reducer = (accumulator, currentValue) =>\r\n        Number(accumulator) + Number(currentValue);\r\n\r\n      //---TIME AND DATE SUM--//\r\n      const dateAndTimeArray = deadlineISO.split(\"T\");\r\n      const date = dateAndTimeArray[0];\r\n      const dateArray = date.split(\"-\");\r\n      const dateSum = dateArray.reduce(reducer);\r\n      console.log(\"dateSum\", dateSum);\r\n      const timeString = dateAndTimeArray[1];\r\n      const timeArray = timeString.split(\":\");\r\n      const timeSum = timeArray.reduce(reducer);\r\n      console.log(\"timeSum\", timeSum);\r\n      const dateAndTimeSum = dateSum + timeSum;\r\n      console.log(\"dateAndTimeSum\", dateAndTimeSum);\r\n\r\n      //---TIME AND DATE PROPS--//\r\n      const deadline = String(new Date(deadlineISO));\r\n      const deadlineArray = deadline.split(\" \");\r\n      const dayText = deadlineArray[0];\r\n      const monthText = deadlineArray[1];\r\n      const dayNumber = deadlineArray[2];\r\n      const year = deadlineArray[3];\r\n      const time = deadlineArray[4].slice(0, 5);\r\n\r\n      const taskObject = {\r\n        id: newTasksCounter,\r\n        title,\r\n        description,\r\n        dayText,\r\n        monthText,\r\n        dayNumber,\r\n        year,\r\n        time,\r\n        colorway,\r\n        status,\r\n        urgency,\r\n        dateAndTimeSum\r\n      };\r\n\r\n      console.log(taskObject, \"taskObject\");\r\n\r\n      switch (status) {\r\n        case \"todo\":\r\n          todoArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"inProgress\":\r\n          inProgressArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"done\":\r\n          completedTasksArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      e.target[0].value = \"\";\r\n      e.target[1].value = \"\";\r\n      e.target[2].value = \"\";\r\n    }\r\n  };\r\n\r\n  const setMessageTextFunction = unFilledInput => {\r\n    switch (unFilledInput) {\r\n      case \"title\":\r\n        setMessageText(\"Title input must be filled\");\r\n        setShowTextBox(true);\r\n        break;\r\n      case \"description\":\r\n        setMessageText(\"Description input must be filled\");\r\n        setShowTextBox(true);\r\n        break;\r\n      case \"dateAndTime\":\r\n        setMessageText(\"Date and time must be filled\");\r\n        setShowTextBox(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {showTextBox && (\r\n        <MessageWrapper>\r\n          <MessageBox showTextBox={showTextBox}>{messageText}</MessageBox>\r\n        </MessageWrapper>\r\n      )}\r\n      <TaskForm onSubmit={createTask}>\r\n        <TitleInput\r\n          unFilledInput={unFilledInput}\r\n          type=\"text\"\r\n          placeholder=\"Task Title...\"\r\n        />\r\n        <DescrptionInput\r\n          unFilledInput={unFilledInput}\r\n          placeholder=\"Task Descrption...\"\r\n        />\r\n        <DeadlineInput\r\n          unFilledInput={unFilledInput}\r\n          type=\"datetime-local\"\r\n          max=\"3000-01-01T00:00\"\r\n        />\r\n\r\n        <TaskColorPicker colorway={colorway} setColorway={setColorway} />\r\n        <TaskStatusSelect status={status} setStatus={setStatus} />\r\n        <TaskUrgencySelect urgency={urgency} setUrgency={setUrgency} />\r\n\r\n        <SubmitButton type=\"submit\">Add Deadline</SubmitButton>\r\n      </TaskForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px 0;\r\n  ${borderShadowsRadius}\r\n  background: ${c.bgShyBlue};\r\n`;\r\n\r\nconst messageAnimation = keyframes`\r\n0%{\r\n  transform: translateY(10px);\r\n}\r\n50%{\r\n  transform: translateY(-20px);\r\n}\r\n100%{\r\n  transform: translateY(10px);\r\n}\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  ${flexbox()}\r\n`;\r\n\r\nconst MessageBox = styled.div`\r\n  ${flexbox({ ai: \"flex-start\" })}\r\n  padding-top: 5px;\r\n  height: 60px;\r\n  width: 300px;\r\n  color: white;\r\n  text-align: center;\r\n  background: linear-gradient(to right, #485563, #29323c);\r\n  box-shadow: -6px -6px 20px 0 rgba(242, 248, 250, 0.9),\r\n    6px 6px 16px 0 rgba(54, 73, 79, 0.25);\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(242, 248, 250, 0.2);\r\n  /* left: 50%; */\r\n  /* transform: translateX(-50%); */\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: -1;\r\n  transition: 2s ease-in-out;\r\n  /* animation: ${messageAnimation} 3s ease-in-out alternate infinite; */\r\n  animation: ${messageAnimation} 3s ease-in-out alternate;\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  flex-basis: 10%;\r\n  height: 10%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.4rem;\r\n  transition: 0.1s linear;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst DescrptionInput = styled.textarea`\r\n  resize: none;\r\n  flex-basis: 30%;\r\n  height: 30%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.1rem;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    flex-basis: 25%;\r\n    height: 25%;\r\n  }\r\n`;\r\n\r\nconst DeadlineInput = styled(TitleInput)`\r\n  text-align: center;s\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  height: 50px;\r\n  width: 50%;\r\n  min-width: 250px;\r\n  border-radius: 5px;\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n  border: none;\r\n  background: ${c.elmShyBlue};\r\n  font-size: 0.9rem;\r\n  color: ${c.darkBlueText};\r\n  text-shadow: 0 0 1px white;\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n    background: ${c.elmLightBlue};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}