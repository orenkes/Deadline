{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\nconst dispatch = useDispatch(); // export const selectChange = (\n//   arrayToRemoveFrom,\n//   arrayToAddInto,\n//   destination,\n//   deleteTask,\n//   taskId\n// ) => {\n//   const selectedTask = _.remove(arrayToRemoveFrom, n => {\n//     return n.id === taskId;\n//   });\n//   console.log(\"selectedtask: \", selectedTask[0]);\n//   if (deleteTask === true) {\n//     setCardIsFlipped(false);\n//     setRefreshCounter(refreshCounter + 1);\n//     dispatch(updateArraysAction(arrayToRemoveFrom));\n//     return;\n//   }\n//   const newStatusSelectedTask = {\n//     ...selectedTask[0],\n//     status: destination\n//   };\n//   arrayToAddInto.push(newStatusSelectedTask);\n//   const updatedArrays = {\n//     arrayToRemoveFrom,\n//     arrayToAddInto\n//   };\n//   setCardIsFlipped(false);\n//   setRefreshCounter(refreshCounter + 1);\n//   dispatch(updateArraysAction(updatedArrays));\n// };\n\nexport const handleFirstMove = (arrayToRemoveFrom, arrayToAddInto) => {\n  switch (status) {\n    case \"todo\":\n      //todoArray, inProgressArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"inProgress\");\n      break;\n\n    case \"inProgress\":\n      //inProgressArray, completedTasksArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"done\");\n      break;\n\n    case \"done\":\n      //completedTasksArray, inProgressArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"inProgress\");\n      break;\n\n    default:\n      break;\n  }\n};\nexport const handleSecondMove = (arrayToRemoveFrom, arrayToAddInto) => {\n  switch (status) {\n    case \"todo\":\n      //todoArray,completedTasksArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"done\");\n      break;\n\n    case \"inProgress\":\n      //inProgressArray,todoArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"todo\");\n      break;\n\n    case \"done\":\n      //completedTasksArray,todoArray\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"todo\");\n      break;\n\n    default:\n      break;\n  }\n};\nexport const handleDelete = arrayToRemoveFrom => {\n  switch (status) {\n    case \"todo\":\n      //todoArray\n      return selectChange(arrayToRemoveFrom, null, null, true);\n      break;\n\n    case \"inProgress\":\n      //inProgressArray\n      return selectChange(arrayToRemoveFrom, null, null, true);\n      break;\n\n    case \"done\":\n      //completedTasksArray\n      return selectChange(arrayToRemoveFrom, null, null, true);\n      break;\n\n    default:\n      break;\n  }\n};","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/taskLogic.js"],"names":["useDispatch","_","updateArraysAction","dispatch","handleFirstMove","arrayToRemoveFrom","arrayToAddInto","status","selectChange","handleSecondMove","handleDelete"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,kBAAT,QAAmC,2CAAnC;AAEA,MAAMC,QAAQ,GAAGH,WAAW,EAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,eAAe,GAAG,CAACC,iBAAD,EAAoBC,cAApB,KAAuC;AACpE,UAAQC,MAAR;AACE,SAAK,MAAL;AACE;AACA,aAAOC,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,YAApC,CAAnB;AACA;;AACF,SAAK,YAAL;AACE;AACA,aAAOE,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,MAApC,CAAnB;AACA;;AACF,SAAK,MAAL;AACE;AACA,aAAOE,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,YAApC,CAAnB;AACA;;AACF;AACE;AAdJ;AAgBD,CAjBM;AAmBP,OAAO,MAAMG,gBAAgB,GAAG,CAACJ,iBAAD,EAAoBC,cAApB,KAAuC;AACrE,UAAQC,MAAR;AACE,SAAK,MAAL;AACE;AACA,aAAOC,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,MAApC,CAAnB;AACA;;AACF,SAAK,YAAL;AACE;AACA,aAAOE,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,MAApC,CAAnB;AACA;;AACF,SAAK,MAAL;AACE;AACA,aAAOE,YAAY,CAACH,iBAAD,EAAoBC,cAApB,EAAoC,MAApC,CAAnB;AACA;;AACF;AACE;AAdJ;AAgBD,CAjBM;AAmBP,OAAO,MAAMI,YAAY,GAAGL,iBAAiB,IAAI;AAC/C,UAAQE,MAAR;AACE,SAAK,MAAL;AACE;AACA,aAAOC,YAAY,CAACH,iBAAD,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAnB;AACA;;AACF,SAAK,YAAL;AACE;AACA,aAAOG,YAAY,CAACH,iBAAD,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAnB;AACA;;AACF,SAAK,MAAL;AACE;AACA,aAAOG,YAAY,CAACH,iBAAD,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAnB;AACA;;AACF;AACE;AAdJ;AAgBD,CAjBM","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst dispatch = useDispatch();\r\n\r\n// export const selectChange = (\r\n//   arrayToRemoveFrom,\r\n//   arrayToAddInto,\r\n//   destination,\r\n//   deleteTask,\r\n//   taskId\r\n// ) => {\r\n//   const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n//     return n.id === taskId;\r\n//   });\r\n//   console.log(\"selectedtask: \", selectedTask[0]);\r\n\r\n//   if (deleteTask === true) {\r\n//     setCardIsFlipped(false);\r\n//     setRefreshCounter(refreshCounter + 1);\r\n//     dispatch(updateArraysAction(arrayToRemoveFrom));\r\n//     return;\r\n//   }\r\n\r\n//   const newStatusSelectedTask = {\r\n//     ...selectedTask[0],\r\n//     status: destination\r\n//   };\r\n//   arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n//   const updatedArrays = {\r\n//     arrayToRemoveFrom,\r\n//     arrayToAddInto\r\n//   };\r\n\r\n//   setCardIsFlipped(false);\r\n//   setRefreshCounter(refreshCounter + 1);\r\n//   dispatch(updateArraysAction(updatedArrays));\r\n// };\r\n\r\nexport const handleFirstMove = (arrayToRemoveFrom, arrayToAddInto) => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray, inProgressArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"inProgress\");\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray, completedTasksArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"done\");\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray, inProgressArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"inProgress\");\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const handleSecondMove = (arrayToRemoveFrom, arrayToAddInto) => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray,completedTasksArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"done\");\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray,todoArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"todo\");\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray,todoArray\r\n      return selectChange(arrayToRemoveFrom, arrayToAddInto, \"todo\");\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const handleDelete = arrayToRemoveFrom => {\r\n  switch (status) {\r\n    case \"todo\":\r\n      //todoArray\r\n      return selectChange(arrayToRemoveFrom, null, null, true);\r\n      break;\r\n    case \"inProgress\":\r\n      //inProgressArray\r\n      return selectChange(arrayToRemoveFrom, null, null, true);\r\n      break;\r\n    case \"done\":\r\n      //completedTasksArray\r\n      return selectChange(arrayToRemoveFrom, null, null, true);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}