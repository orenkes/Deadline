{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport { GiReturnArrow } from \"react-icons/gi\";\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\"; //---IMPORT COMPONENTS---//\n\nimport FaceSide from \"./FaceSide/FaceSide\";\nimport BackSide from \"./BackSide/BackSide\";\n\nconst Task = ({\n  id,\n  title,\n  date,\n  time,\n  description,\n  deadline,\n  colorway,\n  urgency,\n  status,\n  firstButtonText,\n  secondButtonText\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cardIsFlipped = _useState2[0],\n        setCardIsFlipped = _useState2[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  let urgencyShadow = ``;\n\n  const selectUrgency = (() => {\n    switch (urgency) {\n      case \"high\":\n        urgencyShadow = `-2px -2px 10px 0 rgba(255, 84, 90, 0.7),\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\n        break;\n\n      case \"regular\":\n        urgencyShadow = `-2px -2px 6px 0 rgba(84, 127, 255, 0.7),\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\n        break;\n\n      case \"low\":\n        urgencyShadow = `-2px -2px 6px 0 rgba(54, 73, 79, 0.5),\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\n        break;\n\n      default:\n        urgencyShadow = `-2px -2px 6px 0 rgba(54, 73, 79, 0.5),\n      2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\n        break;\n    }\n  })();\n\n  let colorwayStyle = ``;\n\n  const selectColorway = (() => {\n    switch (colorway) {\n      case \"black\":\n        colorwayStyle = c.taskBlack;\n        break;\n\n      case \"blue\":\n        colorwayStyle = c.taskBlue;\n        break;\n\n      case \"turquoise\":\n        colorwayStyle = c.taskTurquoise;\n        break;\n\n      case \"green\":\n        colorwayStyle = c.taskGreen;\n        break;\n\n      case \"pink\":\n        colorwayStyle = c.taskPink;\n        break;\n\n      default:\n        colorwayStyle = c.taskBlack;\n        break;\n    }\n  })();\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    urgencyShadow: urgencyShadow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    cardIsFlipped: cardIsFlipped,\n    setCardIsFlipped: setCardIsFlipped,\n    colorwayStyle: colorwayStyle,\n    title: title,\n    description: description,\n    deadline: deadline,\n    time: time,\n    date: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(BackSide, {\n    cardIsFlipped: cardIsFlipped,\n    setCardIsFlipped: setCardIsFlipped,\n    colorwayStyle: colorwayStyle,\n    id: id,\n    status: status,\n    firstButtonText: firstButtonText,\n    secondButtonText: secondButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 10px;\n  height: 30%;\n  max-height: 200px;\n  width: 90%;\n  max-width: 500px;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n  box-shadow: ${({\n  urgencyShadow\n}) => urgencyShadow};\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task/Task.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","_","flexbox","c","GiReturnArrow","getUserAction","updateArraysAction","FaceSide","BackSide","Task","id","title","date","time","description","deadline","colorway","urgency","status","firstButtonText","secondButtonText","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","urgencyShadow","selectUrgency","colorwayStyle","selectColorway","taskBlack","taskBlue","taskTurquoise","taskGreen","taskPink","TaskContainer","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\nimport { GiReturnArrow } from \"react-icons/gi\";\r\n\r\nimport { getUserAction } from \"../../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\n//---IMPORT COMPONENTS---//\r\nimport FaceSide from \"./FaceSide/FaceSide\";\r\nimport BackSide from \"./BackSide/BackSide\";\r\n\r\nconst Task = ({\r\n  id,\r\n  title,\r\n  date,\r\n  time,\r\n  description,\r\n  deadline,\r\n  colorway,\r\n  urgency,\r\n  status,\r\n  firstButtonText,\r\n  secondButtonText\r\n}) => {\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n\r\n  let urgencyShadow = ``;\r\n\r\n  const selectUrgency = (() => {\r\n    switch (urgency) {\r\n      case \"high\":\r\n        urgencyShadow = `-2px -2px 10px 0 rgba(255, 84, 90, 0.7),\r\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\r\n        break;\r\n      case \"regular\":\r\n        urgencyShadow = `-2px -2px 6px 0 rgba(84, 127, 255, 0.7),\r\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\r\n        break;\r\n      case \"low\":\r\n        urgencyShadow = `-2px -2px 6px 0 rgba(54, 73, 79, 0.5),\r\n        2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\r\n        break;\r\n\r\n      default:\r\n        urgencyShadow = `-2px -2px 6px 0 rgba(54, 73, 79, 0.5),\r\n      2px 2px 6px 0 rgba(242, 248, 250, 0.5)`;\r\n        break;\r\n    }\r\n  })();\r\n\r\n  let colorwayStyle = ``;\r\n\r\n  const selectColorway = (() => {\r\n    switch (colorway) {\r\n      case \"black\":\r\n        colorwayStyle = c.taskBlack;\r\n        break;\r\n      case \"blue\":\r\n        colorwayStyle = c.taskBlue;\r\n        break;\r\n      case \"turquoise\":\r\n        colorwayStyle = c.taskTurquoise;\r\n        break;\r\n      case \"green\":\r\n        colorwayStyle = c.taskGreen;\r\n        break;\r\n      case \"pink\":\r\n        colorwayStyle = c.taskPink;\r\n        break;\r\n\r\n      default:\r\n        colorwayStyle = c.taskBlack;\r\n        break;\r\n    }\r\n  })();\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped} urgencyShadow={urgencyShadow}>\r\n      <FaceSide\r\n        cardIsFlipped={cardIsFlipped}\r\n        setCardIsFlipped={setCardIsFlipped}\r\n        colorwayStyle={colorwayStyle}\r\n        title={title}\r\n        description={description}\r\n        deadline={deadline}\r\n        time={time}\r\n        date={date}\r\n      />\r\n      <BackSide\r\n        cardIsFlipped={cardIsFlipped}\r\n        setCardIsFlipped={setCardIsFlipped}\r\n        colorwayStyle={colorwayStyle}\r\n        id={id}\r\n        status={status}\r\n        firstButtonText={firstButtonText}\r\n        secondButtonText={secondButtonText}\r\n      />\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 10px;\r\n  height: 30%;\r\n  max-height: 200px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: ${({ urgencyShadow }) => urgencyShadow};\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}