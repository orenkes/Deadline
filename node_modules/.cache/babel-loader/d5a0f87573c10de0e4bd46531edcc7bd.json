{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getUserAction } from \"../../state/actions/getUserAction\";\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\n\nconst Task = ({\n  title,\n  description,\n  deadline,\n  colorway,\n  status,\n  id,\n  firstButtonText,\n  secondButtonText,\n  refreshCounter,\n  setRefreshCounter,\n  setArrayLengthChekcer\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        statusChangeCounter = _useState2[0],\n        setStatusChangeCounter = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstMoveOptionDisplay = _useState4[0],\n        setFirstMoveOptionDisplay = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        secondMoveOptionDisplay = _useState6[0],\n        setSecondMoveOptionDisplay = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cardIsFlipped = _useState8[0],\n        setCardIsFlipped = _useState8[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  useEffect(() => {// firstMoveOption();\n    // secondMoveOption();\n  }, [refreshCounter]); // const firstMoveOption = () => {\n  //   switch (status) {\n  //     case \"todo\":\n  //       return setFirstMoveOptionDisplay(\"Forward to In Progress\");\n  //       break;\n  //     case \"inProgress\":\n  //       return setFirstMoveOptionDisplay(\"Forward to Done\");\n  //       break;\n  //     case \"done\":\n  //       return setFirstMoveOptionDisplay(\"Return to In Progress\");\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n  // const secondMoveOption = () => {\n  //   switch (status) {\n  //     case \"todo\":\n  //       return setSecondMoveOptionDisplay(\"Forward to Done\");\n  //       break;\n  //     case \"inProgress\":\n  //       return setSecondMoveOptionDisplay(\"Return to Todo\");\n  //       break;\n  //     case \"done\":\n  //       return setSecondMoveOptionDisplay(\"Return to Todo\");\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n\n  const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination) => {\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\n      return n.id === id;\n    });\n\n    console.log(\"selectedtask: \", selectedTask[0]);\n\n    const newStatusSelectedTask = _objectSpread({}, selectedTask[0], {\n      status: destination\n    });\n\n    arrayToAddInto.push(newStatusSelectedTask);\n    const updatedArrays = {\n      arrayToRemoveFrom,\n      arrayToAddInto\n    };\n    setCardIsFlipped(false);\n    setRefreshCounter(refreshCounter + 1);\n    dispatch(updateArraysAction(updatedArrays));\n  };\n\n  const handleFirstMove = () => {\n    switch (status) {\n      case \"todo\":\n        return selectChange(todoArray, inProgressArray, \"inProgress\");\n        break;\n\n      case \"inProgress\":\n        return selectChange(inProgressArray, completedTasksArray, \"done\");\n        break;\n\n      case \"done\":\n        return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        return selectChange(todoArray, completedTasksArray, \"done\");\n        break;\n\n      case \"inProgress\":\n        return selectChange(inProgressArray, todoArray, \"todo\");\n        break;\n\n      case \"done\":\n        return selectChange(completedTasksArray, todoArray, \"todo\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {};\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"flip\")), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, title), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, deadline))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"flip\")), React.createElement(MoveToButton, {\n    onClick: handleFirstMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, firstButtonText), React.createElement(MoveToButton, {\n    onClick: handleSecondMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, secondButtonText), React.createElement(DeleteTaskButton, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Delete Tracker\")));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 5px;\n  height: 30%;\n  width: 90%;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 20%;\n  width: 10%;\n  background: lightsteelblue;\n  border-radius: 10px 10px 0 10px;\n\n  div {\n    ${flexbox()};\n\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    background: lightcoral;\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst Title = styled.div`\n  flex-basis: 20%;\n  height: 20%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 5px;\n`;\nconst Description = styled.div`\n  flex-basis: 60%;\n  height: 70%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  background: lightsteelblue;\n  padding: 5px;\n`;\nconst Deadline = styled.div`\n  flex-basis: 20%;\n  height: 10%;\n\n  width: 100%;\n  background: lightsteelblue;\n  border-radius: 0 0 10px 10px;\n  padding: 5px;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst MoveToButton = styled.div`\n  width: 100%;\n  border: 1px solid black;\n  height: 33%;\n`;\nconst DeleteTaskButton = styled.div`\n  height: 33%;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task.jsx"],"names":["React","useState","useEffect","styled","flexbox","useSelector","useDispatch","_","getUserAction","updateArraysAction","Task","title","description","deadline","colorway","status","id","firstButtonText","secondButtonText","refreshCounter","setRefreshCounter","setArrayLengthChekcer","statusChangeCounter","setStatusChangeCounter","firstMoveOptionDisplay","setFirstMoveOptionDisplay","secondMoveOptionDisplay","setSecondMoveOptionDisplay","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","selectChange","arrayToRemoveFrom","arrayToAddInto","destination","selectedTask","remove","n","console","log","newStatusSelectedTask","push","updatedArrays","handleFirstMove","handleSecondMove","handleDelete","TaskContainer","div","FaceSide","OptionsButton","DetailsSection","dir","jc","Title","Description","Deadline","BackSide","MoveToButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getUserAction } from \"../../state/actions/getUserAction\";\r\nimport { updateArraysAction } from \"../../state/actions/updateArraysAction\";\r\n\r\nconst Task = ({\r\n  title,\r\n  description,\r\n  deadline,\r\n  colorway,\r\n  status,\r\n  id,\r\n  firstButtonText,\r\n  secondButtonText,\r\n  refreshCounter,\r\n  setRefreshCounter,\r\n  setArrayLengthChekcer\r\n}) => {\r\n  const [statusChangeCounter, setStatusChangeCounter] = useState(0);\r\n  const [firstMoveOptionDisplay, setFirstMoveOptionDisplay] = useState(\"\");\r\n  const [secondMoveOptionDisplay, setSecondMoveOptionDisplay] = useState(\"\");\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n\r\n  useEffect(() => {\r\n    // firstMoveOption();\r\n    // secondMoveOption();\r\n  }, [refreshCounter]);\r\n\r\n  // const firstMoveOption = () => {\r\n  //   switch (status) {\r\n  //     case \"todo\":\r\n  //       return setFirstMoveOptionDisplay(\"Forward to In Progress\");\r\n  //       break;\r\n  //     case \"inProgress\":\r\n  //       return setFirstMoveOptionDisplay(\"Forward to Done\");\r\n  //       break;\r\n  //     case \"done\":\r\n  //       return setFirstMoveOptionDisplay(\"Return to In Progress\");\r\n  //       break;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  // const secondMoveOption = () => {\r\n  //   switch (status) {\r\n  //     case \"todo\":\r\n  //       return setSecondMoveOptionDisplay(\"Forward to Done\");\r\n  //       break;\r\n  //     case \"inProgress\":\r\n  //       return setSecondMoveOptionDisplay(\"Return to Todo\");\r\n  //       break;\r\n  //     case \"done\":\r\n  //       return setSecondMoveOptionDisplay(\"Return to Todo\");\r\n  //       break;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  const selectChange = (arrayToRemoveFrom, arrayToAddInto, destination) => {\r\n    const selectedTask = _.remove(arrayToRemoveFrom, n => {\r\n      return n.id === id;\r\n    });\r\n    console.log(\"selectedtask: \", selectedTask[0]);\r\n    const newStatusSelectedTask = {\r\n      ...selectedTask[0],\r\n      status: destination\r\n    };\r\n    arrayToAddInto.push(newStatusSelectedTask);\r\n\r\n    const updatedArrays = {\r\n      arrayToRemoveFrom,\r\n      arrayToAddInto\r\n    };\r\n\r\n    setCardIsFlipped(false);\r\n    setRefreshCounter(refreshCounter + 1);\r\n    dispatch(updateArraysAction(updatedArrays));\r\n  };\r\n\r\n  const handleFirstMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return selectChange(todoArray, inProgressArray, \"inProgress\");\r\n        break;\r\n      case \"inProgress\":\r\n        return selectChange(inProgressArray, completedTasksArray, \"done\");\r\n        break;\r\n      case \"done\":\r\n        return selectChange(completedTasksArray, inProgressArray, \"inProgress\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return selectChange(todoArray, completedTasksArray, \"done\");\r\n        break;\r\n      case \"inProgress\":\r\n        return selectChange(inProgressArray, todoArray, \"todo\");\r\n        break;\r\n      case \"done\":\r\n        return selectChange(completedTasksArray, todoArray, \"todo\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {};\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped}>\r\n      <FaceSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <Title>{title}</Title>\r\n          <Description>{description}</Description>\r\n          <Deadline>{deadline}</Deadline>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n\r\n        <MoveToButton onClick={handleFirstMove}>\r\n          {/* {firstMoveOptionDisplay} */}\r\n          {firstButtonText}\r\n        </MoveToButton>\r\n        <MoveToButton onClick={handleSecondMove}>\r\n          {/* {secondMoveOptionDisplay} */}\r\n          {secondButtonText}\r\n        </MoveToButton>\r\n        <DeleteTaskButton onClick={handleDelete}>\r\n          Delete Tracker\r\n        </DeleteTaskButton>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 5px;\r\n  height: 30%;\r\n  width: 90%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 20%;\r\n  width: 10%;\r\n  background: lightsteelblue;\r\n  border-radius: 10px 10px 0 10px;\r\n\r\n  div {\r\n    ${flexbox()};\r\n\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: lightcoral;\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 20%;\r\n  height: 20%;\r\n  width: 100%;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  flex-basis: 60%;\r\n  height: 70%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  background: lightsteelblue;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  flex-basis: 20%;\r\n  height: 10%;\r\n\r\n  width: 100%;\r\n  background: lightsteelblue;\r\n  border-radius: 0 0 10px 10px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MoveToButton = styled.div`\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  height: 33%;\r\n`;\r\n\r\nconst DeleteTaskButton = styled.div`\r\n  height: 33%;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}