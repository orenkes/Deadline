{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\TaskCreation\\\\TaskCreation.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox, borderShadowsRadius } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport TaskColorPicker from \"./TaskColorPicker\";\nimport TaskStatusSelect from \"./TaskStatusSelect\";\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\nimport createDateSum from \"../../SignUp/createDateSum\";\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\n\nconst TaskCreation = ({\n  setPopupIsOpen\n}) => {\n  const _useState = useState(\"turquoise\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        colorway = _useState2[0],\n        setColorway = _useState2[1];\n\n  const _useState3 = useState(\"todo\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useState5 = useState(\"low\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        urgency = _useState6[0],\n        setUrgency = _useState6[1];\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n\n  const _useState7 = useState(tasksArrays.tasksCounter),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tasksCounter = _useState8[0],\n        setTasksCounter = _useState8[1];\n\n  const dispatch = useDispatch();\n  const todoArray = tasksArrays.todoArray;\n  const inProgressArray = tasksArrays.inProgressArray;\n  const completedTasksArray = tasksArrays.completedTasksArray;\n  let getTasksCounter = tasksArrays.tasksCounter;\n\n  const updatingArraysInDataBase = async newTasksCounter => {\n    console.log(\"newTasksCounter\", newTasksCounter);\n    const updatedArrays = {\n      todoArray,\n      inProgressArray,\n      completedTasksArray,\n      tasksCounter: newTasksCounter\n    };\n    dispatch(updateArraysAction(updatedArrays));\n    console.log(\"updatedArrays\", updatedArrays);\n    const putMethod = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify(updatedArrays)\n    };\n    await fetch(`https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`, putMethod);\n    console.log(\"PUT ENDED\");\n  };\n\n  const createTask = e => {\n    e.preventDefault();\n\n    if (e.target[0].value === \"\" || e.target[1].value === \"\" || e.target[2].value === \"\") {\n      alert(\"One or more of the fields is empty\");\n    } else {\n      setPopupIsOpen(false);\n      console.log(getTasksCounter, \"tasksCounter before\");\n      const newTasksCounter = getTasksCounter + 1;\n      console.log(newTasksCounter, \"newTasksCounter after\");\n      const title = e.target[0].value;\n      const description = e.target[1].value;\n      const deadlineISO = e.target[2].value; //---TIME AND DATE SUM--//\n      // const reducer = (accumulator, currentValue) => accumulator + currentValue;\n      // const dateAndTimeArray = deadlineISO.split(\"T\");\n      // const date = dateAndTimeArray[0];\n      // const dateArray = date.split(\"-\");\n      // console.log(\"dateArray\", dateArray);\n      // const dateSum = dateArray.reduce(reducer);\n      // console.log(\"dateSum\", dateSum);\n      // const timeString = dateAndTimeArray[1];\n      // const timeArray = timeString.split(\":\");\n      // const timeSum = timeArray.reduce(reducer);\n      // console.log(\"timeSum\", timeSum);\n      // const dateAndTimeSum = dateSum + timeSum;\n      // console.log(\"dateAndTimeSum\", dateAndTimeSum);\n\n      const taskObject = {\n        id: newTasksCounter,\n        title,\n        description,\n        colorway,\n        status,\n        urgency,\n        deadlineISO,\n        dateAndTimeSum\n      };\n      console.log(taskObject, \"taskObject\");\n\n      switch (status) {\n        case \"todo\":\n          todoArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        case \"inProgress\":\n          inProgressArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        case \"done\":\n          completedTasksArray.push(taskObject);\n          updatingArraysInDataBase(newTasksCounter);\n          break;\n\n        default:\n          break;\n      }\n\n      e.target[0].value = \"\";\n      e.target[1].value = \"\";\n      e.target[2].value = \"\";\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TaskForm, {\n    onSubmit: createTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    type: \"text\",\n    placeholder: \"Task Title...\",\n    minLength: \"1\",\n    maxLength: \"22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(DescrptionInput, {\n    placeholder: \"Task Descrption...\",\n    minLength: \"1\",\n    maxLength: \"150\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(DeadlineInput, {\n    type: \"datetime-local\",\n    max: \"3000-01-01T00:00\",\n    min: \"2020-01-01T00:00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(TaskColorPicker, {\n    colorway: colorway,\n    setColorway: setColorway,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(TaskStatusSelect, {\n    status: status,\n    setStatus: setStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(TaskUrgencySelect, {\n    urgency: urgency,\n    setUrgency: setUrgency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(SubmitButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Add Deadline\")));\n};\n\nexport default TaskCreation;\nconst Container = styled.div`\n  ${borderShadowsRadius}\n  background: ${c.bgShyBlue};\n  width: 95%;\n  max-width: 500px;\n  height: 70%;\n  padding: 20px 0;\n\n  @media (max-width: 450px) {\n    height: 80%;\n  }\n`;\nconst TaskForm = styled.form`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n`;\nconst TitleInput = styled.input`\n  flex-basis: 10%;\n  height: 10%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: ${c.inputShyBlue};\n  box-shadow: ${c.inputShadows};\n  padding: 20px;\n  font-size: 1.4rem;\n  transition: 0.1s linear;\n\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nconst DescrptionInput = styled.textarea`\n  resize: none;\n  flex-basis: 30%;\n  height: 30%;\n  width: 90%;\n\n  border-radius: 5px;\n  border: none;\n  background: ${c.inputShyBlue};\n  box-shadow: ${c.inputShadows};\n  padding: 20px;\n  font-size: 1.1rem;\n\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  @media (max-width: 450px) {\n    flex-basis: 25%;\n    height: 25%;\n  }\n`;\nconst DeadlineInput = styled(TitleInput)`\n  text-align: center;\n`;\nconst SubmitButton = styled.button`\n  height: 50px;\n  width: 50%;\n  min-width: 250px;\n  border-radius: 5px;\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\n  border: none;\n  background: ${c.elmShyBlue};\n  font-size: 0.9rem;\n  color: ${c.darkBlueText};\n  text-shadow: 0 0 1px white;\n  opacity: 0.8;\n  transition: 0.3s ease-out;\n\n  outline: none;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    cursor: pointer;\n    background: ${c.elmLightBlue};\n  }\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/TaskCreation/TaskCreation.jsx"],"names":["React","useState","useEffect","styled","keyframes","useSelector","useDispatch","flexbox","borderShadowsRadius","c","TaskColorPicker","TaskStatusSelect","TaskUrgencySelect","createDateSum","updateArraysAction","TaskCreation","setPopupIsOpen","colorway","setColorway","status","setStatus","urgency","setUrgency","tasksArrays","state","updateArraysReducer","tasksCounter","setTasksCounter","dispatch","todoArray","inProgressArray","completedTasksArray","getTasksCounter","updatingArraysInDataBase","newTasksCounter","console","log","updatedArrays","putMethod","method","headers","localStorage","getItem","body","JSON","stringify","fetch","createTask","e","preventDefault","target","value","alert","title","description","deadlineISO","taskObject","id","dateAndTimeSum","push","Container","div","bgShyBlue","TaskForm","form","dir","jc","TitleInput","input","inputShyBlue","inputShadows","DescrptionInput","textarea","DeadlineInput","SubmitButton","button","elmShyBlue","darkBlueText","elmLightBlue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox, borderShadowsRadius } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport TaskColorPicker from \"./TaskColorPicker\";\r\nimport TaskStatusSelect from \"./TaskStatusSelect\";\r\nimport TaskUrgencySelect from \"./TaskUrgencySelect\";\r\n\r\nimport createDateSum from \"../../SignUp/createDateSum\";\r\n\r\nimport { updateArraysAction } from \"../../../state/actions/updateArraysAction\";\r\n\r\nconst TaskCreation = ({ setPopupIsOpen }) => {\r\n  const [colorway, setColorway] = useState(\"turquoise\");\r\n  const [status, setStatus] = useState(\"todo\");\r\n  const [urgency, setUrgency] = useState(\"low\");\r\n\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  const [tasksCounter, setTasksCounter] = useState(tasksArrays.tasksCounter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const todoArray = tasksArrays.todoArray;\r\n  const inProgressArray = tasksArrays.inProgressArray;\r\n  const completedTasksArray = tasksArrays.completedTasksArray;\r\n  let getTasksCounter = tasksArrays.tasksCounter;\r\n\r\n  const updatingArraysInDataBase = async newTasksCounter => {\r\n    console.log(\"newTasksCounter\", newTasksCounter);\r\n\r\n    const updatedArrays = {\r\n      todoArray,\r\n      inProgressArray,\r\n      completedTasksArray,\r\n      tasksCounter: newTasksCounter\r\n    };\r\n\r\n    dispatch(updateArraysAction(updatedArrays));\r\n\r\n    console.log(\"updatedArrays\", updatedArrays);\r\n\r\n    const putMethod = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \"auth-token\": localStorage.getItem(\"token\")\r\n      },\r\n      body: JSON.stringify(updatedArrays)\r\n    };\r\n\r\n    await fetch(\r\n      `https://tracker-database.youngwebdevs.now.sh/dashboard/updatingarrays`,\r\n      putMethod\r\n    );\r\n\r\n    console.log(\"PUT ENDED\");\r\n  };\r\n\r\n  const createTask = e => {\r\n    e.preventDefault();\r\n    if (\r\n      e.target[0].value === \"\" ||\r\n      e.target[1].value === \"\" ||\r\n      e.target[2].value === \"\"\r\n    ) {\r\n      alert(\"One or more of the fields is empty\");\r\n    } else {\r\n      setPopupIsOpen(false);\r\n      console.log(getTasksCounter, \"tasksCounter before\");\r\n      const newTasksCounter = getTasksCounter + 1;\r\n      console.log(newTasksCounter, \"newTasksCounter after\");\r\n\r\n      const title = e.target[0].value;\r\n      const description = e.target[1].value;\r\n      const deadlineISO = e.target[2].value;\r\n\r\n      //---TIME AND DATE SUM--//\r\n      // const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n      // const dateAndTimeArray = deadlineISO.split(\"T\");\r\n      // const date = dateAndTimeArray[0];\r\n      // const dateArray = date.split(\"-\");\r\n      // console.log(\"dateArray\", dateArray);\r\n      // const dateSum = dateArray.reduce(reducer);\r\n      // console.log(\"dateSum\", dateSum);\r\n      // const timeString = dateAndTimeArray[1];\r\n      // const timeArray = timeString.split(\":\");\r\n      // const timeSum = timeArray.reduce(reducer);\r\n      // console.log(\"timeSum\", timeSum);\r\n      // const dateAndTimeSum = dateSum + timeSum;\r\n      // console.log(\"dateAndTimeSum\", dateAndTimeSum);\r\n\r\n      const taskObject = {\r\n        id: newTasksCounter,\r\n        title,\r\n        description,\r\n        colorway,\r\n        status,\r\n        urgency,\r\n        deadlineISO,\r\n        dateAndTimeSum\r\n      };\r\n\r\n      console.log(taskObject, \"taskObject\");\r\n\r\n      switch (status) {\r\n        case \"todo\":\r\n          todoArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"inProgress\":\r\n          inProgressArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        case \"done\":\r\n          completedTasksArray.push(taskObject);\r\n          updatingArraysInDataBase(newTasksCounter);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      e.target[0].value = \"\";\r\n      e.target[1].value = \"\";\r\n      e.target[2].value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TaskForm onSubmit={createTask}>\r\n        <TitleInput\r\n          type=\"text\"\r\n          placeholder=\"Task Title...\"\r\n          minLength=\"1\"\r\n          maxLength=\"22\"\r\n        />\r\n        <DescrptionInput\r\n          placeholder=\"Task Descrption...\"\r\n          minLength=\"1\"\r\n          maxLength=\"150\"\r\n        />\r\n        <DeadlineInput\r\n          type=\"datetime-local\"\r\n          max=\"3000-01-01T00:00\"\r\n          min=\"2020-01-01T00:00\"\r\n        />\r\n\r\n        <TaskColorPicker colorway={colorway} setColorway={setColorway} />\r\n        <TaskStatusSelect status={status} setStatus={setStatus} />\r\n        <TaskUrgencySelect urgency={urgency} setUrgency={setUrgency} />\r\n        <SubmitButton type=\"submit\">Add Deadline</SubmitButton>\r\n      </TaskForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskCreation;\r\n\r\nconst Container = styled.div`\r\n  ${borderShadowsRadius}\r\n  background: ${c.bgShyBlue};\r\n  width: 95%;\r\n  max-width: 500px;\r\n  height: 70%;\r\n  padding: 20px 0;\r\n\r\n  @media (max-width: 450px) {\r\n    height: 80%;\r\n  }\r\n`;\r\n\r\nconst TaskForm = styled.form`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  flex-basis: 10%;\r\n  height: 10%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.4rem;\r\n  transition: 0.1s linear;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst DescrptionInput = styled.textarea`\r\n  resize: none;\r\n  flex-basis: 30%;\r\n  height: 30%;\r\n  width: 90%;\r\n\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: ${c.inputShyBlue};\r\n  box-shadow: ${c.inputShadows};\r\n  padding: 20px;\r\n  font-size: 1.1rem;\r\n\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    flex-basis: 25%;\r\n    height: 25%;\r\n  }\r\n`;\r\n\r\nconst DeadlineInput = styled(TitleInput)`\r\n  text-align: center;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  height: 50px;\r\n  width: 50%;\r\n  min-width: 250px;\r\n  border-radius: 5px;\r\n  box-shadow: -3px -3px 6px 0 rgba(242, 248, 250, 1),\r\n    3px 3px 6px 0 rgba(54, 73, 79, 0.25);\r\n  border: none;\r\n  background: ${c.elmShyBlue};\r\n  font-size: 0.9rem;\r\n  color: ${c.darkBlueText};\r\n  text-shadow: 0 0 1px white;\r\n  opacity: 0.8;\r\n  transition: 0.3s ease-out;\r\n\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n    background: ${c.elmLightBlue};\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}