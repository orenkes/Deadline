{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\SearchScreen.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport * as c from \"../../style/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\nimport TasksLister from \"./TasksLister\";\n\nconst SearchScreen = () => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchInput = _useState2[0],\n        setSearchInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filteredArray = _useState4[0],\n        setFilteredArray = _useState4[1];\n\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\n  const desktopView = useSelector(state => state.toggleViewReducer);\n  const currentTab = useSelector(state => state.markTabReducer); // const filteredArray = useSelector(state => state.filteringArraysReducer);\n\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  useEffect(() => {\n    dispatch(filteringArraysAction([...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray]));\n    setFilteredArray([...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray]);\n  }, []);\n\n  const getSearchInput = e => {\n    e.preventDefault();\n\n    if (e.target.value === \"\") {\n      dispatch(filteringArraysAction([...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray]));\n      setFilteredArray([...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray]);\n    } else {\n      setSearchInput(e.target.value);\n      let searchInput = e.target.value;\n      dispatch(filteringArraysAction([...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray]));\n      const filteringArrays = [...tasksArrays.todoArray, ...tasksArrays.inProgressArray, ...tasksArrays.completedTasksArray];\n      const filteredTasks = filteringArrays.filter(task => task.title.toUpperCase().includes(searchInput.toUpperCase()));\n      setFilteredArray(filteredTasks);\n    }\n  };\n\n  return React.createElement(SearchScreenBox, {\n    searchIsOpen: searchIsOpen,\n    desktopView: desktopView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(SearchHeadSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Search\"), React.createElement(SearchBodySection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(SearchForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    onChange: getSearchInput,\n    id: \"searchInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(SearchButtonSubmit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(SelectSortBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: console.log(\"hi\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Order By Deadline\"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: console.log(\"hi\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Order By Urgency\"))), React.createElement(TasksDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TasksLister, {\n    arrayToMap: filteredArray,\n    firstButtonText: \"firstButtonText\",\n    secondButtonText: \"secondButtonText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))));\n};\n\nexport default SearchScreen;\nconst SearchScreenBox = styled.div`\n  ${flexbox()};\n  display: ${({\n  searchIsOpen\n}) => searchIsOpen ? \"block\" : \"none\"};\n  width: 100%;\n  height: calc(100% - 70px);\n  background: linear-gradient(to bottom, #bbd2c5, #536976);\n  position: absolute;\n  bottom: 0;\n  z-index: 8;\n\n  @media (min-width: 767px) {\n    max-width: ${({\n  desktopView\n}) => desktopView ? \"1200px\" : \"500px\"};\n  }\n`;\nconst SearchHeadSection = styled.div`\n  ${flexbox()};\n  height: 10%;\n  width: 100%;\n  font-size: 3rem;\n  text-align: center;\n  color: white;\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: bold;\n  letter-spacing: 3px;\n`;\nconst SearchBar = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`;\nconst SearchBodySection = styled.div`\n  height: 85%;\n  width: 100%;\n`;\nconst SearchForm = styled.form`\n  border: 1px solid black;\n  ${flexbox()}\n  width: 100%;\n  position: relative;\n  flex-wrap: wrap;\n`;\nconst SearchInput = styled.input`\n  border: 1px solid ${c.bgSlateBlue};\n  width: 250px;\n  font-size: 1.1rem;\n  /* width: 130px; */\n`;\nconst SearchButtonSubmit = styled(MdKeyboardArrowRight)`\n  position: relative;\n  right: 17px;\n  /* top: 3px; */\n  background-color: white;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst SelectSortBox = styled.div`\n  ${flexbox()}\n  width: 100%;\n  border: 1px solid black;\n`;\nconst TasksDisplay = styled.div`\n  ${flexbox()};\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/SearchScreen.jsx"],"names":["React","useState","useEffect","styled","keyframes","flexbox","c","useDispatch","useSelector","MdKeyboardArrowRight","filteringArraysAction","TasksLister","SearchScreen","dispatch","searchInput","setSearchInput","filteredArray","setFilteredArray","loggedUser","state","userReducer","searchIsOpen","searchWindowReducer","desktopView","toggleViewReducer","currentTab","markTabReducer","tasksArrays","updateArraysReducer","todoArray","inProgressArray","completedTasksArray","getSearchInput","e","preventDefault","target","value","filteringArrays","filteredTasks","filter","task","title","toUpperCase","includes","console","log","SearchScreenBox","div","SearchHeadSection","SearchBar","SearchBodySection","SearchForm","form","SearchInput","input","bgSlateBlue","SearchButtonSubmit","SelectSortBox","TasksDisplay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport * as c from \"../../style/colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\r\n\r\nimport { filteringArraysAction } from \"../../state/actions/filteredTasksAction\";\r\n\r\nimport TasksLister from \"./TasksLister\";\r\n\r\nconst SearchScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [filteredArray, setFilteredArray] = useState([]);\r\n\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const searchIsOpen = useSelector(state => state.searchWindowReducer);\r\n  const desktopView = useSelector(state => state.toggleViewReducer);\r\n  const currentTab = useSelector(state => state.markTabReducer);\r\n  // const filteredArray = useSelector(state => state.filteringArraysReducer);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      filteringArraysAction([\r\n        ...tasksArrays.todoArray,\r\n        ...tasksArrays.inProgressArray,\r\n        ...tasksArrays.completedTasksArray\r\n      ])\r\n    );\r\n    setFilteredArray([\r\n      ...tasksArrays.todoArray,\r\n      ...tasksArrays.inProgressArray,\r\n      ...tasksArrays.completedTasksArray\r\n    ]);\r\n  }, []);\r\n\r\n  const getSearchInput = e => {\r\n    e.preventDefault();\r\n    if (e.target.value === \"\") {\r\n      dispatch(\r\n        filteringArraysAction([\r\n          ...tasksArrays.todoArray,\r\n          ...tasksArrays.inProgressArray,\r\n          ...tasksArrays.completedTasksArray\r\n        ])\r\n      );\r\n      setFilteredArray([\r\n        ...tasksArrays.todoArray,\r\n        ...tasksArrays.inProgressArray,\r\n        ...tasksArrays.completedTasksArray\r\n      ]);\r\n    } else {\r\n      setSearchInput(e.target.value);\r\n      let searchInput = e.target.value;\r\n      dispatch(\r\n        filteringArraysAction([\r\n          ...tasksArrays.todoArray,\r\n          ...tasksArrays.inProgressArray,\r\n          ...tasksArrays.completedTasksArray\r\n        ])\r\n      );\r\n      const filteringArrays = [\r\n        ...tasksArrays.todoArray,\r\n        ...tasksArrays.inProgressArray,\r\n        ...tasksArrays.completedTasksArray\r\n      ];\r\n\r\n      const filteredTasks = filteringArrays.filter(task =>\r\n        task.title.toUpperCase().includes(searchInput.toUpperCase())\r\n      );\r\n\r\n      setFilteredArray(filteredTasks);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchScreenBox searchIsOpen={searchIsOpen} desktopView={desktopView}>\r\n      <SearchBar>\r\n        <SearchHeadSection>Search</SearchHeadSection>\r\n        <SearchBodySection>\r\n          <SearchForm>\r\n            <SearchInput onChange={getSearchInput} id=\"searchInput\" />\r\n            <SearchButtonSubmit />\r\n            <SelectSortBox>\r\n              <input type=\"checkbox\" onClick={console.log(\"hi\")} />\r\n              <label>Order By Deadline</label>\r\n              <input type=\"checkbox\" onClick={console.log(\"hi\")} />\r\n              <label>Order By Urgency</label>\r\n            </SelectSortBox>\r\n          </SearchForm>\r\n          <TasksDisplay>\r\n            {\r\n              <TasksLister\r\n                arrayToMap={filteredArray}\r\n                firstButtonText={\"firstButtonText\"}\r\n                secondButtonText={\"secondButtonText\"}\r\n              />\r\n            }\r\n          </TasksDisplay>\r\n        </SearchBodySection>\r\n      </SearchBar>\r\n    </SearchScreenBox>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n\r\nconst SearchScreenBox = styled.div`\r\n  ${flexbox()};\r\n  display: ${({ searchIsOpen }) => (searchIsOpen ? \"block\" : \"none\")};\r\n  width: 100%;\r\n  height: calc(100% - 70px);\r\n  background: linear-gradient(to bottom, #bbd2c5, #536976);\r\n  position: absolute;\r\n  bottom: 0;\r\n  z-index: 8;\r\n\r\n  @media (min-width: 767px) {\r\n    max-width: ${({ desktopView }) => (desktopView ? \"1200px\" : \"500px\")};\r\n  }\r\n`;\r\n\r\nconst SearchHeadSection = styled.div`\r\n  ${flexbox()};\r\n  height: 10%;\r\n  width: 100%;\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  color: white;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: bold;\r\n  letter-spacing: 3px;\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n`;\r\n\r\nconst SearchBodySection = styled.div`\r\n  height: 85%;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  border: 1px solid black;\r\n  ${flexbox()}\r\n  width: 100%;\r\n  position: relative;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  border: 1px solid ${c.bgSlateBlue};\r\n  width: 250px;\r\n  font-size: 1.1rem;\r\n  /* width: 130px; */\r\n`;\r\n\r\nconst SearchButtonSubmit = styled(MdKeyboardArrowRight)`\r\n  position: relative;\r\n  right: 17px;\r\n  /* top: 3px; */\r\n  background-color: white;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SelectSortBox = styled.div`\r\n  ${flexbox()}\r\n  width: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst TasksDisplay = styled.div`\r\n  ${flexbox()};\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}