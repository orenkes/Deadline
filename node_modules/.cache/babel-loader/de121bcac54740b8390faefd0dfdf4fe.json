{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Task.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../style/mixins\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport { getUserAction } from \"../../state/actions/getUserAction\";\n\nconst Task = ({\n  title,\n  description,\n  deadline,\n  colorway,\n  status,\n  _id\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        firstMoveOption = _useState2[0],\n        setFirstMoveOption = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        secondMoveOption = _useState4[0],\n        setSecondMoveOption = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cardIsFlipped = _useState6[0],\n        setCardIsFlipped = _useState6[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.loggedUser[0]);\n  const loggedUserTodoArray = useSelector(state => state.loggedUser[0].todoArray);\n  const loggedUserInProgressArray = useSelector(state => state.loggedUser[0].inProgressArray);\n  const loggedUserDoneArray = useSelector(state => state.loggedUser[0].completedTasksArray);\n\n  const handleFirstMove = () => {\n    switch (status) {\n      case \"todo\":\n        const selectedTask = _.remove(loggedUserTodoArray, n => {\n          return n._id === _id;\n        });\n\n        loggedUserInProgressArray.push(selectedTask);\n\n        const updatedUser = _objectSpread({}, loggedUser, {\n          loggedUserTodoArray,\n          loggedUserInProgressArray\n        });\n\n        useDispatch(getUserAction(updatedUser));\n        setState(loggedUserInProgressArray.push(selectedTask));\n        return setFirstMoveOption(\"Forward to In Progress\"); // push > in progress\n\n        break;\n\n      case \"inprogress\":\n        return setFirstMoveOption(\"Forward to Done\"); // push > done\n\n        break;\n\n      case \"done\":\n        return setFirstMoveOption(\"Return to In Progress\"); // push back > in progress\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSecondMove = () => {\n    switch (status) {\n      case \"todo\":\n        return setSecondMoveOption(\"Forward to Done\"); // push > in Done\n\n        break;\n\n      case \"inprogress\":\n        return setSecondMoveOption(\"Return to Todo\"); // push back > todo\n\n        break;\n\n      case \"done\":\n        return setSecondMoveOption(\"Return to Todo\"); // push back > todo\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {};\n\n  return React.createElement(TaskContainer, {\n    cardIsFlipped: cardIsFlipped,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FaceSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"flip\")), React.createElement(DetailsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, title), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, description), React.createElement(Deadline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, deadline))), React.createElement(BackSide, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(OptionsButton, {\n    onClick: () => setCardIsFlipped(!cardIsFlipped),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"flip\")), React.createElement(MoveToButton, {\n    onClick: handleFirstMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, firstMoveOption), React.createElement(MoveToButton, {\n    onClick: handleSecondMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, secondMoveOption), React.createElement(DeleteTaskButton, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Delete Tracker\")));\n};\n\nexport default Task;\nconst TaskContainer = styled.div`\n  ${flexbox()}\n  border-radius: 5px;\n  height: 30%;\n  width: 90%;\n  margin: 20px auto;\n  position: relative;\n  background: white;\n  border-radius: 10px;\n\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n\n  transform: ${({\n  cardIsFlipped\n}) => cardIsFlipped ? \"perspective(2000) rotateY(180deg)\" : \"perspective(2000) rotateY(0deg)\"};\n`;\nconst FaceSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  height: 100%;\n  width: 100%;\n  perspective: 900px;\n`;\nconst OptionsButton = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 20%;\n  width: 10%;\n  background: lightsteelblue;\n  border-radius: 10px 10px 0 10px;\n\n  div {\n    ${flexbox()};\n\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    background: lightcoral;\n  }\n`;\nconst DetailsSection = styled.div`\n  ${flexbox({\n  dir: \"column\",\n  jc: \"space-around\"\n})}\n  height: 100%;\n  width: 100%;\n`;\nconst Title = styled.div`\n  flex-basis: 20%;\n  height: 20%;\n  width: 100%;\n  font-size: 1.3rem;\n  font-weight: bold;\n  padding: 5px;\n`;\nconst Description = styled.div`\n  flex-basis: 60%;\n  height: 70%;\n  width: 100%;\n  border-radius: 10px 0 0 0;\n  background: lightsteelblue;\n  padding: 5px;\n`;\nconst Deadline = styled.div`\n  flex-basis: 20%;\n  height: 10%;\n\n  width: 100%;\n  background: lightsteelblue;\n  border-radius: 0 0 10px 10px;\n  padding: 5px;\n`;\nconst BackSide = styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n\n  transform: rotateY(180deg);\n  perspective: 900px;\n\n  height: 100%;\n  width: 100%;\n`;\nconst MoveToButton = styled.div`\n  height: 33%;\n`;\nconst DeleteTaskButton = styled.div`\n  height: 33%;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Task.jsx"],"names":["React","useState","styled","flexbox","useSelector","useDispatch","_","getUserAction","Task","title","description","deadline","colorway","status","_id","firstMoveOption","setFirstMoveOption","secondMoveOption","setSecondMoveOption","cardIsFlipped","setCardIsFlipped","dispatch","loggedUser","state","loggedUserTodoArray","todoArray","loggedUserInProgressArray","inProgressArray","loggedUserDoneArray","completedTasksArray","handleFirstMove","selectedTask","remove","n","push","updatedUser","setState","handleSecondMove","handleDelete","TaskContainer","div","FaceSide","OptionsButton","DetailsSection","dir","jc","Title","Description","Deadline","BackSide","MoveToButton","DeleteTaskButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { flexbox } from \"../../style/mixins\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getUserAction } from \"../../state/actions/getUserAction\";\r\n\r\nconst Task = ({ title, description, deadline, colorway, status, _id }) => {\r\n  const [firstMoveOption, setFirstMoveOption] = useState(\"\");\r\n  const [secondMoveOption, setSecondMoveOption] = useState(\"\");\r\n  const [cardIsFlipped, setCardIsFlipped] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.loggedUser[0]);\r\n  const loggedUserTodoArray = useSelector(\r\n    state => state.loggedUser[0].todoArray\r\n  );\r\n  const loggedUserInProgressArray = useSelector(\r\n    state => state.loggedUser[0].inProgressArray\r\n  );\r\n  const loggedUserDoneArray = useSelector(\r\n    state => state.loggedUser[0].completedTasksArray\r\n  );\r\n\r\n  const handleFirstMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        const selectedTask = _.remove(loggedUserTodoArray, n => {\r\n          return n._id === _id;\r\n        });\r\n        loggedUserInProgressArray.push(selectedTask);\r\n\r\n        const updatedUser = {\r\n          ...loggedUser,\r\n          loggedUserTodoArray,\r\n          loggedUserInProgressArray\r\n        };\r\n\r\n        useDispatch(getUserAction(updatedUser));\r\n\r\n        setState(loggedUserInProgressArray.push(selectedTask));\r\n\r\n        return setFirstMoveOption(\"Forward to In Progress\");\r\n\r\n        // push > in progress\r\n        break;\r\n      case \"inprogress\":\r\n        return setFirstMoveOption(\"Forward to Done\");\r\n        // push > done\r\n        break;\r\n      case \"done\":\r\n        return setFirstMoveOption(\"Return to In Progress\");\r\n        // push back > in progress\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSecondMove = () => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return setSecondMoveOption(\"Forward to Done\");\r\n        // push > in Done\r\n        break;\r\n      case \"inprogress\":\r\n        return setSecondMoveOption(\"Return to Todo\");\r\n        // push back > todo\r\n        break;\r\n      case \"done\":\r\n        return setSecondMoveOption(\"Return to Todo\");\r\n        // push back > todo\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {};\r\n\r\n  return (\r\n    <TaskContainer cardIsFlipped={cardIsFlipped}>\r\n      <FaceSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n        <DetailsSection>\r\n          <Title>{title}</Title>\r\n          <Description>{description}</Description>\r\n          <Deadline>{deadline}</Deadline>\r\n        </DetailsSection>\r\n      </FaceSide>\r\n      <BackSide>\r\n        <OptionsButton onClick={() => setCardIsFlipped(!cardIsFlipped)}>\r\n          <div>flip</div>\r\n        </OptionsButton>\r\n\r\n        <MoveToButton onClick={handleFirstMove}>{firstMoveOption}</MoveToButton>\r\n        <MoveToButton onClick={handleSecondMove}>\r\n          {secondMoveOption}\r\n        </MoveToButton>\r\n        <DeleteTaskButton onClick={handleDelete}>\r\n          Delete Tracker\r\n        </DeleteTaskButton>\r\n      </BackSide>\r\n    </TaskContainer>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\nconst TaskContainer = styled.div`\r\n  ${flexbox()}\r\n  border-radius: 5px;\r\n  height: 30%;\r\n  width: 90%;\r\n  margin: 20px auto;\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 10px;\r\n\r\n  transition: transform 0.8s;\r\n  transform-style: preserve-3d;\r\n\r\n  transform: ${({ cardIsFlipped }) =>\r\n    cardIsFlipped\r\n      ? \"perspective(2000) rotateY(180deg)\"\r\n      : \"perspective(2000) rotateY(0deg)\"};\r\n`;\r\n\r\nconst FaceSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  height: 100%;\r\n  width: 100%;\r\n  perspective: 900px;\r\n`;\r\n\r\nconst OptionsButton = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 20%;\r\n  width: 10%;\r\n  background: lightsteelblue;\r\n  border-radius: 10px 10px 0 10px;\r\n\r\n  div {\r\n    ${flexbox()};\r\n\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: lightcoral;\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  ${flexbox({ dir: \"column\", jc: \"space-around\" })}\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  flex-basis: 20%;\r\n  height: 20%;\r\n  width: 100%;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  flex-basis: 60%;\r\n  height: 70%;\r\n  width: 100%;\r\n  border-radius: 10px 0 0 0;\r\n  background: lightsteelblue;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Deadline = styled.div`\r\n  flex-basis: 20%;\r\n  height: 10%;\r\n\r\n  width: 100%;\r\n  background: lightsteelblue;\r\n  border-radius: 0 0 10px 10px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst BackSide = styled.div`\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY(180deg);\r\n  perspective: 900px;\r\n\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst MoveToButton = styled.div`\r\n  height: 33%;\r\n`;\r\n\r\nconst DeleteTaskButton = styled.div`\r\n  height: 33%;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}