{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\Todo\\\\Todo.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { flexbox } from \"../../../style/mixins\";\nimport * as c from \"../../../style/colors\";\nimport Task from \"../Task/Task\"; //-------- Redux --------//\n\nimport { markTodo } from \"../../../state/actions/markTabAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport TasksLister from \"../TasksLister\";\n\nconst Todo = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        refreshCounter = _useState2[0],\n        setRefreshCounter = _useState2[1];\n\n  const _useInView = useInView({\n    threshold: 0.5\n  }),\n        _useInView2 = _slicedToArray(_useInView, 2),\n        ref = _useInView2[0],\n        inView = _useInView2[1];\n\n  const dispatch = useDispatch();\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n  useEffect(() => {\n    dispatchCurrentTab();\n  }, [inView]);\n\n  const dispatchCurrentTab = () => {\n    if (inView) {\n      dispatch(markTodo());\n    }\n  };\n\n  return React.createElement(Wrapper, {\n    id: \"todo\",\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, tasksArrays.todoArray.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"loading\") : React.createElement(TasksLister, {\n    arrayToMap: tasksArrays.todoArray,\n    firstButtonText: \"Forward to In Progress\",\n    secondButtonText: \"Forward to Done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default Todo;\nconst Wrapper = styled.div`\n  vertical-align: top;\n  ${flexbox()};\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n\n  background: ${c.gradientBlue};\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\n`; // const TasksList = styled.div`\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\n//   height: 100%;\n//   width: 100%;\n//   overflow-y: auto;\n// `;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/Todo/Todo.jsx"],"names":["React","useState","useEffect","styled","flexbox","c","Task","markTodo","useSelector","useDispatch","useInView","TasksLister","Todo","refreshCounter","setRefreshCounter","threshold","ref","inView","dispatch","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","dispatchCurrentTab","todoArray","length","Wrapper","div","gradientBlue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,uBAAnB;AAEA,OAAOC,IAAP,MAAiB,cAAjB,C,CACA;;AACA,SAASC,QAAT,QAAyB,sCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAC2BX,QAAQ,CAAC,CAAD,CADnC;AAAA;AAAA,QACVY,cADU;AAAA,QACMC,iBADN;;AAAA,qBAEKJ,SAAS,CAAC;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAAD,CAFd;AAAA;AAAA,QAEVC,GAFU;AAAA,QAELC,MAFK;;AAIjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAV,CAA9B;AACA,QAAMC,WAAW,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,mBAAhB,CAA/B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACP,MAAD,CAFM,CAAT;;AAIA,QAAMO,kBAAkB,GAAG,MAAM;AAC/B,QAAIP,MAAJ,EAAY;AACVC,MAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AACD;AACF,GAJD;;AAMA,SACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAES,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,WAAW,CAACG,SAAZ,CAAsBC,MAAtB,GAA+B,CAA/B,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,GAGC,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEJ,WAAW,CAACG,SAD1B;AAEE,IAAA,eAAe,EAAE,wBAFnB;AAGE,IAAA,gBAAgB,EAAE,iBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAaD,CA/BD;;AAiCA,eAAeb,IAAf;AAEA,MAAMe,OAAO,GAAGxB,MAAM,CAACyB,GAAI;;IAEvBxB,OAAO,EAAG;;;;;;;gBAOEC,CAAC,CAACwB,YAAa;;;CAT/B,C,CAcA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport * as c from \"../../../style/colors\";\r\n\r\nimport Task from \"../Task/Task\";\r\n//-------- Redux --------//\r\nimport { markTodo } from \"../../../state/actions/markTabAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport TasksLister from \"../TasksLister\";\r\n\r\nconst Todo = () => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n  const [ref, inView] = useInView({ threshold: 0.5 });\r\n\r\n  const dispatch = useDispatch();\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n\r\n  useEffect(() => {\r\n    dispatchCurrentTab();\r\n  }, [inView]);\r\n\r\n  const dispatchCurrentTab = () => {\r\n    if (inView) {\r\n      dispatch(markTodo());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper id=\"todo\" ref={ref}>\r\n      {tasksArrays.todoArray.length > 0 ? (\r\n        <div>loading</div>\r\n      ) : (\r\n        <TasksLister\r\n          arrayToMap={tasksArrays.todoArray}\r\n          firstButtonText={\"Forward to In Progress\"}\r\n          secondButtonText={\"Forward to Done\"}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n\r\nconst Wrapper = styled.div`\r\n  vertical-align: top;\r\n  ${flexbox()};\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: ${c.gradientBlue};\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\r\n`;\r\n\r\n// const TasksList = styled.div`\r\n//   /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n//   height: 100%;\r\n//   width: 100%;\r\n//   overflow-y: auto;\r\n// `;\r\n"]},"metadata":{},"sourceType":"module"}