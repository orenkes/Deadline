{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\orenk\\\\Desktop\\\\Netcraft\\\\projects\\\\tracker\\\\tracker\\\\src\\\\view\\\\Dashbord\\\\InProgress\\\\InProgress.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { flexbox } from \"../../../style/mixins\";\nimport Task from \"../Task\";\n\nconst InProgress = () => {\n  const loggedUser = useSelector(state => state.userReducer[0]);\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        refreshCounter = _useState2[0],\n        setRefreshCounter = _useState2[1];\n\n  useEffect(() => {\n    todoTasks();\n    console.log(\"tasksArrays\", tasksArrays);\n  }, [refreshCounter]);\n\n  const todoTasks = () => {\n    return tasksArrays.inProgressArray.map((task, index) => {\n      return React.createElement(Task, {\n        id: task.id,\n        key: index,\n        title: task.title,\n        description: task.description,\n        deadline: task.deadline,\n        colorway: task.colorway,\n        status: task.status,\n        refreshCounter: refreshCounter,\n        setRefreshCounter: setRefreshCounter,\n        firstButtonText: \"Forward to Done\",\n        secondButtonText: \"Return to Todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(Wrapper, {\n    id: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TasksList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, todoTasks()));\n};\n\nexport default InProgress;\nconst Wrapper = styled.div`\n  /* without vertical-align the inline-blocks moves down */\n  vertical-align: top;\n  scroll-snap-align: center;\n  scroll-snap-stop: always;\n\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n\n  background: ${c.gradientBlue};\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\n`;\nconst TasksList = styled.div`\n  /* ${flexbox({\n  dir: \"column\",\n  jc: \"flex-start\"\n})}; */\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n`;","map":{"version":3,"sources":["C:/Users/orenk/Desktop/Netcraft/projects/tracker/tracker/src/view/Dashbord/InProgress/InProgress.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","flexbox","Task","InProgress","loggedUser","state","userReducer","tasksArrays","updateArraysReducer","refreshCounter","setRefreshCounter","todoTasks","console","log","inProgressArray","map","task","index","id","title","description","deadline","colorway","status","Wrapper","div","c","gradientBlue","TasksList","dir","jc"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkB,CAAlB,CAAV,CAA9B;AACA,QAAMC,WAAW,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,mBAAhB,CAA/B;;AAFuB,oBAGqBZ,QAAQ,CAAC,CAAD,CAH7B;AAAA;AAAA,QAGhBa,cAHgB;AAAA,QAGAC,iBAHA;;AAKvBb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,WAA3B;AACD,GAHQ,EAGN,CAACE,cAAD,CAHM,CAAT;;AAKA,QAAME,SAAS,GAAG,MAAM;AACtB,WAAOJ,WAAW,CAACO,eAAZ,CAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtD,aACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,GAAG,EAAED,KAFP;AAGE,QAAA,KAAK,EAAED,IAAI,CAACG,KAHd;AAIE,QAAA,WAAW,EAAEH,IAAI,CAACI,WAJpB;AAKE,QAAA,QAAQ,EAAEJ,IAAI,CAACK,QALjB;AAME,QAAA,QAAQ,EAAEL,IAAI,CAACM,QANjB;AAOE,QAAA,MAAM,EAAEN,IAAI,CAACO,MAPf;AAQE,QAAA,cAAc,EAAEd,cARlB;AASE,QAAA,iBAAiB,EAAEC,iBATrB;AAUE,QAAA,eAAe,EAAE,iBAVnB;AAWE,QAAA,gBAAgB,EAAE,gBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD,KAhBM,CAAP;AAiBD,GAlBD;;AAoBA,SACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYC,SAAS,EAArB,CADF,CADF;AAKD,CAnCD;;AAqCA,eAAeR,UAAf;AAEA,MAAMqB,OAAO,GAAG1B,MAAM,CAAC2B,GAAI;;;;;;;;;;gBAUXC,CAAC,CAACC,YAAa;;;CAV/B;AAeA,MAAMC,SAAS,GAAG9B,MAAM,CAAC2B,GAAI;OACtBxB,OAAO,CAAC;AAAE4B,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CAAD,CAAsC;;;;CADpD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\n\r\nimport Task from \"../Task\";\r\n\r\nconst InProgress = () => {\r\n  const loggedUser = useSelector(state => state.userReducer[0]);\r\n  const tasksArrays = useSelector(state => state.updateArraysReducer);\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    todoTasks();\r\n    console.log(\"tasksArrays\", tasksArrays);\r\n  }, [refreshCounter]);\r\n\r\n  const todoTasks = () => {\r\n    return tasksArrays.inProgressArray.map((task, index) => {\r\n      return (\r\n        <Task\r\n          id={task.id}\r\n          key={index}\r\n          title={task.title}\r\n          description={task.description}\r\n          deadline={task.deadline}\r\n          colorway={task.colorway}\r\n          status={task.status}\r\n          refreshCounter={refreshCounter}\r\n          setRefreshCounter={setRefreshCounter}\r\n          firstButtonText={\"Forward to Done\"}\r\n          secondButtonText={\"Return to Todo\"}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper id=\"progress\">\r\n      <TasksList>{todoTasks()}</TasksList>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default InProgress;\r\n\r\nconst Wrapper = styled.div`\r\n  /* without vertical-align the inline-blocks moves down */\r\n  vertical-align: top;\r\n  scroll-snap-align: center;\r\n  scroll-snap-stop: always;\r\n\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: ${c.gradientBlue};\r\n  box-shadow: inset 2px 2px 6px rgba(54, 73, 79, 0.15),\r\n    inset -2px -2px 8px rgba(242, 248, 250, 0.2);\r\n`;\r\n\r\nconst TasksList = styled.div`\r\n  /* ${flexbox({ dir: \"column\", jc: \"flex-start\" })}; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}